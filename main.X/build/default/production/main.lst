MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;******************************************************************************;
                      00002 ;        ____    ___  ______    ___  ____       ____  ____  ____    ___  ____  ;
                      00003 ;       |    \  /  _]|      T  /  _]|    \     |    \l    j|    \  /  _]|    \ ;
                      00004 ;       |  o  )/  [_ |      | /  [_ |  D  )    |  o  )|  T |  o  )/  [_ |  D  );
                      00005 ;       |   _/Y    _]l_j  l_jY    _]|    /     |   _/ |  | |   _/Y    _]|    / ;
                      00006 ;       |  |  |   [_   |  |  |   [_ |    \     |  |   |  | |  |  |   [_ |    \ ;
                      00007 ;       |  |  |     T  |  |  |     T|  .  Y    |  |   j  l |  |  |     T|  .  Y;
                      00008 ;       l__j  l_____j  l__j  l_____jl__j\_j    l__j  |____jl__j  l_____jl__j\_j;
                      00009 ;------------------------------------------------------------------------------;
                      00010 ;               AER201 Team 61 'Peter Piper' Pipe Inspector                    ;
                      00011 ;                        Author: Omar Abdeldayem                               ;
                      00012 ;                           Created: 1/12/2016                                 ;
                      00013 ;------------------------------------------------------------------------------;
                      00014 ; DESCRIPTION:                                                                                          
                                                               ;
                      00015 ; It does shit, yo.                                                                                     
                                                               ;
                      00016 ;******************************************************************************;
                      00017 ;******************************************************************************;
                      00018 ;******************************************************************************;
                      00019 
                      00020         List    p=16f877                    ; list directive to define processor
                      00021         #include        <p16f877.inc>       ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
2007   3F72           00022         __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP
                            _OFF
                      00023 
                      00024         #include        <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel     0x74
                      00011         clrf        0x74
                      00012         banksel     0x73
                      00013         clrf        0x73
                      00014         call        write_rtc           ;Write 0 to Seconds
                      00015         banksel     0x73
                      00016         incf        0x73                        ;Set register address to 1
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00017         call        write_rtc
                      00018         banksel     0x73
                      00019         incf        0x73                        ;Set register address to 2
                      00020         call        write_rtc
                      00021         banksel     0x73
                      00022         incf        0x73                        ;Set register address to 3
                      00023         call        write_rtc
                      00024         banksel     0x73
                      00025         incf        0x73                        ;Set register address to 4
                      00026         call        write_rtc
                      00027         banksel     0x73
                      00028         incf        0x73                        ;Set register address to 5
                      00029         call        write_rtc
                      00030         banksel     0x73
                      00031         incf        0x73                        ;Set register address to 6
                      00032         call        write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set macro       addliteral, datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel     0x73
                      00042         movlw       addliteral
                      00043         movwf       0x73
                      00044         banksel     0x74
                      00045         movlw       datliteral
                      00046         movwf       0x74        
                      00047         call        write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read macro      addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw       addliteral
                      00058         banksel     0x73
                      00059         movwf       0x73
                      00060         call        read_rtc
                      00061         banksel     0x75
                      00062         movf        0x75,w
                      00063         call        rtc_convert   
                      00064         endm
                      00065 
                      00066 
                      00067 
                      00068 
                      00069 
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00070 
                      00025         #include        <lcd.inc>
  0000                00001     extern      InitLCD,WR_INS,WR_DATA,CLR_LCD
                      00002 
                      00003 
                      00026 ;******************************************************************************;
                      00027 ;                               BANK0 RAM                                      ;
                      00028 ;******************************************************************************;
                      00029         CBLOCK      0x30
                      00030                     ; RTC I2C Mem
  00000030            00031         dt1         ; 0x30          
  00000031            00032         dt2
  00000032            00033         dt3
  00000033            00034         XBUF
  00000034            00035         count
  00000035            00036         CONTROL
  00000036            00037         ADD
  00000037            00038         DAT
  00000038            00039         flag
  00000039            00040         DOUT
  0000003A            00041         B1
  0000003B            00042         B2
                      00043                     ; LCD MEM
  0000003C            00044         lcd_tmp
  0000003D            00045         lcd_d1
  0000003E            00046         lcd_d2
  0000003F            00047         long_del
  00000040            00048         temp_w      ; 0x40
  00000041            00049         temp_status ; 0x41
                      00050                     ; DIVISION Registers
  00000042            00051         DIV_HI      ; 0X42
  00000043            00052         DIV_LO      ; 0X43
  00000044            00053         DIVISOR     ; 0X44
  00000045            00054         Q
  00000046            00055         d1
  00000047            00056         d2
  00000048            00057         d3
                      00058                     ; ROBOT VARS
  00000049            00059         start_min
  0000004A            00060         start_min10
  0000004B            00061         start_sec
  0000004C            00062         start_sec10
  0000004D            00063         stop_min
  0000004E            00064         stop_min10
  0000004F            00065         stop_sec
  00000050            00066         stop_sec10
  00000051            00067         spot_detected
  00000052            00068         multiplex_count
  00000053            00069         rob_lat_distance
  00000054            00070         rob_long_distance
  00000055            00071         measured_distance
  00000056            00072         rob_return
  00000057            00073         spot_count
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000058            00074         num_spots
  00000059            00075         spot_base_loc
                      00076         ENDC
                      00077 
                      00078 ;******************************************************************************;
                      00079 ;                               BANK0 RAM                                      ;
                      00080 ;******************************************************************************;
                      00081         #define     crit_dist       d'5'
                      00082 ;******************************************************************************;
                      00083 ;                               MACROS                                         ;
                      00084 ;******************************************************************************;
                      00085 MULT    macro       val1, val2, result
                      00086         MOVF        val1, W
                      00087         ADDWF       val1, W
                      00088         MOVWF       result
                      00089         DECFSZ      val2, f
                      00090         GOTO        $-3
                      00091         endm
                      00092         
                      00093 WRT_LCD macro       val
                      00094         MOVLW       val
                      00095         CALL        WR_DATA
                      00096         endm
                      00097 LCD_INS macro       val
                      00098         MOVLW       val
                      00099         CALL        WR_INS
                      00100         endm
                      00101         
                      00102 WRT_MEM_LCD macro   val
                      00103         MOVFW       val
                      00104         CALL        WR_DATA
                      00105         endm
                      00106 
                      00107 ;******************************************************************************;
                      00108 ;                          VECTOR TABLE                                        ;
                      00109 ;******************************************************************************;
                      00110         ORG         0x0000              ; RESET vector must always be at 0x00
0000   2???           00111         GOTO        INIT                ; Just jump to the main code section.
                      00112         ORG         0x0004
0004   2???           00113         GOTO        INT_HANDLER
                      00114 
                      00115 ;******************************************************************************;
                      00116 ;                         ROBOT INITIALIZATION                                 ;
                      00117 ;******************************************************************************;
0005                  00118 INIT
0005   1683           00119         BSF         STATUS, RP0         ; Select bank 1
0006   018B           00120         CLRF        INTCON              ; Disable interrupts for now
                      00121         
0007   3006           00122         MOVLW       0x06
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0008   009F           00123         MOVWF       ADCON1
                      00124         
0009   3018           00125         MOVLW       b'00011000'         ; PORT A pin mapping
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000A   0085           00126         MOVWF       TRISA
000B   30F3           00127         MOVLW       b'11110011'         ; PORT B pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000C   0086           00128         MOVWF       TRISB
000D   3079           00129         MOVLW       b'01111001'         ; PORT C pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000E   0087           00130         MOVWF       TRISC
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000F   0188           00131         CLRF        TRISD               ; PORT D pin mapping
0010   3007           00132         MOVLW       b'00000111'         ; PORT E pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0011   0089           00133         MOVWF       TRISE
                      00134         
0012   3041           00135         MOVLW       b'01000001'         ; PWM pulsing period (484Hz)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0013   0092           00136         MOVWF       PR2
                      00137        
0014   1283           00138         BCF         STATUS, RP0         ; select bank 0
                      00139         
                      00140 ;       
                      00141         
0015   0195           00142         CLRF        CCPR1L              ; Se Btup PWM pins
0016   019B           00143         CLRF        CCPR2L
0017   309C           00144         MOVLW       B'10011100'
0018   0097           00145         MOVWF       CCP1CON
0019   009D           00146         MOVWF       CCP2CON
                      00147         
001A   3005           00148         MOVLW       B'00000101'         ; Initialize and start timer 2
001B   0092           00149         MOVWF       T2CON
001C   0191           00150         CLRF        TMR2
001D   1512           00151         BSF         T2CON, TMR2ON
                      00152         
001E   3010           00153         MOVLW       0X10                ; TMR1 for Ultrasonic Sensors
001F   0090           00154         MOVWF       T1CON
0020   018F           00155         CLRF        TMR1H
0021   018E           00156         CLRF        TMR1L
                      00157         
0022   0185           00158         clrf        PORTA
0023   0186           00159         clrf        PORTB
0024   0187           00160         clrf        PORTC 
0025   0188           00161         clrf        PORTD
                      00162          
                      00163 ;       CALL        i2c_common_setup
                      00164 ;                   rtc_resetAll
                      00165 ;       CALL        SET_RTC_TIME
0026   2???           00166         CALL        InitLCD
                      00167         
0027   3000           00168         MOVLW       b'0'                ; Initialize variables
0028   00D8           00169         MOVWF       num_spots
0029   00D7           00170         MOVWF       spot_count
002A   00D1           00171         MOVWF       spot_detected       
                      00172                                                 
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002B   2???           00173         CALL        START_MSG
                      00174 ;******************************************************************************;
                      00175 ;                        ROBOT START AND STANDBY                               ;
                      00176 ;******************************************************************************;
002C                  00177 START_STDBY
002C   1C86           00178         BTFSS       PORTB, 1            ; Wait until data is available from the keypad
002D   2???           00179         GOTO        START_STDBY
                      00180 
002E   0E06           00181         SWAPF       PORTB, W            ; Read PortB<7:4> into W<3:0>
002F   390F           00182         ANDLW       0x0F
0030   2???           00183         CALL        CLR_LCD
                      00184 
0031   1886           00185         BTFSC       PORTB,1             ; Wait until key is released
0032   2???           00186         GOTO        $-1
                      00187         
0033   2???           00188         CALL        CLR_LCD
                      00189         ;CALL       GET_START_TIME
0034   2???           00190         CALL        ARM_TOGGLE
0035   1788           00191         BSF         PORTD, 7
0036   1708           00192         BSF         PORTD, 6
0037   2???           00193         GOTO        CALIBRATE
                      00194 
                      00195 ;******************************************************************************;
                      00196 ;                           SENSOR CALIBRATION                                 ;
                      00197 ;******************************************************************************;
0038                  00198 CALIBRATE
0038   2???           00199         CALL        PWML
0039   2???           00200         CALL        PWMR
003A   2???           00201         CALL        USONIC_SEND_PULSE
003B   2???           00202         CALL        USONIC_READ_ECHO
003C   0853           00203         MOVFW       rob_lat_distance
003D   3C04           00204         SUBLW       0x04
003E   1D03           00205         BTFSS       STATUS, 2
003F   2???           00206         GOTO        CALIBRATE
0040   158B           00207         BSF         INTCON, RBIE            ; Enable interrupts
0041   160B           00208         BSF         INTCON, INTE
0042   178B           00209         BSF         INTCON, GIE
0043   2???           00210         GOTO        SCAN
                      00211         
                      00212 ;******************************************************************************;
                      00213 ;                         PIPE SCAN SUPERLOOP                                  ;
                      00214 ;******************************************************************************;
0044                  00215 SCAN
                      00216 ;       CALL        USONIC_SEND_PULSE
                      00217 ;       CALL        USONIC_READ_ECHO
0044   2???           00218         CALL        PWML
0045   2???           00219         CALL        PWMR
                      00220 ;       CALL        SHOW_RTC                ; DEBUG
                      00221         ;CALL       READ_IRS
0046   2???           00222         GOTO        SCAN
                      00223         
                      00224 ;******************************************************************************;
                      00225 ;                          INTERRUPT HANDLER                                   ;
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00226 ;******************************************************************************;
0047                  00227 INT_HANDLER
0047   00C0           00228         MOVWF       temp_w
0048   0E03           00229         SWAPF       STATUS, W
0049   00C1           00230         MOVWF       temp_status
004A   100B           00231         BCF         INTCON, RBIF
004B   108B           00232         BCF         INTCON, INTF          ; Clear the interrupt flag
                      00233         
004C   2???           00234         CALL        WHL_ENC
                      00235         
004D   0E41           00236         SWAPF       temp_status, W
004E   0083           00237         MOVWF       STATUS
004F   0EC0           00238         SWAPF       temp_w, F
0050   0E40           00239         SWAPF       temp_w, W
0051   2???           00240         GOTO        STOP_STDBY
0052   0009           00241         RETFIE
                      00242         
                      00243 ;******************************************************************************;
                      00244 ;                           PWM CONTROL                                        ;
                      00245 ;******************************************************************************;
0053                  00246 PWML    
Message[305]: Using default destination of 1 (file).
0053   0F95           00247         INCFSZ      CCPR1L
                      00248         ;CALL       DEL_20US
                      00249         ;CALL       DEL_20US
0054   2???           00250         GOTO        PWML
0055                  00251 PWML_DN 
Message[305]: Using default destination of 1 (file).
0055   0B95           00252         DECFSZ      CCPR1L
0056   2???           00253         GOTO        PWML_DN
0057   0008           00254         RETURN
                      00255 
0058                  00256 PWMR    
Message[305]: Using default destination of 1 (file).
0058   0F9B           00257         INCFSZ      CCPR2L
                      00258         ;CALL       DEL_20US
0059   2???           00259         GOTO        PWMR
005A                  00260 PWMR_DN 
Message[305]: Using default destination of 1 (file).
005A   0B9B           00261         DECFSZ      CCPR2L
005B   2???           00262         GOTO        PWMR_DN
005C   0008           00263         RETURN
                      00264 
                      00265 ;******************************************************************************;
                      00266 ;                       CYCLE INFRARED SENSORS                                 ;
                      00267 ;******************************************************************************;
005D                  00268 READ_IRS
005D   3000           00269         MOVLW       d'0'
005E   00D2           00270         MOVWF       multiplex_count
005F                  00271 MX_LOOP 
                      00272         ;CALL       LONG_DLY
005F   1009           00273         BCF         PORTE, 0
0060   1852           00274         BTFSC       multiplex_count, 0
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0061   1409           00275         BSF         PORTE, 0
0062   1005           00276         BCF         PORTA, 0
0063   18D2           00277         BTFSC       multiplex_count, 1
0064   1405           00278         BSF         PORTA, 0
0065   1085           00279         BCF         PORTA, 1
0066   1952           00280         BTFSC       multiplex_count, 2
0067   1485           00281         BSF         PORTA, 1
0068   1105           00282         BCF         PORTA, 2
0069   19D2           00283         BTFSC       multiplex_count, 3
006A   1505           00284         BSF         PORTA, 2
                      00285         
006B   2???           00286         CALL        LONG_DLY
006C   2???           00287         CALL        LONG_DLY
006D   2???           00288         CALL        LONG_DLY
006E   2???           00289         CALL        LONG_DLY    
006F   2???           00290         CALL        LONG_DLY
0070   2???           00291         CALL        LONG_DLY
0071   2???           00292         CALL        LONG_DLY
0072   2???           00293         CALL        LONG_DLY
0073   2???           00294         CALL        LONG_DLY
0074   2???           00295         CALL        LONG_DLY
0075   2???           00296         CALL        LONG_DLY
0076   2???           00297         CALL        LONG_DLY
0077   2???           00298         CALL        LONG_DLY
                      00299         
0078   1C07           00300         BTFSS       PORTC, 0
0079   2???           00301         GOTO        $+3
007A   1685           00302         BSF         PORTA, 5                            ; Buzzer start
007B   0854           00303         MOVFW       rob_long_distance                   ; Save spot location
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
007C   07B1           00304         ADDWF       (spot_base_loc + num_spots), F
007D   0AD8           00305         INCF        num_spots, f                        ; Increase number of spots
Message[305]: Using default destination of 1 (file).
007E   0AD2           00306         INCF        multiplex_count
007F   0852           00307         MOVFW       multiplex_count
0080   1285           00308         BCF         PORTA, 5                            ; Buzzer stop
0081   3C10           00309         SUBLW       d'16'                               ; Test if all IRs have been checked
0082   1D03           00310         BTFSS       STATUS, 2
0083   2???           00311         GOTO        MX_LOOP
0084   0008           00312         RETURN
                      00313 ;******************************************************************************;
                      00314 ;                         WHEEL ENCODER ROUTINE                                ;
                      00315 ;******************************************************************************;
0085                  00316 WHL_ENC
0085   3013           00317         MOVLW       d'19'
Message[305]: Using default destination of 1 (file).
0086   07D4           00318         ADDWF       rob_long_distance
0087   0008           00319         RETURN
                      00320         
                      00321 ;******************************************************************************;
                      00322 ;                       TOGGLE ARM STATE ROUTINE                               ;
                      00323 ;******************************************************************************;
0088                  00324 ARM_TOGGLE
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00325         ; control servo to control arm
                      00326         ; if degree is set to 180, set to 0
                      00327         ; otherwise set to 0
0088   2???           00328         GOTO        ARM_TOGGLE
                      00329 
                      00330 ;******************************************************************************;
                      00331 ;                         ROBOT REALIGNMENT ROUTINE                            ;
                      00332 ;******************************************************************************;
0089                  00333 REALIGN
0089   3003           00334         MOVLW       0x03
                      00335 ;       SUBWF       
008A   0008           00336         RETURN
                      00337         
                      00338 ;******************************************************************************;
                      00339 ;                     ULTRASONIC SENSOR SUBROUTINES                            ;
                      00340 ;******************************************************************************;
008B                  00341 USONIC_SEND_PULSE
008B   1586           00342         BSF         PORTB, 3
008C   2???           00343         CALL        DEL_20US
008D   1186           00344         BCF         PORTB, 3
008E   0008           00345         RETURN
                      00346 
008F                  00347 USONIC_READ_ECHO
008F   1E06           00348         BTFSS       PORTB, 4
0090   2???           00349         GOTO        $-1
0091   1410           00350         BSF         T1CON, 0
0092   1A06           00351 USHOLD  BTFSC       PORTB, 4
0093   2???           00352         GOTO        USHOLD
0094   1010           00353         BCF         T1CON, 0
0095   080F           00354         MOVF        TMR1H, W
0096   00C2           00355         MOVWF       DIV_HI
0097   080E           00356         MOVF        TMR1L, W
0098   00C3           00357         MOVWF       DIV_LO
0099   018F           00358         CLRF        TMR1H
009A   018E           00359         CLRF        TMR1L
009B   303A           00360         MOVLW       d'58'
009C   00C4           00361         MOVWF       DIVISOR
009D   2???           00362         CALL        DIV16X8
009E   0845           00363         MOVF        Q, W
009F   00D5           00364         MOVWF       measured_distance
                      00365         ; CALL      rtc_convert
                      00366         ;CALL       CLR_LCD             ; DEBUG!
                      00367         ;WRT_MEM_LCD 0x77
                      00368         ;WRT_MEM_LCD 0x78
00A0   3C05           00369         SUBLW       0x05
00A1   00D3           00370         MOVWF       rob_lat_distance
                      00371         ;BTFSC      STATUS
00A2   0008           00372         RETURN
                      00373 
                      00374 ;******************************************************************************;
                      00375 ;                           RETURN HOME ROUTINE                                ;
                      00376 ;******************************************************************************;
00A3                  00377 RETURN_HOME
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00378         
00A3   0008           00379         RETURN
                      00380 
                      00381 
                      00382 ;******************************************************************************;
                      00383 ;                             STOP STANDBY                                     ;
                      00384 ;******************************************************************************;
00A4                  00385 STOP_STDBY
00A4   2???           00386         CALL        GET_STOP_TIME
00A5   2???           00387         CALL        STOP_STDBY_MSG
00A6   1C86           00388         BTFSS       PORTB, 1            ; Wait until data is available from the keypad
00A7   2???           00389         GOTO        STOP_STDBY
                      00390 
00A8   0E06           00391         SWAPF       PORTB, W            ; Read PortB<7:4> into W<3:0>
00A9   390F           00392         ANDLW       0x0F 
00AA   2???           00393         CALL        CLR_LCD
00AB   2???           00394         GOTO        STOP_DATA
                      00395 
                      00396 ;******************************************************************************;
                      00397 ;                               DISPLAY DATA                                   ;
                      00398 ;******************************************************************************;
00AC                  00399 STOP_DATA       
00AC   2???           00400         CALL        WRT_DATA
00AD   2???           00401         CALL        LONG_DLY
00AE   2???           00402         CALL        LONG_DLY
00AF   2???           00403         CALL        LONG_DLY
00B0   2???           00404         CALL        LONG_DLY
00B1   2???           00405         CALL        LONG_DLY
00B2   2???           00406         CALL        LONG_DLY
00B3   2???           00407         CALL        LONG_DLY
                      00408         
00B4   2???           00409         CALL        CLR_LCD
                      00410         
00B5   3059           00411         MOVLW       spot_base_loc
00B6   0084           00412         MOVWF       FSR
                      00413         
                      00414         
00B7                  00415 DATA_LOOP       
                      00416         WRT_LCD     "S"
00B7   3053               M         MOVLW       "S"
00B8   2???               M         CALL        WR_DATA
                      00417         WRT_LCD     "P"
00B9   3050               M         MOVLW       "P"
00BA   2???               M         CALL        WR_DATA
                      00418         WRT_LCD     "O"
00BB   304F               M         MOVLW       "O"
00BC   2???               M         CALL        WR_DATA
                      00419         WRT_LCD     "T"
00BD   3054               M         MOVLW       "T"
00BE   2???               M         CALL        WR_DATA
                      00420         WRT_LCD     ":"
00BF   303A               M         MOVLW       ":"
00C0   2???               M         CALL        WR_DATA
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00421         WRT_LCD     " "
00C1   3020               M         MOVLW       " "
00C2   2???               M         CALL        WR_DATA
                      00422 ;       WRT_MEM_LCD INDF
                      00423         WRT_LCD     "c"
00C3   3063               M         MOVLW       "c"
00C4   2???               M         CALL        WR_DATA
                      00424         WRT_LCD     "m"
00C5   306D               M         MOVLW       "m"
00C6   2???               M         CALL        WR_DATA
                      00425         
00C7   2???           00426         CALL        LONG_DLY
00C8   2???           00427         CALL        LONG_DLY
00C9   2???           00428         CALL        LONG_DLY
00CA   2???           00429         CALL        LONG_DLY
00CB   2???           00430         CALL        LONG_DLY
00CC   2???           00431         CALL        LONG_DLY
00CD   2???           00432         CALL        LONG_DLY
00CE   2???           00433         CALL        LONG_DLY
00CF   2???           00434         CALL        LONG_DLY
00D0   2???           00435         CALL        CLR_LCD
00D1   0A84           00436         INCF        FSR, F
                      00437 
00D2   0BD7           00438         DECFSZ      spot_count, F
00D3   2???           00439         GOTO        DATA_LOOP
                      00440         
                      00441         WRT_LCD     "E"
00D4   3045               M         MOVLW       "E"
00D5   2???               M         CALL        WR_DATA
                      00442         WRT_LCD     "N"
00D6   304E               M         MOVLW       "N"
00D7   2???               M         CALL        WR_DATA
                      00443         WRT_LCD     "D"
00D8   3044               M         MOVLW       "D"
00D9   2???               M         CALL        WR_DATA
                      00444 
00DA   2???           00445         GOTO        FINISH
                      00446 
                      00447 ;******************************************************************************;
                      00448 ;                                  HELLO                                       ;
                      00449 ;******************************************************************************;
00DB                  00450 START_MSG
                      00451         WRT_LCD     "H"
00DB   3048               M         MOVLW       "H"
00DC   2???               M         CALL        WR_DATA
                      00452         WRT_LCD     "I"
00DD   3049               M         MOVLW       "I"
00DE   2???               M         CALL        WR_DATA
                      00453         WRT_LCD     "T"
00DF   3054               M         MOVLW       "T"
00E0   2???               M         CALL        WR_DATA
                      00454         WRT_LCD     " "
00E1   3020               M         MOVLW       " "
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00E2   2???               M         CALL        WR_DATA
                      00455         WRT_LCD     "*"
00E3   302A               M         MOVLW       "*"
00E4   2???               M         CALL        WR_DATA
                      00456         WRT_LCD     " "
00E5   3020               M         MOVLW       " "
00E6   2???               M         CALL        WR_DATA
                      00457         WRT_LCD     "T"
00E7   3054               M         MOVLW       "T"
00E8   2???               M         CALL        WR_DATA
                      00458         WRT_LCD     "O"
00E9   304F               M         MOVLW       "O"
00EA   2???               M         CALL        WR_DATA
                      00459         WRT_LCD     " "
00EB   3020               M         MOVLW       " "
00EC   2???               M         CALL        WR_DATA
                      00460         WRT_LCD     "S"
00ED   3053               M         MOVLW       "S"
00EE   2???               M         CALL        WR_DATA
                      00461         WRT_LCD     "T"
00EF   3054               M         MOVLW       "T"
00F0   2???               M         CALL        WR_DATA
                      00462         WRT_LCD     "A"
00F1   3041               M         MOVLW       "A"
00F2   2???               M         CALL        WR_DATA
                      00463         WRT_LCD     "R"
00F3   3052               M         MOVLW       "R"
00F4   2???               M         CALL        WR_DATA
                      00464         WRT_LCD     "T"
00F5   3054               M         MOVLW       "T"
00F6   2???               M         CALL        WR_DATA
00F7   0008           00465         RETURN
                      00466         
                      00467 ;******************************************************************************;
                      00468 ;                                GOODBYE                                       ;
                      00469 ;******************************************************************************;
00F8                  00470 STOP_STDBY_MSG
                      00471         WRT_LCD     "H"
00F8   3048               M         MOVLW       "H"
00F9   2???               M         CALL        WR_DATA
                      00472         WRT_LCD     "I"
00FA   3049               M         MOVLW       "I"
00FB   2???               M         CALL        WR_DATA
                      00473         WRT_LCD     "T"
00FC   3054               M         MOVLW       "T"
00FD   2???               M         CALL        WR_DATA
                      00474         WRT_LCD     " "
00FE   3020               M         MOVLW       " "
00FF   2???               M         CALL        WR_DATA
                      00475         WRT_LCD     "*"
0100   302A               M         MOVLW       "*"
0101   2???               M         CALL        WR_DATA
                      00476         WRT_LCD     " "
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0102   3020               M         MOVLW       " "
0103   2???               M         CALL        WR_DATA
                      00477         WRT_LCD     "F"
0104   3046               M         MOVLW       "F"
0105   2???               M         CALL        WR_DATA
                      00478         WRT_LCD     "O"
0106   304F               M         MOVLW       "O"
0107   2???               M         CALL        WR_DATA
                      00479         WRT_LCD     "R"
0108   3052               M         MOVLW       "R"
0109   2???               M         CALL        WR_DATA
                      00480         WRT_LCD     " "
010A   3020               M         MOVLW       " "
010B   2???               M         CALL        WR_DATA
                      00481         WRT_LCD     "D"
010C   3044               M         MOVLW       "D"
010D   2???               M         CALL        WR_DATA
                      00482         WRT_LCD     "A"
010E   3041               M         MOVLW       "A"
010F   2???               M         CALL        WR_DATA
                      00483         WRT_LCD     "T"
0110   3054               M         MOVLW       "T"
0111   2???               M         CALL        WR_DATA
                      00484         WRT_LCD     "A"
0112   3041               M         MOVLW       "A"
0113   2???               M         CALL        WR_DATA
0114   0008           00485         RETURN
                      00486          
                      00487 ;******************************************************************************;
                      00488 ;                                 DATA                                         ;
                      00489 ;******************************************************************************;
0115                  00490 WRT_DATA        
                      00491         WRT_LCD     "N"
0115   304E               M         MOVLW       "N"
0116   2???               M         CALL        WR_DATA
                      00492         WRT_LCD     "U"
0117   3055               M         MOVLW       "U"
0118   2???               M         CALL        WR_DATA
                      00493         WRT_LCD     "M"
0119   304D               M         MOVLW       "M"
011A   2???               M         CALL        WR_DATA
                      00494         WRT_LCD     " "
011B   3020               M         MOVLW       " "
011C   2???               M         CALL        WR_DATA
                      00495         WRT_LCD     "S"
011D   3053               M         MOVLW       "S"
011E   2???               M         CALL        WR_DATA
                      00496         WRT_LCD     "P"
011F   3050               M         MOVLW       "P"
0120   2???               M         CALL        WR_DATA
                      00497         WRT_LCD     "O"
0121   304F               M         MOVLW       "O"
0122   2???               M         CALL        WR_DATA
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00498         WRT_LCD     "T"
0123   3054               M         MOVLW       "T"
0124   2???               M         CALL        WR_DATA
                      00499         WRT_LCD     "S"
0125   3053               M         MOVLW       "S"
0126   2???               M         CALL        WR_DATA
                      00500         WRT_LCD     ":"
0127   303A               M         MOVLW       ":"
0128   2???               M         CALL        WR_DATA
                      00501         WRT_LCD     " "
0129   3020               M         MOVLW       " "
012A   2???               M         CALL        WR_DATA
                      00502 ;       WRT_MEM_LCD num_spots
012B   0008           00503         RETURN
                      00504 ;******************************************************************************;
                      00505 ;                           RETREIVE START TIME                                ;
                      00506 ;******************************************************************************;
012C                  00507 GET_START_TIME
                      00508         ;Get minute             
                      00509         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
012C   3001               M         movlw       0x01
012D   1283 1303          M         banksel     0x73
012F   00F3               M         movwf       0x73
0130   2???               M         call        read_rtc
0131   1283 1303          M         banksel     0x75
0133   0875               M         movf        0x75,w
0134   2???               M         call        rtc_convert   
0135   0877           00510         MOVFW       0X77
0136   00CA           00511         MOVWF       start_min10
0137   0878           00512         MOVFW       0X78
0138   00C9           00513         MOVWF       start_min
                      00514 
                      00515         ;Get seconds
                      00516         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0139   3000               M         movlw       0x00
013A   1283 1303          M         banksel     0x73
013C   00F3               M         movwf       0x73
013D   2???               M         call        read_rtc
013E   1283 1303          M         banksel     0x75
0140   0875               M         movf        0x75,w
0141   2???               M         call        rtc_convert   
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0142   0877           00517         MOVFW       0X77
0143   00CC           00518         MOVWF       start_sec10
0144   0878           00519         MOVFW       0X78
0145   00CB           00520         MOVWF       start_sec
0146   0008           00521         RETURN
                      00522 ;******************************************************************************;
                      00523 ;                           RETREIVE STOP TIME                                 ;
                      00524 ;******************************************************************************;
0147                  00525 GET_STOP_TIME
                      00526         ;Get minute             
                      00527         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0147   3001               M         movlw       0x01
0148   1283 1303          M         banksel     0x73
014A   00F3               M         movwf       0x73
014B   2???               M         call        read_rtc
014C   1283 1303          M         banksel     0x75
014E   0875               M         movf        0x75,w
014F   2???               M         call        rtc_convert   
0150   0877           00528         MOVFW       0X77
0151   00CE           00529         MOVWF       stop_min10
0152   0878           00530         MOVFW       0X78
0153   00CD           00531         MOVWF       stop_min
                      00532 
                      00533         ;Get seconds
                      00534         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0154   3000               M         movlw       0x00
0155   1283 1303          M         banksel     0x73
0157   00F3               M         movwf       0x73
0158   2???               M         call        read_rtc
0159   1283 1303          M         banksel     0x75
015B   0875               M         movf        0x75,w
015C   2???               M         call        rtc_convert   
015D   0877           00535         MOVFW       0X77
015E   00D0           00536         MOVWF       stop_sec10
015F   0878           00537         MOVFW       0X78
0160   00CF           00538         MOVWF       stop_sec
0161   0008           00539         RETURN
                      00540 ;******************************************************************************;
                      00541 ;                       DISPLAY RTC TIME TO LCD                                ;
                      00542 ;******************************************************************************;
0162                  00543 SHOW_RTC
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00544         ;clear LCD screen
0162   3001           00545         movlw       b'00000001'
0163   2???           00546         call        WR_INS
                      00547 
                      00548         ;Get year
                      00549         WRT_LCD     "2"
0164   3032               M         MOVLW       "2"
0165   2???               M         CALL        WR_DATA
                      00550         WRT_LCD     "0"
0166   3030               M         MOVLW       "0"
0167   2???               M         CALL        WR_DATA
                      00551         rtc_read    0x06                ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0168   3006               M         movlw       0x06
0169   1283 1303          M         banksel     0x73
016B   00F3               M         movwf       0x73
016C   2???               M         call        read_rtc
016D   1283 1303          M         banksel     0x75
016F   0875               M         movf        0x75,w
0170   2???               M         call        rtc_convert   
                      00552         WRT_MEM_LCD 0x77
0171   0877               M         MOVFW       0x77
0172   2???               M         CALL        WR_DATA
                      00553         WRT_MEM_LCD 0x78
0173   0878               M         MOVFW       0x78
0174   2???               M         CALL        WR_DATA
                      00554 
                      00555         WRT_LCD     "/"
0175   302F               M         MOVLW       "/"
0176   2???               M         CALL        WR_DATA
                      00556 
                      00557         ;Get month
                      00558         rtc_read    0x05                ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0177   3005               M         movlw       0x05
0178   1283 1303          M         banksel     0x73
017A   00F3               M         movwf       0x73
017B   2???               M         call        read_rtc
017C   1283 1303          M         banksel     0x75
017E   0875               M         movf        0x75,w
017F   2???               M         call        rtc_convert   
                      00559         WRT_MEM_LCD 0x77
0180   0877               M         MOVFW       0x77
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0181   2???               M         CALL        WR_DATA
                      00560         WRT_MEM_LCD 0x78
0182   0878               M         MOVFW       0x78
0183   2???               M         CALL        WR_DATA
                      00561 
                      00562         WRT_LCD     "/"
0184   302F               M         MOVLW       "/"
0185   2???               M         CALL        WR_DATA
                      00563 
                      00564         ;Get day
                      00565         rtc_read    0x04                ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0186   3004               M         movlw       0x04
0187   1283 1303          M         banksel     0x73
0189   00F3               M         movwf       0x73
018A   2???               M         call        read_rtc
018B   1283 1303          M         banksel     0x75
018D   0875               M         movf        0x75,w
018E   2???               M         call        rtc_convert   
                      00566         WRT_MEM_LCD 0x77
018F   0877               M         MOVFW       0x77
0190   2???               M         CALL        WR_DATA
                      00567         WRT_MEM_LCD 0x78
0191   0878               M         MOVFW       0x78
0192   2???               M         CALL        WR_DATA
                      00568 
0193   30C0           00569         movlw       B'11000000'         ;Next line displays (hour):(min):(sec) **:**:**
0194   2???           00570         call        WR_INS
                      00571         ;Get hour
                      00572         rtc_read    0x02                ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0195   3002               M         movlw       0x02
0196   1283 1303          M         banksel     0x73
0198   00F3               M         movwf       0x73
0199   2???               M         call        read_rtc
019A   1283 1303          M         banksel     0x75
019C   0875               M         movf        0x75,w
019D   2???               M         call        rtc_convert   
                      00573         WRT_MEM_LCD 0x77
019E   0877               M         MOVFW       0x77
019F   2???               M         CALL        WR_DATA
                      00574         WRT_MEM_LCD 0x78
01A0   0878               M         MOVFW       0x78
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01A1   2???               M         CALL        WR_DATA
                      00575         WRT_LCD     ":"
01A2   303A               M         MOVLW       ":"
01A3   2???               M         CALL        WR_DATA
                      00576 
                      00577         ;Get minute             
                      00578         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01A4   3001               M         movlw       0x01
01A5   1283 1303          M         banksel     0x73
01A7   00F3               M         movwf       0x73
01A8   2???               M         call        read_rtc
01A9   1283 1303          M         banksel     0x75
01AB   0875               M         movf        0x75,w
01AC   2???               M         call        rtc_convert   
                      00579         WRT_MEM_LCD 0x77
01AD   0877               M         MOVFW       0x77
01AE   2???               M         CALL        WR_DATA
                      00580         WRT_MEM_LCD 0x78
01AF   0878               M         MOVFW       0x78
01B0   2???               M         CALL        WR_DATA
                      00581         WRT_LCD     ":"
01B1   303A               M         MOVLW       ":"
01B2   2???               M         CALL        WR_DATA
                      00582 
                      00583         ;Get seconds
                      00584         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01B3   3000               M         movlw       0x00
01B4   1283 1303          M         banksel     0x73
01B6   00F3               M         movwf       0x73
01B7   2???               M         call        read_rtc
01B8   1283 1303          M         banksel     0x75
01BA   0875               M         movf        0x75,w
01BB   2???               M         call        rtc_convert   
                      00585         WRT_MEM_LCD 0x77
01BC   0877               M         MOVFW       0x77
01BD   2???               M         CALL        WR_DATA
                      00586         WRT_MEM_LCD 0x78
01BE   0878               M         MOVFW       0x78
01BF   2???               M         CALL        WR_DATA
                      00587 
01C0   0008           00588         RETURN
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00589 ;******************************************************************************;
                      00590 ;                       INITIALIZE RTC TIME                                    ;
                      00591 ;******************************************************************************;                
01C1                  00592 SET_RTC_TIME
                      00593         rtc_resetAll    ;reset rtc
                          M ;input:         none
                          M ;output:        none
                          M ;desc:          Resets all the time keeping registers on the RTC to zero
01C1   1283 1303          M         banksel     0x74
01C3   01F4               M         clrf        0x74
01C4   1283 1303          M         banksel     0x73
01C6   01F3               M         clrf        0x73
01C7   2???               M         call        write_rtc           ;Write 0 to Seconds
01C8   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
01CA   0AF3               M         incf        0x73                        ;Set register address to 1
01CB   2???               M         call        write_rtc
01CC   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
01CE   0AF3               M         incf        0x73                        ;Set register address to 2
01CF   2???               M         call        write_rtc
01D0   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
01D2   0AF3               M         incf        0x73                        ;Set register address to 3
01D3   2???               M         call        write_rtc
01D4   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
01D6   0AF3               M         incf        0x73                        ;Set register address to 4
01D7   2???               M         call        write_rtc
01D8   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
01DA   0AF3               M         incf        0x73                        ;Set register address to 5
01DB   2???               M         call        write_rtc
01DC   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
01DE   0AF3               M         incf        0x73                        ;Set register address to 6
01DF   2???               M         call        write_rtc
                      00594 
                      00595         rtc_set     0x00,       B'10000000'
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
01E0   1283 1303          M         banksel     0x73
01E2   3000               M         movlw       0x00
01E3   00F3               M         movwf       0x73
01E4   1283 1303          M         banksel     0x74
01E6   3080               M         movlw       B'10000000'
01E7   00F4               M         movwf       0x74        
01E8   2???               M         call        write_rtc
                      00596 
                      00597         ;set time 
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00598         rtc_set     0x06,       B'00010110'             ; Year
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
01E9   1283 1303          M         banksel     0x73
01EB   3006               M         movlw       0x06
01EC   00F3               M         movwf       0x73
01ED   1283 1303          M         banksel     0x74
01EF   3016               M         movlw       B'00010110'
01F0   00F4               M         movwf       0x74        
01F1   2???               M         call        write_rtc
                      00599         rtc_set     0x05,       B'00000100'             ; Month
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
01F2   1283 1303          M         banksel     0x73
01F4   3005               M         movlw       0x05
01F5   00F3               M         movwf       0x73
01F6   1283 1303          M         banksel     0x74
01F8   3004               M         movlw       B'00000100'
01F9   00F4               M         movwf       0x74        
01FA   2???               M         call        write_rtc
                      00600         rtc_set     0x04,       B'00000110'             ; Date
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
01FB   1283 1303          M         banksel     0x73
01FD   3004               M         movlw       0x04
01FE   00F3               M         movwf       0x73
01FF   1283 1303          M         banksel     0x74
0201   3006               M         movlw       B'00000110'
0202   00F4               M         movwf       0x74        
0203   2???               M         call        write_rtc
                      00601         rtc_set     0x03,       B'00000010'             ; Day
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0204   1283 1303          M         banksel     0x73
0206   3003               M         movlw       0x03
0207   00F3               M         movwf       0x73
0208   1283 1303          M         banksel     0x74
020A   3002               M         movlw       B'00000010'
020B   00F4               M         movwf       0x74        
020C   2???               M         call        write_rtc
                      00602         rtc_set     0x02,       B'00000000'             ; Hours
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
020D   1283 1303          M         banksel     0x73
020F   3002               M         movlw       0x02
0210   00F3               M         movwf       0x73
0211   1283 1303          M         banksel     0x74
0213   3000               M         movlw       B'00000000'
0214   00F4               M         movwf       0x74        
0215   2???               M         call        write_rtc
                      00603         rtc_set     0x01,       B'00000000'             ; Minutes
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0216   1283 1303          M         banksel     0x73
0218   3001               M         movlw       0x01
0219   00F3               M         movwf       0x73
021A   1283 1303          M         banksel     0x74
021C   3000               M         movlw       B'00000000'
021D   00F4               M         movwf       0x74        
021E   2???               M         call        write_rtc
                      00604         rtc_set     0x00,       B'00000000'             ; Seconds
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
021F   1283 1303          M         banksel     0x73
0221   3000               M         movlw       0x00
0222   00F3               M         movwf       0x73
0223   1283 1303          M         banksel     0x74
0225   3000               M         movlw       B'00000000'
0226   00F4               M         movwf       0x74        
0227   2???               M         call        write_rtc
0228   0008           00605         return
                      00606 
                      00607 ;******************************************************************************;                
                      00608 ;******************************************************************************;
                      00609 ;******************************************************************************;
0229                  00610 DIV16X8 ; DIV_HI and DIV_LO / DIVSOR.  result to Q
                      00611                 ; does not deal with divide by 0 case
0229   01C5           00612         CLRF Q
022A                  00613 DIV_1
022A   0844           00614         MOVF DIVISOR, W
022B   02C3           00615         SUBWF DIV_LO, F
022C   1C03           00616         BTFSS STATUS, C ; if positive skip
022D   2???           00617         GOTO BORROW
022E   2???           00618         GOTO DIV_2
022F                  00619 BORROW
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

022F   3001           00620         MOVLW 0x01
0230   02C2           00621         SUBWF DIV_HI, F ; DIV_HI = DIV_HI - 1
0231   1C03           00622         BTFSS STATUS, C ; if no borrow occurred
0232   2???           00623         GOTO DIV_DONE   
0233                  00624 DIV_2
0233   0AC5           00625         INCF Q, F
0234   2???           00626         GOTO DIV_1
0235                  00627 DIV_DONE
0235   0008           00628         RETURN
                      00629         
0236                  00630 LONG_DLY
0236   30FF           00631         MOVLW       0xFF
0237   00BF           00632         MOVWF       long_del
0238                  00633 LD_LOOP 
Warning[207]: Found label after column 1. (LCD_DLY)
0238                  00634         LCD_DLY
0238   0BBF           00635         DECFSZ      long_del, f
0239   2???           00636         GOTO        LD_LOOP
023A   0008           00637         RETURN
                      00638 
023B                  00639 DEL_20US
023B   3021           00640         movlw   0x21
023C   00C6           00641         movwf   d1
023D                  00642 DEL_20US_0
023D   0BC6           00643         decfsz  d1, f
023E   2???           00644         goto    DEL_20US_0
023F   0008           00645         RETURN
                      00646 
0240                  00647 FINISH  
0240   2???           00648         GOTO    FINISH
                      00649         
3F72                  00650         END
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE 23


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADD                               00000036
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ARM_TOGGLE                        00000088
B1                                0000003A
B2                                0000003B
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BORROW                            0000022F
BRGH                              00000002
C                                 00000000
CALIBRATE                         00000038
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE 24


SYMBOL TABLE
  LABEL                             VALUE 

CKP                               00000004
CLR_LCD                           00000000
CONTROL                           00000035
CREN                              00000004
CSRC                              00000007
D                                 00000005
DAT                               00000037
DATA_ADDRESS                      00000005
DATA_LOOP                         000000B7
DC                                00000001
DEL_20US                          0000023B
DEL_20US_0                        0000023D
DIV16X8                           00000229
DIVISOR                           00000044
DIV_1                             0000022A
DIV_2                             00000233
DIV_DONE                          00000235
DIV_HI                            00000042
DIV_LO                            00000043
DOUT                              00000039
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FINISH                            00000240
FSR                               00000004
GCEN                              00000007
GET_START_TIME                    0000012C
GET_STOP_TIME                     00000147
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INIT                              00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE 25


SYMBOL TABLE
  LABEL                             VALUE 

INTF                              00000001
INT_HANDLER                       00000047
IRP                               00000007
InitLCD                           00000000
LCD_DLY                           00000238
LCD_INS                           
LD_LOOP                           00000238
LONG_DLY                          00000236
MULT                              
MX_LOOP                           0000005F
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

PSPMODE                           00000004
PWML                              00000053
PWML_DN                           00000055
PWMR                              00000058
PWMR_DN                           0000005A
Q                                 00000045
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_IRS                          0000005D
READ_WRITE                        00000002
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

REALIGN                           00000089
RETURN_HOME                       000000A3
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SCAN                              00000044
SEN                               00000000
SET_RTC_TIME                      000001C1
SHOW_RTC                          00000162
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
START_MSG                         000000DB
START_STDBY                       0000002C
STATUS                            00000003
STOP_DATA                         000000AC
STOP_STDBY                        000000A4
STOP_STDBY_MSG                    000000F8
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
USHOLD                            00000092
USONIC_READ_ECHO                  0000008F
USONIC_SEND_PULSE                 0000008B
W                                 00000000
WCOL                              00000007
WHL_ENC                           00000085
WR                                00000001
WREN                              00000002
WRERR                             00000003
WRT_DATA                          00000115
WRT_LCD                           
WRT_MEM_LCD                       
WR_DATA                           00000000
WR_INS                            00000000
XBUF                              00000033
Z                                 00000002
_.org_1_0032                      00000032
_.org_1_0079                      00000079
_.org_1_0090                      00000090
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
count                             00000034
crit_dist                         d'5'
d1                                00000046
d2                                00000047
d3                                00000048
dt1                               00000030
dt2                               00000031
dt3                               00000032
flag                              00000038
i2c_common_setup                  00000000
lcd_d1                            0000003D
lcd_d2                            0000003E
lcd_tmp                           0000003C
long_del                          0000003F
measured_distance                 00000055
multiplex_count                   00000052
num_spots                         00000058
read_rtc                          00000000
rob_lat_distance                  00000053
rob_long_distance                 00000054
rob_return                        00000056
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
spot_base_loc                     00000059
spot_count                        00000057
spot_detected                     00000051
start_min                         00000049
start_min10                       0000004A
start_sec                         0000004B
start_sec10                       0000004C
stop_min                          0000004D
stop_min10                        0000004E
stop_sec                          0000004F
stop_sec10                        00000050
MPASM 5.65                          MAIN.ASM   3-5-2016  8:09:03         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

temp_status                       00000041
temp_w                            00000040
write_rtc                         00000000

Errors   :     0
Warnings :     1 reported,     0 suppressed
Messages :    20 reported,     0 suppressed

