MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;******************************************************************************;
                      00002 ;        ____    ___  ______    ___  ____       ____  ____  ____    ___  ____  ;
                      00003 ;       |    \  /  _]|      T  /  _]|    \     |    \l    j|    \  /  _]|    \ ;
                      00004 ;       |  o  )/  [_ |      | /  [_ |  D  )    |  o  )|  T |  o  )/  [_ |  D  );
                      00005 ;       |   _/Y    _]l_j  l_jY    _]|    /     |   _/ |  | |   _/Y    _]|    / ;
                      00006 ;       |  |  |   [_   |  |  |   [_ |    \     |  |   |  | |  |  |   [_ |    \ ;
                      00007 ;       |  |  |     T  |  |  |     T|  .  Y    |  |   j  l |  |  |     T|  .  Y;
                      00008 ;       l__j  l_____j  l__j  l_____jl__j\_j    l__j  |____jl__j  l_____jl__j\_j;
                      00009 ;------------------------------------------------------------------------------;
                      00010 ;               AER201 Team 61 'Peter Piper' Pipe Inspector                    ;
                      00011 ;                        Author: Omar Abdeldayem                               ;
                      00012 ;                           Created: 1/12/2016                                 ;
                      00013 ;------------------------------------------------------------------------------;
                      00014 ; DESCRIPTION:                                                                                          
                                                               ;
                      00015 ; It does shit, yo.                                                                                     
                                                               ;
                      00016 ;******************************************************************************;
                      00017 ;******************************************************************************;
                      00018 ;******************************************************************************;
                      00019 
                      00020         List    p=16f877                    ; list directive to define processor
                      00021         #include        <p16f877.inc>       ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
2007   3F72           00022         __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP
                            _OFF
                      00023 
                      00024         #include        <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel     0x74
                      00011         clrf        0x74
                      00012         banksel     0x73
                      00013         clrf        0x73
                      00014         call        write_rtc           ;Write 0 to Seconds
                      00015         banksel     0x73
                      00016         incf        0x73                        ;Set register address to 1
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00017         call        write_rtc
                      00018         banksel     0x73
                      00019         incf        0x73                        ;Set register address to 2
                      00020         call        write_rtc
                      00021         banksel     0x73
                      00022         incf        0x73                        ;Set register address to 3
                      00023         call        write_rtc
                      00024         banksel     0x73
                      00025         incf        0x73                        ;Set register address to 4
                      00026         call        write_rtc
                      00027         banksel     0x73
                      00028         incf        0x73                        ;Set register address to 5
                      00029         call        write_rtc
                      00030         banksel     0x73
                      00031         incf        0x73                        ;Set register address to 6
                      00032         call        write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set macro       addliteral, datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel     0x73
                      00042         movlw       addliteral
                      00043         movwf       0x73
                      00044         banksel     0x74
                      00045         movlw       datliteral
                      00046         movwf       0x74        
                      00047         call        write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read macro      addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw       addliteral
                      00058         banksel     0x73
                      00059         movwf       0x73
                      00060         call        read_rtc
                      00061         banksel     0x75
                      00062         movf        0x75,w
                      00063         call        rtc_convert   
                      00064         endm
                      00065 
                      00066 
                      00067 
                      00068 
                      00069 
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00070 
                      00025         #include        <lcd.inc>
  0000                00001     extern      InitLCD,WR_INS,WR_DATA,CLR_LCD
                      00002 
                      00003 
                      00026 ;******************************************************************************;
                      00027 ;                               BANK0 RAM                                      ;
                      00028 ;******************************************************************************;
                      00029         CBLOCK      0x30
  00000030            00030         dt1         ; 0x30          
  00000031            00031         dt2
  00000032            00032         dt3
  00000033            00033         XBUF
  00000034            00034         count
  00000035            00035         CONTROL
  00000036            00036         ADD
  00000037            00037         DAT
  00000038            00038         flag
  00000039            00039         DOUT
  0000003A            00040         B1
  0000003B            00041         B2
  0000003C            00042         long_del
  0000003D            00043         temp_w      ; 0x40
  0000003E            00044         temp_status ; 0x41
                      00045                     ; DIVISION Registers
  0000003F            00046         DIV_HI      ; 0X42
  00000040            00047         DIV_LO      ; 0X43
  00000041            00048         DIVISOR     ; 0X44
  00000042            00049         Q
  00000043            00050         d1
  00000044            00051         d2
  00000045            00052         d3
                      00053                     ; ROBOT VARS
  00000046            00054         start_min
  00000047            00055         start_min10
  00000048            00056         start_sec
  00000049            00057         start_sec10
  0000004A            00058         stop_min
  0000004B            00059         stop_min10
  0000004C            00060         stop_sec
  0000004D            00061         stop_sec10
  0000004E            00062         spot_detected
  0000004F            00063         multiplex_count
  00000050            00064         rob_lat_distance
  00000051            00065         rob_long_distance
  00000052            00066         measured_distance_lat
  00000053            00067         measured_distance_sup
  00000054            00068         rob_return
  00000055            00069         spot_count
  00000056            00070         num_spots
  00000057            00071         spot_base_loc
                      00072         ENDC
                      00073 
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00074 ;******************************************************************************;
                      00075 ;                               EQUATES                                ;
                      00076 ;******************************************************************************;
                      00077         #define     crit_dist           0X08
                      00078         #define     MOTOR_DIR_CTRL      PORTC, 5
                      00079 ;******************************************************************************;
                      00080 ;                               MACROS                                         ;
                      00081 ;******************************************************************************;
                      00082 MULT    macro       val1, val2, result
                      00083         MOVF        val1, W
                      00084         ADDWF       val1, W
                      00085         MOVWF       result
                      00086         DECFSZ      val2, f
                      00087         GOTO        $-3
                      00088         endm
                      00089         
                      00090 WRT_LCD macro       val
                      00091         MOVLW       val
                      00092         CALL        WR_DATA
                      00093         endm
                      00094 LCD_INS macro       val
                      00095         MOVLW       val
                      00096         CALL        WR_INS
                      00097         endm
                      00098         
                      00099 WRT_MEM_LCD macro   val
                      00100         MOVFW       val
                      00101         CALL        WR_DATA
                      00102         endm
                      00103 
                      00104 CWRT_MEM_LCD macro   val
                      00105         MOVFW       val
                      00106         ADDLW       D'48'
                      00107         CALL        WR_DATA
                      00108         endm
                      00109 ;******************************************************************************;
                      00110 ;                          VECTOR TABLE                                        ;
                      00111 ;******************************************************************************;
                      00112         ORG         0x0000              ; RESET vector must always be at 0x00
0000   2???           00113         GOTO        INIT                ; Just jump to the main code section.
                      00114         ORG         0x0004
0004   2???           00115         GOTO        INT_HANDLER
                      00116 
                      00117 ;******************************************************************************;
                      00118 ;                         ROBOT INITIALIZATION                                 ;
                      00119 ;******************************************************************************;
0005                  00120 INIT
0005   1683           00121         BSF         STATUS, RP0         ; Select bank 1
0006   018B           00122         CLRF        INTCON              ; Disable interrupts for now
                      00123         
0007   3006           00124         MOVLW       0x06                ; Turn PORT A to digital
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0008   009F           00125         MOVWF       ADCON1
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00126         
0009   3010           00127         MOVLW       b'00010000'         ; PORT A pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000A   0085           00128         MOVWF       TRISA
000B   30F3           00129         MOVLW       b'11110011'         ; PORT B pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000C   0086           00130         MOVWF       TRISB
000D   30B9           00131         MOVLW       b'10111001'         ; PORT C pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000E   0087           00132         MOVWF       TRISC
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000F   0188           00133         CLRF        TRISD               ; PORT D pin mapping
0010   3007           00134         MOVLW       b'00000111'         ; PORT E pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0011   0089           00135         MOVWF       TRISE
                      00136         
0012   30FF           00137         MOVLW       B'11111111'         ; PWM pulsing period (484Hz)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0013   0092           00138         MOVWF       PR2
                      00139        
0014   1283           00140         BCF         STATUS, RP0         ; select bank 0
                      00141 
0015   30FF           00142         MOVLW       B'11111111'         ; 100% DUTY CYCLE
0016   0095           00143         MOVWF       CCPR1L              
0017   30FF           00144         MOVLW       B'11111111'         ; '01100100' 100% DUTY CYCLE
0018   009B           00145         MOVWF       CCPR2L
0019   30FF           00146         MOVLW       B'11111111'
001A   0097           00147         MOVWF       CCP1CON
001B   009D           00148         MOVWF       CCP2CON
                      00149         
001C   3005           00150         MOVLW       B'00000101'         ; Initialize and hold timer 2
001D   0092           00151         MOVWF       T2CON
001E   0191           00152         CLRF        TMR2
001F   1112           00153         BCF         T2CON, TMR2ON
                      00154         
0020   3010           00155         MOVLW       0X10                ; TMR1 for Ultrasonic Sensors
0021   0090           00156         MOVWF       T1CON
0022   018F           00157         CLRF        TMR1H
0023   018E           00158         CLRF        TMR1L
                      00159         
0024   0185           00160         clrf        PORTA
0025   0186           00161         clrf        PORTB
0026   0187           00162         clrf        PORTC 
0027   0188           00163         clrf        PORTD
                      00164         
0028   2???           00165         CALL        i2c_common_setup
                      00166                     rtc_resetAll
                          M ;input:         none
                          M ;output:        none
                          M ;desc:          Resets all the time keeping registers on the RTC to zero
0029   1283 1303          M         banksel     0x74
002B   01F4               M         clrf        0x74
002C   1283 1303          M         banksel     0x73
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002E   01F3               M         clrf        0x73
002F   2???               M         call        write_rtc           ;Write 0 to Seconds
0030   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0032   0AF3               M         incf        0x73                        ;Set register address to 1
0033   2???               M         call        write_rtc
0034   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0036   0AF3               M         incf        0x73                        ;Set register address to 2
0037   2???               M         call        write_rtc
0038   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
003A   0AF3               M         incf        0x73                        ;Set register address to 3
003B   2???               M         call        write_rtc
003C   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
003E   0AF3               M         incf        0x73                        ;Set register address to 4
003F   2???               M         call        write_rtc
0040   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0042   0AF3               M         incf        0x73                        ;Set register address to 5
0043   2???               M         call        write_rtc
0044   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0046   0AF3               M         incf        0x73                        ;Set register address to 6
0047   2???               M         call        write_rtc
0048   2???           00167         CALL        InitLCD
                      00168         
0049   01D6           00169         CLRF        num_spots
004A   01D5           00170         CLRF        spot_count
004B   01CE           00171         CLRF        spot_detected
004C   01D2           00172         CLRF        measured_distance_lat
004D   01D3           00173         CLRF        measured_distance_sup
                      00174                                                 
004E   2???           00175         CALL        START_MSG
                      00176 ;******************************************************************************;
                      00177 ;                        ROBOT START AND STANDBY                               ;
                      00178 ;******************************************************************************;
004F                  00179 START_STDBY
004F   1C86           00180         BTFSS       PORTB, 1            ; Wait until data is available from the keypad
0050   2???           00181         GOTO        START_STDBY
                      00182 
0051   0E06           00183         SWAPF       PORTB, W            ; Read PortB<7:4> into W<3:0>
0052   390F           00184         ANDLW       0x0F
0053   2???           00185         CALL        CLR_LCD
                      00186 
0054   1886           00187         BTFSC       PORTB,1             ; Wait until key is released
0055   2???           00188         GOTO        $-1
                      00189         
0056   2???           00190         CALL        CLR_LCD
0057   1687           00191         BSF         MOTOR_DIR_CTRL
0058   1512           00192         BSF         T2CON, TMR2ON
0059   2???           00193         CALL        SET_RTC_TIME
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

005A   2???           00194         CALL        GET_START_TIME
                      00195         ;GOTO       SCAN
005B   2???           00196         GOTO        CALIBRATE
                      00197         ;CALL       DEL_1S
                      00198         ;CALL       DEL_1S
                      00199         ;CALL       DEL_1S
                      00200         ;GOTO       STOP_STDBY
                      00201 
                      00202 ;******************************************************************************;
                      00203 ;                           SENSOR CALIBRATION                                 ;
                      00204 ;******************************************************************************;
005C                  00205 CALIBRATE
005C   2???           00206         CALL        ARM_OPEN  
005D   2???           00207         CALL        USONIC_LAT
005E   3008           00208         MOVLW       crit_dist
005F   0252           00209         SUBWF       measured_distance_lat, W
0060   1803           00210         BTFSC       STATUS, 0
0061   2???           00211         GOTO        CALIBRATE
0062   158B           00212         BSF         INTCON, RBIE            ; Enable interrupts
0063   160B           00213         BSF         INTCON, INTE
0064   178B           00214         BSF         INTCON, GIE
0065   2???           00215         GOTO        SCAN
                      00216         
                      00217 ;******************************************************************************;
                      00218 ;                         PIPE SCAN SUPERLOOP                                  ;
                      00219 ;******************************************************************************;
0066                  00220 SCAN
0066   2???           00221         CALL        USONIC_SUP
0067   2???           00222         CALL        ARM_CTRL
0068   2???           00223         CALL        USONIC_LAT
0069   3008           00224         MOVLW       crit_dist
006A   0252           00225         SUBWF       measured_distance_lat, W
006B   1803           00226         BTFSC       STATUS, 0
006C   2???           00227         GOTO        RETURN_HOME
                      00228 ;       CALL        SHOW_RTC                ; DEBUG
006D   2???           00229         CALL        READ_IRS
006E   2???           00230         GOTO        SCAN
                      00231         
                      00232 ;******************************************************************************;
                      00233 ;                          INTERRUPT HANDLER                                   ;
                      00234 ;******************************************************************************;
006F                  00235 INT_HANDLER
006F   00BD           00236         MOVWF       temp_w
0070   0E03           00237         SWAPF       STATUS, W
0071   00BE           00238         MOVWF       temp_status
0072   100B           00239         BCF         INTCON, RBIF
0073   108B           00240         BCF         INTCON, INTF          ; Clear the interrupt flag
                      00241         
0074   2???           00242         CALL        WHL_ENC
                      00243         
0075   0E3E           00244         SWAPF       temp_status, W
0076   0083           00245         MOVWF       STATUS
0077   0EBD           00246         SWAPF       temp_w, F
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0078   0E3D           00247         SWAPF       temp_w, W
0079   0009           00248         RETFIE
                      00249 
                      00250 ;******************************************************************************;
                      00251 ;                       CYCLE INFRARED SENSORS                                 ;
                      00252 ;******************************************************************************;
007A                  00253 READ_IRS
007A   3010           00254         MOVLW       d'16'
007B   00CF           00255         MOVWF       multiplex_count
007C                  00256 MX_LOOP 
Message[305]: Using default destination of 1 (file).
007C   03CF           00257         DECF        multiplex_count
007D   1005           00258         BCF         PORTA, 0
007E   184F           00259         BTFSC       multiplex_count, 0
007F   1405           00260         BSF         PORTA, 0
0080   1085           00261         BCF         PORTA, 1
0081   18CF           00262         BTFSC       multiplex_count, 1
0082   1485           00263         BSF         PORTA, 1
0083   1105           00264         BCF         PORTA, 2
0084   194F           00265         BTFSC       multiplex_count, 2
0085   1505           00266         BSF         PORTA, 2
0086   1185           00267         BCF         PORTA, 3
0087   19CF           00268         BTFSC       multiplex_count, 3
0088   1585           00269         BSF         PORTA, 3
                      00270         
0089   2???           00271         CALL        DEL_10MS
008A   2???           00272         CALL        DEL_10MS
008B   2???           00273         CALL        DEL_10MS
008C   2???           00274         CALL        DEL_10MS
008D   2???           00275         CALL        DEL_10MS
008E   2???           00276         CALL        DEL_10MS
008F   2???           00277         CALL        DEL_10MS
0090   2???           00278         CALL        DEL_10MS
                      00279         
0091   1C07           00280         BTFSS       PORTC, 0
0092   2???           00281         GOTO        NO_SPOT 
0093   1408           00282         BSF         PORTD, 0                            ; Buzzer start
0094   2???           00283         CALL        DEL_1S
0095   0851           00284         MOVFW       rob_long_distance                   ; Save spot location
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0096   00AD           00285         MOVWF       spot_base_loc + num_spots
0097   0AD6           00286         INCF        num_spots, f                        ; Increase number of spots
0098   1008           00287         BCF         PORTD, 0                            ; Buzzer stop
Message[305]: Using default destination of 1 (file).
0099   0ACF           00288 NO_SPOT INCF        multiplex_count
Message[305]: Using default destination of 1 (file).
009A   0BCF           00289         DECFSZ      multiplex_count
009B   2???           00290         GOTO        MX_LOOP
009C   0008           00291         RETURN
                      00292 ;******************************************************************************;
                      00293 ;                         WHEEL ENCODER ROUTINE                                ;
                      00294 ;******************************************************************************;
009D                  00295 WHL_ENC
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

009D   3013           00296         MOVLW       d'19'
Message[305]: Using default destination of 1 (file).
009E   07D1           00297         ADDWF       rob_long_distance
009F   0008           00298         RETURN
                      00299         
                      00300 ;******************************************************************************;
                      00301 ;                       TOGGLE ARM STATE SUBROUTINES                           ;
                      00302 ;******************************************************************************;
00A0                  00303 ARM_CTRL
00A0   3008           00304         MOVLW       crit_dist
00A1   0253           00305         SUBWF       measured_distance_sup, W
00A2   1803           00306         BTFSC       STATUS, 0               ; C==0 if measured_distance_sup < crit_dist
00A3   2???           00307         GOTO        ARM_CLOSE
00A4   2???           00308         GOTO        ARM_OPEN
00A5                  00309 ARM_CLOSE                                   ; Close arm for full scan
00A5   1685           00310         BSF         PORTA, 5
00A6   2???           00311         CALL        DEL_1_5MS
00A7   1285           00312         BCF         PORTA, 5
00A8   2???           00313         CALL        DEL_10MS
00A9   2???           00314         CALL        DEL_10MS
00AA   2???           00315         CALL        DEL_10MS
00AB   2???           00316         CALL        DEL_10MS
00AC   0008           00317         RETURN      
                      00318         
00AD                  00319 ARM_OPEN                                    ; Open arm to clear support
00AD   1685           00320         BSF         PORTA, 5
00AE   2???           00321         CALL        DEL_2_1MS
00AF   2???           00322         CALL        DEL_2_1MS
00B0   1285           00323         BCF         PORTA, 5
00B1   2???           00324         CALL        DEL_10MS
00B2   2???           00325         CALL        DEL_10MS
00B3   2???           00326         CALL        DEL_10MS
00B4   2???           00327         CALL        DEL_10MS
00B5   0008           00328         RETURN
                      00329 ;******************************************************************************;
                      00330 ;                     ULTRASONIC SENSOR SUBROUTINES                            ;
                      00331 ;******************************************************************************;
00B6                  00332 USONIC_LAT
00B6   1586           00333         BSF         PORTB, 3
00B7   2???           00334         CALL        DEL_20US
00B8   1186           00335         BCF         PORTB, 3
00B9                  00336 USONIC_LAT_ECHO
00B9   1E06           00337         BTFSS       PORTB, 4
00BA   2???           00338         GOTO        $-1
00BB   1410           00339         BSF         T1CON, 0
00BC   1A06           00340 USHOLDL BTFSC       PORTB, 4
00BD   2???           00341         GOTO        USHOLDL
00BE   1010           00342         BCF         T1CON, 0
00BF   080F           00343         MOVF        TMR1H, W
00C0   00BF           00344         MOVWF       DIV_HI
00C1   080E           00345         MOVF        TMR1L, W
00C2   00C0           00346         MOVWF       DIV_LO
00C3   018F           00347         CLRF        TMR1H
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C4   018E           00348         CLRF        TMR1L
00C5   303A           00349         MOVLW       d'58'
00C6   00C1           00350         MOVWF       DIVISOR
00C7   2???           00351         CALL        DIV16X8
00C8   0842           00352         MOVF        Q, W
00C9   00D2           00353         MOVWF       measured_distance_lat
00CA   0008           00354         RETURN
                      00355 
00CB                  00356 USONIC_SUP
00CB   1707           00357         BSF         PORTC, 6
00CC   2???           00358         CALL        DEL_20US
00CD   1307           00359         BCF         PORTC, 6
00CE                  00360 USONIC_SUP_ECHO
00CE   1F87           00361         BTFSS       PORTC, 7
00CF   2???           00362         GOTO        $-1
00D0   1410           00363         BSF         T1CON, 0
00D1   1B87           00364 USHOLDS BTFSC       PORTC, 7
00D2   2???           00365         GOTO        USHOLDS
00D3   1010           00366         BCF         T1CON, 0
00D4   080F           00367         MOVF        TMR1H, W
00D5   00BF           00368         MOVWF       DIV_HI
00D6   080E           00369         MOVF        TMR1L, W
00D7   00C0           00370         MOVWF       DIV_LO
00D8   018F           00371         CLRF        TMR1H
00D9   018E           00372         CLRF        TMR1L
00DA   303A           00373         MOVLW       d'58'
00DB   00C1           00374         MOVWF       DIVISOR
00DC   2???           00375         CALL        DIV16X8
00DD   0842           00376         MOVF        Q, W
00DE   00D3           00377         MOVWF       measured_distance_sup
                      00378         ;CALL       rtc_convert
                      00379         ;CALL       CLR_LCD             ; DEBUG!
                      00380         ;WRT_MEM_LCD 0x77
                      00381         ;WRT_MEM_LCD 0x78
00DF   0008           00382         RETURN
                      00383 ;******************************************************************************;
                      00384 ;                           RETURN HOME ROUTINE                                ;
                      00385 ;******************************************************************************;
00E0                  00386 RETURN_HOME
00E0   018B           00387         CLRF        INTCON
00E1   1287           00388         BCF         MOTOR_DIR_CTRL
00E2   2???           00389         CALL        ARM_CTRL
00E3   2???           00390         CALL        USONIC_LAT
00E4   3008           00391         MOVLW       crit_dist
00E5   0252           00392         SUBWF       measured_distance_lat, W
00E6   1803           00393         BTFSC       STATUS, 0
00E7   2???           00394         GOTO        RETURN_HOME
00E8   2???           00395         GOTO        FINAL_BACKUP
                      00396 
00E9                  00397 FINAL_BACKUP
00E9   2???           00398         CALL        DEL_1S
00EA   2???           00399         CALL        DEL_1S
00EB   2???           00400         CALL        DEL_1S
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00EC   2???           00401         CALL        DEL_1S
00ED   2???           00402         GOTO        STOP_STDBY
                      00403         
                      00404 ;******************************************************************************;
                      00405 ;                             STOP STANDBY                                     ;
                      00406 ;******************************************************************************;
00EE                  00407 STOP_STDBY
00EE   1112           00408         BCF         T2CON, TMR2ON       ; Turn off motors
00EF   2???           00409         CALL        GET_STOP_TIME       ; Get stop time
00F0   2???           00410         CALL        STOP_STDBY_MSG      ; Display standby message
00F1   1C86           00411         BTFSS       PORTB, 1            ; Wait until data is available from the keypad
00F2   2???           00412         GOTO        $-1
00F3   0E06           00413         SWAPF       PORTB, W            ; Read PortB<7:4> into W<3:0>
00F4   390F           00414         ANDLW       0x0F 
00F5   2???           00415         CALL        CLR_LCD
00F6   2???           00416         GOTO        STOP_DATA           ; Display run data
                      00417 
                      00418 ;******************************************************************************;
                      00419 ;                               DISPLAY DATA                                   ;
                      00420 ;******************************************************************************;
00F7                  00421 STOP_DATA
                      00422         WRT_LCD     "T"
00F7   3054               M         MOVLW       "T"
00F8   2???               M         CALL        WR_DATA
                      00423         WRT_LCD     "I"
00F9   3049               M         MOVLW       "I"
00FA   2???               M         CALL        WR_DATA
                      00424         WRT_LCD     "M"
00FB   304D               M         MOVLW       "M"
00FC   2???               M         CALL        WR_DATA
                      00425         WRT_LCD     "E"
00FD   3045               M         MOVLW       "E"
00FE   2???               M         CALL        WR_DATA
                      00426         WRT_LCD     ":"
00FF   303A               M         MOVLW       ":"
0100   2???               M         CALL        WR_DATA
                      00427         WRT_LCD     " "
0101   3020               M         MOVLW       " "
0102   2???               M         CALL        WR_DATA
                      00428         ;Get minute             
                      00429         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0103   3001               M         movlw       0x01
0104   1283 1303          M         banksel     0x73
0106   00F3               M         movwf       0x73
0107   2???               M         call        read_rtc
0108   1283 1303          M         banksel     0x75
010A   0875               M         movf        0x75,w
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

010B   2???               M         call        rtc_convert   
                      00430         WRT_MEM_LCD 0x77
010C   0877               M         MOVFW       0x77
010D   2???               M         CALL        WR_DATA
                      00431         WRT_MEM_LCD 0x78
010E   0878               M         MOVFW       0x78
010F   2???               M         CALL        WR_DATA
                      00432         WRT_LCD     ":"
0110   303A               M         MOVLW       ":"
0111   2???               M         CALL        WR_DATA
                      00433 
                      00434         ;Get seconds
                      00435         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0112   3000               M         movlw       0x00
0113   1283 1303          M         banksel     0x73
0115   00F3               M         movwf       0x73
0116   2???               M         call        read_rtc
0117   1283 1303          M         banksel     0x75
0119   0875               M         movf        0x75,w
011A   2???               M         call        rtc_convert   
                      00436         WRT_MEM_LCD 0x77
011B   0877               M         MOVFW       0x77
011C   2???               M         CALL        WR_DATA
                      00437         WRT_MEM_LCD 0x78
011D   0878               M         MOVFW       0x78
011E   2???               M         CALL        WR_DATA
                      00438 
011F   30C0           00439         movlw       B'11000000'         ;Next line displays (min):(sec) **:**
0120   2???           00440         call        WR_INS
0121   2???           00441         CALL        WRT_DATA
0122   2???           00442         CALL        DEL_1S
0123   2???           00443         CALL        DEL_1S
0124   2???           00444         CALL        CLR_LCD
                      00445         
0125   3057           00446         MOVLW       spot_base_loc
0126   0084           00447         MOVWF       FSR
                      00448         
0127                  00449 DATA_LOOP       
                      00450 ;       WRT_LCD     "S"
                      00451 ;       WRT_LCD     "P"
                      00452 ;       WRT_LCD     "O"
                      00453 ;       WRT_LCD     "T"
                      00454 ;       WRT_LCD     ":"
                      00455 ;       WRT_LCD     " "
                      00456 ;       WRT_MEM_LCD INDF
                      00457 ;       WRT_LCD     "c"
                      00458 ;       WRT_LCD     "m"
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00459 ;       
                      00460 ;       CALL        DEL_1S
                      00461 ;       
                      00462 ;       CALL        CLR_LCD
                      00463 ;       INCF        FSR, F
                      00464 ;
                      00465 ;       DECFSZ      spot_count, F
                      00466 ;       GOTO        DATA_LOOP
                      00467         
                      00468         WRT_LCD     "E"
0127   3045               M         MOVLW       "E"
0128   2???               M         CALL        WR_DATA
                      00469         WRT_LCD     "N"
0129   304E               M         MOVLW       "N"
012A   2???               M         CALL        WR_DATA
                      00470         WRT_LCD     "D"
012B   3044               M         MOVLW       "D"
012C   2???               M         CALL        WR_DATA
                      00471 
012D   2???           00472         GOTO        FINISH
                      00473 
                      00474 ;******************************************************************************;
                      00475 ;                                  HELLO                                       ;
                      00476 ;******************************************************************************;
012E                  00477 START_MSG
                      00478         WRT_LCD     "H"
012E   3048               M         MOVLW       "H"
012F   2???               M         CALL        WR_DATA
                      00479         WRT_LCD     "I"
0130   3049               M         MOVLW       "I"
0131   2???               M         CALL        WR_DATA
                      00480         WRT_LCD     "T"
0132   3054               M         MOVLW       "T"
0133   2???               M         CALL        WR_DATA
                      00481         WRT_LCD     " "
0134   3020               M         MOVLW       " "
0135   2???               M         CALL        WR_DATA
                      00482         WRT_LCD     "*"
0136   302A               M         MOVLW       "*"
0137   2???               M         CALL        WR_DATA
                      00483         WRT_LCD     " "
0138   3020               M         MOVLW       " "
0139   2???               M         CALL        WR_DATA
                      00484         WRT_LCD     "T"
013A   3054               M         MOVLW       "T"
013B   2???               M         CALL        WR_DATA
                      00485         WRT_LCD     "O"
013C   304F               M         MOVLW       "O"
013D   2???               M         CALL        WR_DATA
                      00486         WRT_LCD     " "
013E   3020               M         MOVLW       " "
013F   2???               M         CALL        WR_DATA
                      00487         WRT_LCD     "S"
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0140   3053               M         MOVLW       "S"
0141   2???               M         CALL        WR_DATA
                      00488         WRT_LCD     "T"
0142   3054               M         MOVLW       "T"
0143   2???               M         CALL        WR_DATA
                      00489         WRT_LCD     "A"
0144   3041               M         MOVLW       "A"
0145   2???               M         CALL        WR_DATA
                      00490         WRT_LCD     "R"
0146   3052               M         MOVLW       "R"
0147   2???               M         CALL        WR_DATA
                      00491         WRT_LCD     "T"
0148   3054               M         MOVLW       "T"
0149   2???               M         CALL        WR_DATA
014A   0008           00492         RETURN
                      00493         
                      00494 ;******************************************************************************;
                      00495 ;                                GOODBYE                                       ;
                      00496 ;******************************************************************************;
014B                  00497 STOP_STDBY_MSG
                      00498         WRT_LCD     "H"
014B   3048               M         MOVLW       "H"
014C   2???               M         CALL        WR_DATA
                      00499         WRT_LCD     "I"
014D   3049               M         MOVLW       "I"
014E   2???               M         CALL        WR_DATA
                      00500         WRT_LCD     "T"
014F   3054               M         MOVLW       "T"
0150   2???               M         CALL        WR_DATA
                      00501         WRT_LCD     " "
0151   3020               M         MOVLW       " "
0152   2???               M         CALL        WR_DATA
                      00502         WRT_LCD     "*"
0153   302A               M         MOVLW       "*"
0154   2???               M         CALL        WR_DATA
                      00503         WRT_LCD     " "
0155   3020               M         MOVLW       " "
0156   2???               M         CALL        WR_DATA
                      00504         WRT_LCD     "F"
0157   3046               M         MOVLW       "F"
0158   2???               M         CALL        WR_DATA
                      00505         WRT_LCD     "O"
0159   304F               M         MOVLW       "O"
015A   2???               M         CALL        WR_DATA
                      00506         WRT_LCD     "R"
015B   3052               M         MOVLW       "R"
015C   2???               M         CALL        WR_DATA
                      00507         WRT_LCD     " "
015D   3020               M         MOVLW       " "
015E   2???               M         CALL        WR_DATA
                      00508         WRT_LCD     "D"
015F   3044               M         MOVLW       "D"
0160   2???               M         CALL        WR_DATA
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00509         WRT_LCD     "A"
0161   3041               M         MOVLW       "A"
0162   2???               M         CALL        WR_DATA
                      00510         WRT_LCD     "T"
0163   3054               M         MOVLW       "T"
0164   2???               M         CALL        WR_DATA
                      00511         WRT_LCD     "A"
0165   3041               M         MOVLW       "A"
0166   2???               M         CALL        WR_DATA
0167   0008           00512         RETURN
                      00513          
                      00514 ;******************************************************************************;
                      00515 ;                                 DATA                                         ;
                      00516 ;******************************************************************************;
0168                  00517 WRT_DATA        
                      00518         WRT_LCD     "N"
0168   304E               M         MOVLW       "N"
0169   2???               M         CALL        WR_DATA
                      00519         WRT_LCD     "U"
016A   3055               M         MOVLW       "U"
016B   2???               M         CALL        WR_DATA
                      00520         WRT_LCD     "M"
016C   304D               M         MOVLW       "M"
016D   2???               M         CALL        WR_DATA
                      00521         WRT_LCD     " "
016E   3020               M         MOVLW       " "
016F   2???               M         CALL        WR_DATA
                      00522         WRT_LCD     "S"
0170   3053               M         MOVLW       "S"
0171   2???               M         CALL        WR_DATA
                      00523         WRT_LCD     "P"
0172   3050               M         MOVLW       "P"
0173   2???               M         CALL        WR_DATA
                      00524         WRT_LCD     "O"
0174   304F               M         MOVLW       "O"
0175   2???               M         CALL        WR_DATA
                      00525         WRT_LCD     "T"
0176   3054               M         MOVLW       "T"
0177   2???               M         CALL        WR_DATA
                      00526         WRT_LCD     "S"
0178   3053               M         MOVLW       "S"
0179   2???               M         CALL        WR_DATA
                      00527         WRT_LCD     ":"
017A   303A               M         MOVLW       ":"
017B   2???               M         CALL        WR_DATA
                      00528         WRT_LCD     " "
017C   3020               M         MOVLW       " "
017D   2???               M         CALL        WR_DATA
                      00529         CWRT_MEM_LCD num_spots
017E   0856               M         MOVFW       num_spots
017F   3E30               M         ADDLW       D'48'
0180   2???               M         CALL        WR_DATA
0181   0008           00530         RETURN
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00531 ;******************************************************************************;
                      00532 ;                           RETREIVE START TIME                                ;
                      00533 ;******************************************************************************;
0182                  00534 GET_START_TIME
                      00535         ;Get minute             
                      00536         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0182   3001               M         movlw       0x01
0183   1283 1303          M         banksel     0x73
0185   00F3               M         movwf       0x73
0186   2???               M         call        read_rtc
0187   1283 1303          M         banksel     0x75
0189   0875               M         movf        0x75,w
018A   2???               M         call        rtc_convert   
018B   0877           00537         MOVFW       0X77
018C   00C7           00538         MOVWF       start_min10
018D   0878           00539         MOVFW       0X78
018E   00C6           00540         MOVWF       start_min
                      00541 
                      00542         ;Get seconds
                      00543         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
018F   3000               M         movlw       0x00
0190   1283 1303          M         banksel     0x73
0192   00F3               M         movwf       0x73
0193   2???               M         call        read_rtc
0194   1283 1303          M         banksel     0x75
0196   0875               M         movf        0x75,w
0197   2???               M         call        rtc_convert   
0198   0877           00544         MOVFW       0X77
0199   00C9           00545         MOVWF       start_sec10
019A   0878           00546         MOVFW       0X78
019B   00C8           00547         MOVWF       start_sec
019C   0008           00548         RETURN
                      00549 ;******************************************************************************;
                      00550 ;                           RETREIVE STOP TIME                                 ;
                      00551 ;******************************************************************************;
019D                  00552 GET_STOP_TIME
                      00553         ;Get minute             
                      00554         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
019D   3001               M         movlw       0x01
019E   1283 1303          M         banksel     0x73
01A0   00F3               M         movwf       0x73
01A1   2???               M         call        read_rtc
01A2   1283 1303          M         banksel     0x75
01A4   0875               M         movf        0x75,w
01A5   2???               M         call        rtc_convert   
01A6   0877           00555         MOVFW       0X77
01A7   00CB           00556         MOVWF       stop_min10
01A8   0878           00557         MOVFW       0X78
01A9   00CA           00558         MOVWF       stop_min
                      00559 
                      00560         ;Get seconds
                      00561         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01AA   3000               M         movlw       0x00
01AB   1283 1303          M         banksel     0x73
01AD   00F3               M         movwf       0x73
01AE   2???               M         call        read_rtc
01AF   1283 1303          M         banksel     0x75
01B1   0875               M         movf        0x75,w
01B2   2???               M         call        rtc_convert   
01B3   0877           00562         MOVFW       0X77
01B4   00CD           00563         MOVWF       stop_sec10
01B5   0878           00564         MOVFW       0X78
01B6   00CC           00565         MOVWF       stop_sec
01B7   0008           00566         RETURN
                      00567 ;******************************************************************************;
                      00568 ;                       DISPLAY RTC TIME TO LCD                                ;
                      00569 ;******************************************************************************;
01B8                  00570 SHOW_RTC
                      00571         ;clear LCD screen
01B8   3001           00572         movlw       b'00000001'
01B9   2???           00573         call        WR_INS
                      00574 
                      00575         ;Get year
                      00576         WRT_LCD     "2"
01BA   3032               M         MOVLW       "2"
01BB   2???               M         CALL        WR_DATA
                      00577         WRT_LCD     "0"
01BC   3030               M         MOVLW       "0"
01BD   2???               M         CALL        WR_DATA
                      00578         rtc_read    0x06                ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01BE   3006               M         movlw       0x06
01BF   1283 1303          M         banksel     0x73
01C1   00F3               M         movwf       0x73
01C2   2???               M         call        read_rtc
01C3   1283 1303          M         banksel     0x75
01C5   0875               M         movf        0x75,w
01C6   2???               M         call        rtc_convert   
                      00579         WRT_MEM_LCD 0x77
01C7   0877               M         MOVFW       0x77
01C8   2???               M         CALL        WR_DATA
                      00580         WRT_MEM_LCD 0x78
01C9   0878               M         MOVFW       0x78
01CA   2???               M         CALL        WR_DATA
                      00581 
                      00582         WRT_LCD     "/"
01CB   302F               M         MOVLW       "/"
01CC   2???               M         CALL        WR_DATA
                      00583 
                      00584         ;Get month
                      00585         rtc_read    0x05                ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01CD   3005               M         movlw       0x05
01CE   1283 1303          M         banksel     0x73
01D0   00F3               M         movwf       0x73
01D1   2???               M         call        read_rtc
01D2   1283 1303          M         banksel     0x75
01D4   0875               M         movf        0x75,w
01D5   2???               M         call        rtc_convert   
                      00586         WRT_MEM_LCD 0x77
01D6   0877               M         MOVFW       0x77
01D7   2???               M         CALL        WR_DATA
                      00587         WRT_MEM_LCD 0x78
01D8   0878               M         MOVFW       0x78
01D9   2???               M         CALL        WR_DATA
                      00588 
                      00589         WRT_LCD     "/"
01DA   302F               M         MOVLW       "/"
01DB   2???               M         CALL        WR_DATA
                      00590 
                      00591         ;Get day
                      00592         rtc_read    0x04                ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01DC   3004               M         movlw       0x04
01DD   1283 1303          M         banksel     0x73
01DF   00F3               M         movwf       0x73
01E0   2???               M         call        read_rtc
01E1   1283 1303          M         banksel     0x75
01E3   0875               M         movf        0x75,w
01E4   2???               M         call        rtc_convert   
                      00593         WRT_MEM_LCD 0x77
01E5   0877               M         MOVFW       0x77
01E6   2???               M         CALL        WR_DATA
                      00594         WRT_MEM_LCD 0x78
01E7   0878               M         MOVFW       0x78
01E8   2???               M         CALL        WR_DATA
                      00595 
01E9   30C0           00596         movlw       B'11000000'         ;Next line displays (hour):(min):(sec) **:**:**
01EA   2???           00597         call        WR_INS
                      00598         ;Get hour
                      00599         rtc_read    0x02                ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01EB   3002               M         movlw       0x02
01EC   1283 1303          M         banksel     0x73
01EE   00F3               M         movwf       0x73
01EF   2???               M         call        read_rtc
01F0   1283 1303          M         banksel     0x75
01F2   0875               M         movf        0x75,w
01F3   2???               M         call        rtc_convert   
                      00600         WRT_MEM_LCD 0x77
01F4   0877               M         MOVFW       0x77
01F5   2???               M         CALL        WR_DATA
                      00601         WRT_MEM_LCD 0x78
01F6   0878               M         MOVFW       0x78
01F7   2???               M         CALL        WR_DATA
                      00602         WRT_LCD     ":"
01F8   303A               M         MOVLW       ":"
01F9   2???               M         CALL        WR_DATA
                      00603 
                      00604         ;Get minute             
                      00605         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01FA   3001               M         movlw       0x01
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01FB   1283 1303          M         banksel     0x73
01FD   00F3               M         movwf       0x73
01FE   2???               M         call        read_rtc
01FF   1283 1303          M         banksel     0x75
0201   0875               M         movf        0x75,w
0202   2???               M         call        rtc_convert   
                      00606         WRT_MEM_LCD 0x77
0203   0877               M         MOVFW       0x77
0204   2???               M         CALL        WR_DATA
                      00607         WRT_MEM_LCD 0x78
0205   0878               M         MOVFW       0x78
0206   2???               M         CALL        WR_DATA
                      00608         WRT_LCD     ":"
0207   303A               M         MOVLW       ":"
0208   2???               M         CALL        WR_DATA
                      00609 
                      00610         ;Get seconds
                      00611         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0209   3000               M         movlw       0x00
020A   1283 1303          M         banksel     0x73
020C   00F3               M         movwf       0x73
020D   2???               M         call        read_rtc
020E   1283 1303          M         banksel     0x75
0210   0875               M         movf        0x75,w
0211   2???               M         call        rtc_convert   
                      00612         WRT_MEM_LCD 0x77
0212   0877               M         MOVFW       0x77
0213   2???               M         CALL        WR_DATA
                      00613         WRT_MEM_LCD 0x78
0214   0878               M         MOVFW       0x78
0215   2???               M         CALL        WR_DATA
                      00614 
0216   0008           00615         RETURN
                      00616 ;******************************************************************************;
                      00617 ;                       INITIALIZE RTC TIME                                    ;
                      00618 ;******************************************************************************;                
0217                  00619 SET_RTC_TIME
                      00620         rtc_resetAll    ;reset rtc
                          M ;input:         none
                          M ;output:        none
                          M ;desc:          Resets all the time keeping registers on the RTC to zero
0217   1283 1303          M         banksel     0x74
0219   01F4               M         clrf        0x74
021A   1283 1303          M         banksel     0x73
021C   01F3               M         clrf        0x73
021D   2???               M         call        write_rtc           ;Write 0 to Seconds
021E   1283 1303          M         banksel     0x73
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Message[305]: Using default destination of 1 (file).
0220   0AF3               M         incf        0x73                        ;Set register address to 1
0221   2???               M         call        write_rtc
0222   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0224   0AF3               M         incf        0x73                        ;Set register address to 2
0225   2???               M         call        write_rtc
0226   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0228   0AF3               M         incf        0x73                        ;Set register address to 3
0229   2???               M         call        write_rtc
022A   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
022C   0AF3               M         incf        0x73                        ;Set register address to 4
022D   2???               M         call        write_rtc
022E   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0230   0AF3               M         incf        0x73                        ;Set register address to 5
0231   2???               M         call        write_rtc
0232   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0234   0AF3               M         incf        0x73                        ;Set register address to 6
0235   2???               M         call        write_rtc
                      00621 
                      00622         rtc_set     0x00,       B'10000000'
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0236   1283 1303          M         banksel     0x73
0238   3000               M         movlw       0x00
0239   00F3               M         movwf       0x73
023A   1283 1303          M         banksel     0x74
023C   3080               M         movlw       B'10000000'
023D   00F4               M         movwf       0x74        
023E   2???               M         call        write_rtc
                      00623 
                      00624         ;set time 
                      00625         rtc_set     0x06,       B'00010110'             ; Year
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
023F   1283 1303          M         banksel     0x73
0241   3006               M         movlw       0x06
0242   00F3               M         movwf       0x73
0243   1283 1303          M         banksel     0x74
0245   3016               M         movlw       B'00010110'
0246   00F4               M         movwf       0x74        
0247   2???               M         call        write_rtc
                      00626         rtc_set     0x05,       B'00000100'             ; Month
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0248   1283 1303          M         banksel     0x73
024A   3005               M         movlw       0x05
024B   00F3               M         movwf       0x73
024C   1283 1303          M         banksel     0x74
024E   3004               M         movlw       B'00000100'
024F   00F4               M         movwf       0x74        
0250   2???               M         call        write_rtc
                      00627         rtc_set     0x04,       B'00000110'             ; Date
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0251   1283 1303          M         banksel     0x73
0253   3004               M         movlw       0x04
0254   00F3               M         movwf       0x73
0255   1283 1303          M         banksel     0x74
0257   3006               M         movlw       B'00000110'
0258   00F4               M         movwf       0x74        
0259   2???               M         call        write_rtc
                      00628         rtc_set     0x03,       B'00000010'             ; Day
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
025A   1283 1303          M         banksel     0x73
025C   3003               M         movlw       0x03
025D   00F3               M         movwf       0x73
025E   1283 1303          M         banksel     0x74
0260   3002               M         movlw       B'00000010'
0261   00F4               M         movwf       0x74        
0262   2???               M         call        write_rtc
                      00629         rtc_set     0x02,       B'00000000'             ; Hours
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0263   1283 1303          M         banksel     0x73
0265   3002               M         movlw       0x02
0266   00F3               M         movwf       0x73
0267   1283 1303          M         banksel     0x74
0269   3000               M         movlw       B'00000000'
026A   00F4               M         movwf       0x74        
026B   2???               M         call        write_rtc
                      00630         rtc_set     0x01,       B'00000000'             ; Minutes
                          M ;input:         addliteral: value of address
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
026C   1283 1303          M         banksel     0x73
026E   3001               M         movlw       0x01
026F   00F3               M         movwf       0x73
0270   1283 1303          M         banksel     0x74
0272   3000               M         movlw       B'00000000'
0273   00F4               M         movwf       0x74        
0274   2???               M         call        write_rtc
                      00631         rtc_set     0x00,       B'00000000'             ; Seconds
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0275   1283 1303          M         banksel     0x73
0277   3000               M         movlw       0x00
0278   00F3               M         movwf       0x73
0279   1283 1303          M         banksel     0x74
027B   3000               M         movlw       B'00000000'
027C   00F4               M         movwf       0x74        
027D   2???               M         call        write_rtc
027E   0008           00632         return
                      00633 
                      00634 ;******************************************************************************;                
                      00635 ;******************************************************************************;
                      00636 ;******************************************************************************;
027F                  00637 DIV16X8 ; DIV_HI and DIV_LO / DIVSOR.  result to Q
                      00638                 ; does not deal with divide by 0 case
027F   01C2           00639         CLRF Q
0280                  00640 DIV_1
0280   0841           00641         MOVF DIVISOR, W
0281   02C0           00642         SUBWF DIV_LO, F
0282   1C03           00643         BTFSS STATUS, C ; if positive skip
0283   2???           00644         GOTO BORROW
0284   2???           00645         GOTO DIV_2
0285                  00646 BORROW
0285   3001           00647         MOVLW 0x01
0286   02BF           00648         SUBWF DIV_HI, F ; DIV_HI = DIV_HI - 1
0287   1C03           00649         BTFSS STATUS, C ; if no borrow occurred
0288   2???           00650         GOTO DIV_DONE   
0289                  00651 DIV_2
0289   0AC2           00652         INCF Q, F
028A   2???           00653         GOTO DIV_1
028B                  00654 DIV_DONE
028B   0008           00655         RETURN
                      00656 
028C                  00657 DEL_1S
028C   3015           00658         movlw   0x15
028D   00C3           00659         movwf   d1
028E   3074           00660         movlw   0x74
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

028F   00C4           00661         movwf   d2
0290   3006           00662         movlw   0x06
0291   00C5           00663         movwf   d3
0292                  00664 DEL_1S_0
0292   0BC3           00665         decfsz  d1, f
0293   2???           00666         goto    $+2
0294   0BC4           00667         decfsz  d2, f
0295   2???           00668         goto    $+2
0296   0BC5           00669         decfsz  d3, f
0297   2???           00670         goto    DEL_1S_0
0298   2???           00671         goto    $+1
0299   2???           00672         goto    $+1
029A   0008           00673         return
                      00674         
029B                  00675 LONG_DLY
029B   30FF           00676         MOVLW       0xFF
029C   00BC           00677         MOVWF       long_del
029D                  00678 LD_LOOP 
Warning[207]: Found label after column 1. (LCD_DLY)
029D                  00679         LCD_DLY
029D   0BBC           00680         DECFSZ      long_del, f
029E   2???           00681         GOTO        LD_LOOP
029F   0008           00682         RETURN
                      00683         
02A0                  00684 DEL_10MS
02A0   3086           00685         movlw   0x86
02A1   00C3           00686         movwf   d1
02A2   3014           00687         movlw   0x14
02A3   00C4           00688         movwf   d2
02A4                  00689 DEL_10MS_0
02A4   0BC3           00690         decfsz  d1, f
02A5   2???           00691         goto    $+2
02A6   0BC4           00692         decfsz  d2, f
02A7   2???           00693         goto    DEL_10MS_0
02A8   2???           00694         goto    $+1
02A9   0000           00695         nop
02AA   0008           00696         return
                      00697 
02AB                  00698 DEL_2_1MS
02AB   3018           00699         movlw   0x18
02AC   00C3           00700         movwf   d1
02AD   3005           00701         movlw   0x05
02AE   00C4           00702         movwf   d2
02AF                  00703 DEL_2_1MS_0
02AF   0BC3           00704         decfsz  d1, f
02B0   2???           00705         goto    $+2
02B1   0BC4           00706         decfsz  d2, f
02B2   2???           00707         goto    DEL_2_1MS_0
02B3   2???           00708         goto    $+1
02B4   0000           00709         nop
02B5   0008           00710         return
                      00711         
02B6                  00712 DEL_1_5MS
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02B6   30EC           00713         movlw   0xEC
02B7   00C3           00714         movwf   d1
02B8   3003           00715         movlw   0x03
02B9   00C4           00716         movwf   d2
02BA                  00717 DEL_1_5MS_0
02BA   0BC3           00718         decfsz  d1, f
02BB   2???           00719         goto    $+2
02BC   0BC4           00720         decfsz  d2, f
02BD   2???           00721         goto    DEL_1_5MS_0
02BE   2???           00722         goto    $+1
02BF   0000           00723         nop
02C0   0008           00724         return
                      00725         
02C1                  00726 DEL_20US
02C1   300F           00727         movlw   0x0F
02C2   00C3           00728         movwf   d1
02C3                  00729 DEL_20US_0
02C3   0BC3           00730         decfsz  d1, f
02C4   2???           00731         goto    DEL_20US_0
02C5   0008           00732         return
                      00733 
Warning[207]: Found label after column 1. (FINISH)
02C6                  00734         FINISH  
02C6   2???           00735         GOTO    FINISH
                      00736         
3F72                  00737         END
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADD                               00000036
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ARM_CLOSE                         000000A5
ARM_CTRL                          000000A0
ARM_OPEN                          000000AD
B1                                0000003A
B2                                0000003B
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BORROW                            00000285
BRGH                              00000002
C                                 00000000
CALIBRATE                         0000005C
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

CHS2                              00000005
CKE                               00000006
CKP                               00000004
CLR_LCD                           00000000
CONTROL                           00000035
CREN                              00000004
CSRC                              00000007
CWRT_MEM_LCD                      
D                                 00000005
DAT                               00000037
DATA_ADDRESS                      00000005
DATA_LOOP                         00000127
DC                                00000001
DEL_10MS                          000002A0
DEL_10MS_0                        000002A4
DEL_1S                            0000028C
DEL_1S_0                          00000292
DEL_1_5MS                         000002B6
DEL_1_5MS_0                       000002BA
DEL_20US                          000002C1
DEL_20US_0                        000002C3
DEL_2_1MS                         000002AB
DEL_2_1MS_0                       000002AF
DIV16X8                           0000027F
DIVISOR                           00000041
DIV_1                             00000280
DIV_2                             00000289
DIV_DONE                          0000028B
DIV_HI                            0000003F
DIV_LO                            00000040
DOUT                              00000039
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FINAL_BACKUP                      000000E9
FINISH                            000002C6
FSR                               00000004
GCEN                              00000007
GET_START_TIME                    00000182
GET_STOP_TIME                     0000019D
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

GO_NOT_DONE                       00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INIT                              00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
INT_HANDLER                       0000006F
IRP                               00000007
InitLCD                           00000000
LCD_DLY                           0000029D
LCD_INS                           
LD_LOOP                           0000029D
LONG_DLY                          0000029B
MOTOR_DIR_CTRL                    PORTC, 5
MULT                              
MX_LOOP                           0000007C
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NO_SPOT                           00000099
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
Q                                 00000042
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_IRS                          0000007A
READ_WRITE                        00000002
RETURN_HOME                       000000E0
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SCAN                              00000066
SEN                               00000000
SET_RTC_TIME                      00000217
SHOW_RTC                          000001B8
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
START_MSG                         0000012E
START_STDBY                       0000004F
STATUS                            00000003
STOP_DATA                         000000F7
STOP_STDBY                        000000EE
STOP_STDBY_MSG                    0000014B
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
USHOLDL                           000000BC
USHOLDS                           000000D1
USONIC_LAT                        000000B6
USONIC_LAT_ECHO                   000000B9
USONIC_SUP                        000000CB
USONIC_SUP_ECHO                   000000CE
W                                 00000000
WCOL                              00000007
WHL_ENC                           0000009D
WR                                00000001
WREN                              00000002
WRERR                             00000003
WRT_DATA                          00000168
WRT_LCD                           
WRT_MEM_LCD                       
WR_DATA                           00000000
WR_INS                            00000000
XBUF                              00000033
Z                                 00000002
_.org_1_0055                      00000055
_.org_1_00BA                      000000BA
_.org_1_00CF                      000000CF
_.org_1_00F2                      000000F2
_.org_1_0293                      00000293
_.org_1_0295                      00000295
_.org_1_0298                      00000298
_.org_1_0299                      00000299
_.org_1_02A5                      000002A5
_.org_1_02A8                      000002A8
_.org_1_02B0                      000002B0
_.org_1_02B3                      000002B3
_.org_1_02BB                      000002BB
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

_.org_1_02BE                      000002BE
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
count                             00000034
crit_dist                         0X08
d1                                00000043
d2                                00000044
d3                                00000045
dt1                               00000030
dt2                               00000031
dt3                               00000032
flag                              00000038
i2c_common_setup                  00000000
long_del                          0000003C
measured_distance_lat             00000052
measured_distance_sup             00000053
MPASM 5.65                          MAIN.ASM   3-12-2016  16:37:28         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

multiplex_count                   0000004F
num_spots                         00000056
read_rtc                          00000000
rob_lat_distance                  00000050
rob_long_distance                 00000051
rob_return                        00000054
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
spot_base_loc                     00000057
spot_count                        00000055
spot_detected                     0000004E
start_min                         00000046
start_min10                       00000047
start_sec                         00000048
start_sec10                       00000049
stop_min                          0000004A
stop_min10                        0000004B
stop_sec                          0000004C
stop_sec10                        0000004D
temp_status                       0000003E
temp_w                            0000003D
write_rtc                         00000000

Errors   :     0
Warnings :     2 reported,     0 suppressed
Messages :    24 reported,     0 suppressed

