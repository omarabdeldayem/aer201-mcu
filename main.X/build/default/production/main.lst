MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;******************************************************************************;
                      00002 ;        ____    ___  ______    ___  ____       ____  ____  ____    ___  ____  ;
                      00003 ;       |    \  /  _]|      T  /  _]|    \     |    \l    j|    \  /  _]|    \ ;
                      00004 ;       |  o  )/  [_ |      | /  [_ |  D  )    |  o  )|  T |  o  )/  [_ |  D  );
                      00005 ;       |   _/Y    _]l_j  l_jY    _]|    /     |   _/ |  | |   _/Y    _]|    / ;
                      00006 ;       |  |  |   [_   |  |  |   [_ |    \     |  |   |  | |  |  |   [_ |    \ ;
                      00007 ;       |  |  |     T  |  |  |     T|  .  Y    |  |   j  l |  |  |     T|  .  Y;
                      00008 ;       l__j  l_____j  l__j  l_____jl__j\_j    l__j  |____jl__j  l_____jl__j\_j;
                      00009 ;------------------------------------------------------------------------------;
                      00010 ;               AER201 Team 61 'Peter Piper' Pipe Inspector                    ;
                      00011 ;                        Author: Omar Abdeldayem                               ;
                      00012 ;                           Created: 1/12/2016                                 ;
                      00013 ;------------------------------------------------------------------------------;
                      00014 ; DESCRIPTION:                                                                                          
                                                               ;
                      00015 ; It does shit, yo.                                                                                     
                                                               ;
                      00016 ;******************************************************************************;
                      00017 ;******************************************************************************;
                      00018 ;******************************************************************************;
                      00019 
                      00020         List    p=16f877                    ; list directive to define processor
                      00021         #include        <p16f877.inc>       ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
2007   3F72           00022         __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP
                            _OFF
                      00023 
                      00024         #include        <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel     0x74
                      00011         clrf        0x74
                      00012         banksel     0x73
                      00013         clrf        0x73
                      00014         call        write_rtc           ;Write 0 to Seconds
                      00015         banksel     0x73
                      00016         incf        0x73                        ;Set register address to 1
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00017         call        write_rtc
                      00018         banksel     0x73
                      00019         incf        0x73                        ;Set register address to 2
                      00020         call        write_rtc
                      00021         banksel     0x73
                      00022         incf        0x73                        ;Set register address to 3
                      00023         call        write_rtc
                      00024         banksel     0x73
                      00025         incf        0x73                        ;Set register address to 4
                      00026         call        write_rtc
                      00027         banksel     0x73
                      00028         incf        0x73                        ;Set register address to 5
                      00029         call        write_rtc
                      00030         banksel     0x73
                      00031         incf        0x73                        ;Set register address to 6
                      00032         call        write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set macro       addliteral, datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel     0x73
                      00042         movlw       addliteral
                      00043         movwf       0x73
                      00044         banksel     0x74
                      00045         movlw       datliteral
                      00046         movwf       0x74        
                      00047         call        write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read macro      addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw       addliteral
                      00058         banksel     0x73
                      00059         movwf       0x73
                      00060         call        read_rtc
                      00061         banksel     0x75
                      00062         movf        0x75,w
                      00063         call        rtc_convert   
                      00064         endm
                      00025         #include        <lcd.inc>
  0000                00001     extern      InitLCD,WR_INS,WR_DATA,CLR_LCD
                      00026 ;******************************************************************************;
                      00027 ;                               BANK0 RAM                                      ;
                      00028 ;******************************************************************************;
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00029         CBLOCK      0x30
  00000030            00030         long_del    ; 0x30
  00000031            00031         temp_w      ; 0x31
  00000032            00032         temp_status ; 0x32
                      00033                     ; DIVISION Registers
  00000033            00034         DIV_HI      ; 0X33
  00000034            00035         DIV_LO      ; 0X34
  00000035            00036         DIVISOR     ; 0X35
  00000036            00037         Q           ; 0X36
  00000037            00038         d1
  00000038            00039         d2
  00000039            00040         d3          ; 0X39
                      00041                     ; ROBOT VARS
  0000003A            00042         start_min   ; 0X3A
  0000003B            00043         start_min10 ; 0X3B
  0000003C            00044         start_sec
  0000003D            00045         start_sec10
  0000003E            00046         stop_min
  0000003F            00047         stop_min10
  00000040            00048         stop_sec    ; 0X40
  00000041            00049         stop_sec10  ; 0x41
  00000042            00050         spot_detected
  00000043            00051         multiplex_count
  00000044            00052         rob_lat_distance
  00000045            00053         rob_long_distance_count ; 0X45
  00000046            00054         rob_long_distance       ; 0X46
  00000047            00055         measured_distance_lat
  00000048            00056         measured_distance_sup
  00000049            00057         rob_return
  0000004A            00058         spot_count  ; 0X4A
  0000004B            00059         num_spots
  0000004C            00060         spot_base_loc
                      00061         ENDC
                      00062 
                      00063 ;******************************************************************************;
                      00064 ;                               EQUATES                                        ;
                      00065 ;******************************************************************************;
                      00066         #define     crit_dist           0X0A
                      00067         #define     crit_dist_l         0x05
                      00068         #define     crit_dist_r         0x0A
                      00069         #define     MUX_IN              PORTA, 0
                      00070         #define     MUX_CTRL_0          PORTA, 1
                      00071         #define     MUX_CTRL_1          PORTA, 2
                      00072         #define     MUX_CTRL_2          PORTA, 3
                      00073         #define     MUX_CTRL_3          PORTA, 5
                      00074         #define     SERVO_CTRL          PORTC, 0
                      00075         #define     US_SUP_TRIG         PORTB, 3
                      00076         #define     US_SUP_ECHO         PORTB, 4
                      00077         ;#define            MUX_IN              PORTC, 0
                      00078         #define     MOTOR_DIR_CTRL      PORTC, 5
                      00079         #define     BUZZER              PORTC, 7
                      00080         #define     US_LAT_TRIG         PORTD, 0
                      00081         #define     US_LAT_ECHO         PORTD, 1
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00082         #define     L_MOTOR_SPD         B'11111001'
                      00083         #define     R_MOTOR_SPD         B'11111001'
                      00084 ;******************************************************************************;
                      00085 ;                               MACROS                                         ;
                      00086 ;******************************************************************************;
                      00087 WRT_LCD macro       val
                      00088         MOVLW       val
                      00089         CALL        WR_DATA
                      00090         endm
                      00091 LCD_INS macro       val
                      00092         MOVLW       val
                      00093         CALL        WR_INS
                      00094         endm
                      00095         
                      00096 WRT_MEM_LCD macro   val
                      00097         MOVFW       val
                      00098         CALL        WR_DATA
                      00099         endm
                      00100 
                      00101 CWRT_MEM_LCD macro   val
                      00102         MOVFW       val
                      00103         ADDLW       D'48'
                      00104         CALL        WR_DATA
                      00105         endm
                      00106 ;******************************************************************************;
                      00107 ;                          VECTOR TABLE                                        ;
                      00108 ;******************************************************************************;
                      00109         ORG         0x0000              ; RESET vector must always be at 0x00
0000   2???           00110         GOTO        INIT                ; Just jump to the main code section.
                      00111         ORG         0x0004
0004   2???           00112         GOTO        INT_HANDLER
                      00113 
                      00114 ;******************************************************************************;
                      00115 ;                         ROBOT INITIALIZATION                                 ;
                      00116 ;******************************************************************************;
0005                  00117 INIT
0005   1683           00118         BSF         STATUS, RP0         ; Select bank 1
0006   018B           00119         CLRF        INTCON              ; Disable interrupts for now
                      00120         
                      00121         ;MOVLW      0x06                ; Turn PORT A to digital
                      00122         ;MOVWF      ADCON1
0007   300E           00123         movlw       b'00001110'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0008   009F           00124         movwf       ADCON1
                      00125         
0009   3011           00126         MOVLW       b'00010001'         ; PORT A pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000A   0085           00127         MOVWF       TRISA
000B   30F3           00128         MOVLW       b'11110011'         ; PORT B pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000C   0086           00129         MOVWF       TRISB
000D   3018           00130         MOVLW       b'00011000'         ; PORT C pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000E   0087           00131         MOVWF       TRISC
000F   3002           00132         MOVLW       B'00000010'         ; PORT D pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0010   0088           00133         MOVWF       TRISD               
0011   3001           00134         MOVLW       b'00000001'         ; PORT E pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0012   0089           00135         MOVWF       TRISE
                      00136         
0013   30FF           00137         MOVLW       B'11111111'         ; PWM pulsing period (484Hz)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0014   0092           00138         MOVWF       PR2
                      00139        
0015   1283           00140         BCF         STATUS, RP0         ; select bank 0
                      00141 
0016   30C5           00142         MOVLW       b'11000101'         ;clock selected, ADC module turned on
0017   009F           00143         MOVWF       ADCON0
                      00144                 
0018   30F9           00145         MOVLW       L_MOTOR_SPD         ; 100% DUTY CYCLE
0019   0095           00146         MOVWF       CCPR1L              
001A   30F9           00147         MOVLW       R_MOTOR_SPD         ; '01100100' 100% DUTY CYCLE
001B   009B           00148         MOVWF       CCPR2L
001C   30FF           00149         MOVLW       B'11111111'
001D   0097           00150         MOVWF       CCP1CON
001E   30FF           00151         MOVLW       B'11111111'
001F   009D           00152         MOVWF       CCP2CON
                      00153         
0020   3005           00154         MOVLW       B'00000101'         ; Initialize and hold timer 2
0021   0092           00155         MOVWF       T2CON
0022   0191           00156         CLRF        TMR2
0023   1112           00157         BCF         T2CON, TMR2ON
                      00158         
0024   3010           00159         MOVLW       0X10                ; TMR1 for Ultrasonic Sensors
0025   0090           00160         MOVWF       T1CON
0026   018F           00161         CLRF        TMR1H
0027   018E           00162         CLRF        TMR1L
                      00163         
                      00164         ;CALL       i2c_common_setup
0028   2???           00165         CALL        InitLCD
                      00166         
0029   01CB           00167         CLRF        num_spots
002A   01CA           00168         CLRF        spot_count
002B   01C2           00169         CLRF        spot_detected
002C   01C7           00170         CLRF        measured_distance_lat
002D   1387           00171         BCF         BUZZER
                      00172         
002E   2???           00173         CALL        START_MSG
                      00174 ;******************************************************************************;
                      00175 ;                        ROBOT START AND STANDBY                               ;
                      00176 ;******************************************************************************;
002F                  00177 START_STDBY
002F   1C86           00178         BTFSS       PORTB, 1            ; Wait until data is available from the keypad
0030   2???           00179         GOTO        START_STDBY
                      00180 
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0031   0E06           00181         SWAPF       PORTB, W            ; Read PortB<7:4> into W<3:0>
0032   390F           00182         ANDLW       0x0F
0033   2???           00183         CALL        CLR_LCD
                      00184 
0034   1886           00185         BTFSC       PORTB,1             ; Wait until key is released
0035   2???           00186         GOTO        $-1
                      00187 
0036   2???           00188         CALL        CLR_LCD
0037   2???           00189         CALL        DEL_1S
0038   2???           00190         CALL        DEL_1S
0039   1687           00191         BSF         MOTOR_DIR_CTRL
003A   1512           00192         BSF         T2CON, TMR2ON
                      00193         
                      00194         ;CALL       SET_RTC_TIME
                      00195         ;CALL       GET_START_TIME
003B   2???           00196         GOTO        CALIBRATE
                      00197         ;GOTO       SCAN
                      00198 
                      00199 ;******************************************************************************;
                      00200 ;                           SENSOR CALIBRATION                                 ;
                      00201 ;******************************************************************************;
003C                  00202 CALIBRATE
003C   2???           00203         CALL        DEL_10MS
003D   2???           00204         CALL        DEL_10MS
003E   2???           00205         CALL        DEL_10MS
003F   2???           00206         CALL        DEL_10MS
0040   2???           00207         CALL        DEL_10MS
0041   2???           00208         CALL        USONIC_LAT
0042   300A           00209         MOVLW       crit_dist
0043   0247           00210         SUBWF       measured_distance_lat, W
0044   1803           00211         BTFSC       STATUS, 0
0045   2???           00212         GOTO        CALIBRATE
0046   1787           00213         BSF         BUZZER
0047   2???           00214         CALL        DEL_10MS
0048   2???           00215         CALL        DEL_10MS
0049   1008           00216         BCF         US_LAT_TRIG
004A   1088           00217         BCF         US_LAT_ECHO
004B   01C7           00218         CLRF        measured_distance_lat
004C   01B6           00219         CLRF        Q
004D   158B           00220         BSF         INTCON, RBIE            ; Enable interrupts
004E   160B           00221         BSF         INTCON, INTE
004F   178B           00222         BSF         INTCON, GIE
0050   1387           00223         BCF         BUZZER
0051   304C           00224         MOVLW       spot_base_loc
0052   0084           00225         MOVWF       FSR
0053   2???           00226         GOTO        SCAN
                      00227         
                      00228 ;******************************************************************************;
                      00229 ;                         PIPE SCAN SUPERLOOP                                  ;
                      00230 ;******************************************************************************;
0054                  00231 SCAN
                      00232         ;CALL       USONIC_SUP
                      00233         ;CALL       ARM_CTRL
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0054   2???           00234         CALL        DEL_10MS
0055   2???           00235         CALL        DEL_10MS
0056   2???           00236         CALL        DEL_10MS
0057   2???           00237         CALL        DEL_10MS
0058   2???           00238         CALL        DEL_10MS
0059   2???           00239         CALL        USONIC_LAT
005A   2???           00240         CALL        MOTOR_CTRL_R
005B   2???           00241         CALL        MOTOR_CTRL_L
                      00242 ;       CALL        DEL_10MS
                      00243 ;       CALL        DEL_10MS
                      00244 ;       CALL        DEL_10MS
                      00245 ;       CALL        DEL_10MS
                      00246 ;       CALL        USONIC_LAT
                      00247 ;       MOVLW       crit_dist
                      00248 ;       SUBWF       measured_distance_lat, W
                      00249 ;       BTFSS       STATUS, 0
                      00250 ;       GOTO        RETURN_HOME
                      00251 ;;      CALL        SHOW_RTC                ; DEBUG
                      00252         ;CALL       READ_IRS
                      00253         
005C   2???           00254         GOTO        SCAN
                      00255 
                      00256 ;******************************************************************************;
                      00257 ;                           RETURN HOME ROUTINE                                ;
                      00258 ;******************************************************************************;
005D                  00259 RETURN_HOME
005D   2???           00260         CALL        DEL_10MS
005E   2???           00261         CALL        DEL_10MS
005F   2???           00262         CALL        DEL_10MS
0060   2???           00263         CALL        DEL_10MS
0061   2???           00264         CALL        DEL_10MS
0062   1787           00265         BSF         BUZZER 
0063   018B           00266         CLRF        INTCON
0064   1687           00267         BSF         MOTOR_DIR_CTRL
0065   2???           00268         CALL        USONIC_LAT
0066   300A           00269         MOVLW       crit_dist
0067   0247           00270         SUBWF       measured_distance_lat, W
0068   1803           00271         BTFSC       STATUS, 0
0069   2???           00272         GOTO        RETURN_HOME
006A   1387           00273         BCF         BUZZER
006B   2???           00274         GOTO        FINAL_BACKUP
                      00275 
006C                  00276 FINAL_BACKUP
006C   2???           00277         CALL        DEL_1S
006D   2???           00278         GOTO        STOP_STDBY
                      00279         
                      00280 ;******************************************************************************;
                      00281 ;                             STOP STANDBY                                     ;
                      00282 ;******************************************************************************;
006E                  00283 STOP_STDBY
006E   1112           00284         BCF         T2CON, TMR2ON       ; Turn off motors
006F   0197           00285         CLRF        CCP1CON
0070   019D           00286         CLRF        CCP2CON
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0071   0195           00287         CLRF        CCPR1L
0072   019B           00288         CLRF        CCPR2L
                      00289 
                      00290         ;CALL       GET_STOP_TIME       ; Get stop time
0073   2???           00291         CALL        STOP_STDBY_MSG      ; Display standby message
0074   1C86           00292         BTFSS       PORTB, 1            ; Wait until data is available from the keypad
0075   2???           00293         GOTO        $-1
0076   0E06           00294         SWAPF       PORTB, W            ; Read PortB<7:4> into W<3:0>
0077   390F           00295         ANDLW       0x0F 
0078   2???           00296         CALL        CLR_LCD
0079   2???           00297         GOTO        STOP_DATA           ; Display run data
                      00298 
                      00299 ;******************************************************************************;
                      00300 ;                          INTERRUPT HANDLER                                   ;
                      00301 ;******************************************************************************;
007A                  00302 INT_HANDLER
007A   00B1           00303         MOVWF       temp_w
007B   0E03           00304         SWAPF       STATUS, W
007C   00B2           00305         MOVWF       temp_status
007D   100B           00306         BCF         INTCON, RBIF
007E   108B           00307         BCF         INTCON, INTF          ; Clear the interrupt flag
                      00308         
007F   2???           00309         CALL        WHL_ENC
                      00310         
0080   0E32           00311         SWAPF       temp_status, W
0081   0083           00312         MOVWF       STATUS
0082   0EB1           00313         SWAPF       temp_w, F
0083   0E31           00314         SWAPF       temp_w, W
0084   0009           00315         RETFIE
                      00316 
                      00317 ;******************************************************************************;
                      00318 ;                       CYCLE INFRARED SENSORS                                 ;
                      00319 ;******************************************************************************;
0085                  00320 READ_IRS
0085   3010           00321         MOVLW       d'16'
0086   00C3           00322         MOVWF       multiplex_count
0087                  00323 MX_LOOP 
0087   1085           00324         BCF         MUX_CTRL_0
0088   1505           00325         BSF         MUX_CTRL_1
0089   1185           00326         BCF         MUX_CTRL_2
008A   1285           00327         BCF         MUX_CTRL_3
                      00328 
008B   2???           00329         CALL        DEL_1S
                      00330         
008C   081E           00331         MOVFW       ADRESH 
008D   3CC8           00332         SUBLW       D'200'
008E   1C03           00333         BTFSS       STATUS, 0
008F   2???           00334         GOTO        MX_LOOP
0090   1787           00335         BSF         BUZZER
0091   2???           00336         CALL        DEL_1S
0092   1387           00337         BCF         BUZZER
0093   2???           00338         GOTO        MX_LOOP
                      00339         
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00340 ;       DECF        multiplex_count
                      00341 ;       BCF         MUX_CTRL_0
                      00342 ;       BTFSC       multiplex_count, 0
                      00343 ;       BSF         MUX_CTRL_0
                      00344 ;       BCF         MUX_CTRL_1
                      00345 ;       BTFSC       multiplex_count, 1
                      00346 ;       BSF         MUX_CTRL_1
                      00347 ;       BCF         MUX_CTRL_2
                      00348 ;       BTFSC       multiplex_count, 2
                      00349 ;       BSF         MUX_CTRL_2
                      00350 ;       BCF         MUX_CTRL_3
                      00351 ;       BTFSC       multiplex_count, 3
                      00352 ;       BSF         MUX_CTRL_3
                      00353         
                      00354 ;       
                      00355 ;       BTFSC       MUX_IN
                      00356 ;       RETURN
                      00357 ;       GOTO        MX_LOOP;NO_SPOT 
                      00358 ;       BSF         BUZZER                              ; Buzzer start
                      00359 ;       CALL        DEL_1S
                      00360 ;       MOVFW       rob_long_distance                   ; Save spot location
                      00361 ;       MOVWF       INDF
                      00362 ;       INCF        num_spots, f                        ; Increase number of spots
                      00363 ;       INCF        FSR, F
                      00364 ;       BCF         BUZZER                              ; Buzzer stop
                      00365 ;;NO_SPOT       INCF        multiplex_count
                      00366 ;;      DECFSZ      multiplex_count
                      00367 ;       GOTO        MX_LOOP
0094   0008           00368         RETURN
                      00369         
                      00370 ;******************************************************************************;
                      00371 ;                         WHEEL ENCODER ROUTINE                                ;
                      00372 ;******************************************************************************;
0095                  00373 WHL_ENC
Message[305]: Using default destination of 1 (file).
0095   0AC5           00374         INCF        rob_long_distance_count ; Increment number of changes
0096   3006           00375         MOVLW       0x06                    ; Every six changes is approx 1in
0097   02C5           00376         SUBWF       rob_long_distance_count, F
0098   1D03           00377         BTFSS       STATUS, 2
Message[305]: Using default destination of 1 (file).
0099   0AC6           00378         INCF        rob_long_distance       ; One inch was covered
009A   01C5           00379         CLRF        rob_long_distance_count
009B   0008           00380         RETURN
                      00381         
                      00382 ;******************************************************************************;
                      00383 ;                       TOGGLE ARM STATE SUBROUTINES                           ;
                      00384 ;******************************************************************************;
009C                  00385 ARM_CTRL
009C   300A           00386         MOVLW       crit_dist
009D   0248           00387         SUBWF       measured_distance_sup, W
009E   1803           00388         BTFSC       STATUS, 0               ; C==0 if measured_distance_sup < crit_dist
009F   2???           00389         GOTO        ARM_CLOSE
00A0   2???           00390         GOTO        ARM_OPEN
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A1                  00391 ARM_CLOSE                                   ; Close arm for full scan
00A1   1407           00392         BSF         SERVO_CTRL
00A2   2???           00393         CALL        DEL_1_5MS
00A3   1007           00394         BCF         SERVO_CTRL
00A4   2???           00395         CALL        DEL_10MS
00A5   2???           00396         CALL        DEL_10MS
00A6   2???           00397         CALL        DEL_10MS
00A7   2???           00398         CALL        DEL_10MS
00A8   0008           00399         RETURN      
                      00400         
00A9                  00401 ARM_OPEN                                    ; Open arm to clear support
00A9   1407           00402         BSF         SERVO_CTRL
00AA   2???           00403         CALL        DEL_2_1MS
00AB   2???           00404         CALL        DEL_2_1MS
00AC   1007           00405         BCF         SERVO_CTRL
00AD   2???           00406         CALL        DEL_10MS
00AE   2???           00407         CALL        DEL_10MS
00AF   2???           00408         CALL        DEL_10MS
00B0   2???           00409         CALL        DEL_10MS
00B1   0008           00410         RETURN
                      00411 ;******************************************************************************;
                      00412 ;                     ULTRASONIC SENSOR SUBROUTINES                            ;
                      00413 ;******************************************************************************;
00B2                  00414 USONIC_SUP
00B2   1586           00415         BSF         US_SUP_TRIG
00B3   2???           00416         CALL        DEL_20US
00B4   1186           00417         BCF         US_SUP_TRIG
00B5                  00418 USONIC_SUP_ECHO
00B5   1E06           00419         BTFSS       US_SUP_ECHO
00B6   2???           00420         GOTO        $-1
00B7   1410           00421         BSF         T1CON, 0
00B8   1A06           00422 USHOLDS BTFSC       US_SUP_ECHO
00B9   2???           00423         GOTO        USHOLDS
00BA   1010           00424         BCF         T1CON, 0
00BB   080F           00425         MOVF        TMR1H, W
00BC   00B3           00426         MOVWF       DIV_HI
00BD   080E           00427         MOVF        TMR1L, W
00BE   00B4           00428         MOVWF       DIV_LO
00BF   018F           00429         CLRF        TMR1H
00C0   018E           00430         CLRF        TMR1L
00C1   303A           00431         MOVLW       d'58'
00C2   00B5           00432         MOVWF       DIVISOR
00C3   2???           00433         CALL        DIV16X8
00C4   0836           00434         MOVF        Q, W
00C5   00C8           00435         MOVWF       measured_distance_sup
00C6   2???           00436         CALL        rtc_convert
00C7   2???           00437         CALL        CLR_LCD             ; DEBUG!
                      00438         WRT_MEM_LCD 0x77
00C8   0877               M         MOVFW       0x77
00C9   2???               M         CALL        WR_DATA
                      00439         WRT_MEM_LCD 0x78
00CA   0878               M         MOVFW       0x78
00CB   2???               M         CALL        WR_DATA
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CC   0008           00440         RETURN
                      00441 
00CD                  00442 USONIC_LAT
00CD   1408           00443         BSF         US_LAT_TRIG
00CE   2???           00444         CALL        DEL_20US
00CF   1008           00445         BCF         US_LAT_TRIG
00D0                  00446 USONIC_LAT_ECHO
00D0   1C88           00447         BTFSS       US_LAT_ECHO
00D1   2???           00448         GOTO        $-1
00D2   1410           00449         BSF         T1CON, 0
00D3   1888           00450 USHOLDL BTFSC       US_LAT_ECHO
00D4   2???           00451         GOTO        USHOLDL
00D5   1010           00452         BCF         T1CON, 0
00D6   080F           00453         MOVF        TMR1H, W
00D7   00B3           00454         MOVWF       DIV_HI
00D8   080E           00455         MOVF        TMR1L, W
00D9   00B4           00456         MOVWF       DIV_LO
00DA   018F           00457         CLRF        TMR1H
00DB   018E           00458         CLRF        TMR1L
00DC   303A           00459         MOVLW       d'58'
00DD   00B5           00460         MOVWF       DIVISOR
00DE   2???           00461         CALL        DIV16X8
00DF   0836           00462         MOVF        Q, W
00E0   00C7           00463         MOVWF       measured_distance_lat
                      00464         
00E1   0008           00465         RETURN
                      00466         
                      00467 ;******************************************************************************;
                      00468 ;                              ACTIVE CONTROL                                  ;
                      00469 ;******************************************************************************;
00E2                  00470 MOTOR_CTRL_R                                ; Turn right - robot is too close
00E2   3005           00471         MOVLW       crit_dist_l
00E3   0247           00472         SUBWF       measured_distance_lat, W
00E4   1C03           00473         BTFSs       STATUS, 0               ; C==0 if measured_distance_lat < crit_dist
00E5   0008           00474         RETURN
00E6   1A87           00475         BTFSC       MOTOR_DIR_CTRL
00E7   2???           00476         GOTO        STOP_L
00E8                  00477 STOP_R  ;BCF        T2CON, TMR2ON
00E8   019D           00478         CLRF        CCP2CON
                      00479         ;CLRF       CCPR1L
00E9   2???           00480         CALL        DEL_10MS
00EA   2???           00481         CALL        DEL_10MS
00EB   30F9           00482         MOVLW       R_MOTOR_SPD
00EC   009D           00483         MOVWF       CCP2CON
                      00484         ;BSF        T2CON, TMR2ON
00ED   0008           00485         RETURN
                      00486 
00EE                  00487 MOTOR_CTRL_L                                ; Turn left - robot is too far
00EE   300A           00488         MOVLW       crit_dist_r
00EF   0247           00489         SUBWF       measured_distance_lat, W
00F0   1803           00490         BTFSc       STATUS, 0               ; C==0 if measured_distance_lat >= crit_dist
00F1   0008           00491         RETURN
00F2   1A87           00492         BTFSC       MOTOR_DIR_CTRL
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F3   2???           00493         GOTO        STOP_R
00F4                  00494 STOP_L  ;BCF        T2CON, TMR2ON
00F4   0197           00495         CLRF        CCP1CON
                      00496         ;CLRF       CCPR2L
00F5   2???           00497         CALL        DEL_10MS
00F6   2???           00498         CALL        DEL_10MS
00F7   30F9           00499         MOVLW       L_MOTOR_SPD
00F8   0097           00500         MOVWF       CCP1CON
                      00501         ;BSF        T2CON, TMR2ON
00F9   0008           00502         RETURN
                      00503         
                      00504 ;******************************************************************************;
                      00505 ;                               DISPLAY DATA                                   ;
                      00506 ;******************************************************************************;
00FA                  00507 STOP_DATA
                      00508         WRT_LCD     "T"
00FA   3054               M         MOVLW       "T"
00FB   2???               M         CALL        WR_DATA
                      00509         WRT_LCD     "I"
00FC   3049               M         MOVLW       "I"
00FD   2???               M         CALL        WR_DATA
                      00510         WRT_LCD     "M"
00FE   304D               M         MOVLW       "M"
00FF   2???               M         CALL        WR_DATA
                      00511         WRT_LCD     "E"
0100   3045               M         MOVLW       "E"
0101   2???               M         CALL        WR_DATA
                      00512         WRT_LCD     ":"
0102   303A               M         MOVLW       ":"
0103   2???               M         CALL        WR_DATA
                      00513         WRT_LCD     " "
0104   3020               M         MOVLW       " "
0105   2???               M         CALL        WR_DATA
                      00514         ;Get minute             
                      00515 ;       rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                      00516         ;WRT_MEM_LCD 0x77
                      00517 ;       .WRT_MEM_LCD 0x78
                      00518 ;       WRT_LCD     ":"
                      00519 
                      00520         ;Get seconds
                      00521         ;rtc_read    0x00               ;Read Address 0x00 from DS1307---seconds
                      00522 ;       WRT_MEM_LCD 0x77
                      00523 ;       WRT_MEM_LCD 0x78
                      00524 
0106   30C0           00525         movlw       B'11000000'         ;Next line displays (min):(sec) **:**
0107   2???           00526         call        WR_INS
0108   2???           00527         CALL        WRT_DATA
0109   2???           00528         CALL        DEL_1S
010A   2???           00529         CALL        DEL_1S
010B   2???           00530         CALL        CLR_LCD
                      00531         
010C   304C           00532         MOVLW       spot_base_loc
010D   0084           00533         MOVWF       FSR
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00534         
010E                  00535 DATA_LOOP       
                      00536         WRT_LCD     "S"
010E   3053               M         MOVLW       "S"
010F   2???               M         CALL        WR_DATA
                      00537         WRT_LCD     "P"
0110   3050               M         MOVLW       "P"
0111   2???               M         CALL        WR_DATA
                      00538         WRT_LCD     "O"
0112   304F               M         MOVLW       "O"
0113   2???               M         CALL        WR_DATA
                      00539         WRT_LCD     "T"
0114   3054               M         MOVLW       "T"
0115   2???               M         CALL        WR_DATA
                      00540         WRT_LCD     ":"
0116   303A               M         MOVLW       ":"
0117   2???               M         CALL        WR_DATA
                      00541         WRT_LCD     " "
0118   3020               M         MOVLW       " "
0119   2???               M         CALL        WR_DATA
                      00542         WRT_MEM_LCD INDF
011A   0800               M         MOVFW       INDF
011B   2???               M         CALL        WR_DATA
                      00543         WRT_LCD     "c"
011C   3063               M         MOVLW       "c"
011D   2???               M         CALL        WR_DATA
                      00544         WRT_LCD     "m"
011E   306D               M         MOVLW       "m"
011F   2???               M         CALL        WR_DATA
                      00545         
0120   2???           00546         CALL        DEL_1S
                      00547         
0121   2???           00548         CALL        CLR_LCD
0122   0A84           00549         INCF        FSR, F
                      00550 
0123   0BCA           00551         DECFSZ      spot_count, F
0124   2???           00552         GOTO        DATA_LOOP
                      00553         
                      00554         WRT_LCD     "E"
0125   3045               M         MOVLW       "E"
0126   2???               M         CALL        WR_DATA
                      00555         WRT_LCD     "N"
0127   304E               M         MOVLW       "N"
0128   2???               M         CALL        WR_DATA
                      00556         WRT_LCD     "D"
0129   3044               M         MOVLW       "D"
012A   2???               M         CALL        WR_DATA
                      00557 
012B   2???           00558         GOTO        FINISH
                      00559 
                      00560 ;******************************************************************************;
                      00561 ;                                  HELLO                                       ;
                      00562 ;******************************************************************************;
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

012C                  00563 START_MSG
                      00564         WRT_LCD     "H"
012C   3048               M         MOVLW       "H"
012D   2???               M         CALL        WR_DATA
                      00565         WRT_LCD     "I"
012E   3049               M         MOVLW       "I"
012F   2???               M         CALL        WR_DATA
                      00566         WRT_LCD     "T"
0130   3054               M         MOVLW       "T"
0131   2???               M         CALL        WR_DATA
                      00567         WRT_LCD     " "
0132   3020               M         MOVLW       " "
0133   2???               M         CALL        WR_DATA
                      00568         WRT_LCD     "*"
0134   302A               M         MOVLW       "*"
0135   2???               M         CALL        WR_DATA
                      00569         WRT_LCD     " "
0136   3020               M         MOVLW       " "
0137   2???               M         CALL        WR_DATA
                      00570         WRT_LCD     "T"
0138   3054               M         MOVLW       "T"
0139   2???               M         CALL        WR_DATA
                      00571         WRT_LCD     "O"
013A   304F               M         MOVLW       "O"
013B   2???               M         CALL        WR_DATA
                      00572         WRT_LCD     " "
013C   3020               M         MOVLW       " "
013D   2???               M         CALL        WR_DATA
                      00573         WRT_LCD     "S"
013E   3053               M         MOVLW       "S"
013F   2???               M         CALL        WR_DATA
                      00574         WRT_LCD     "T"
0140   3054               M         MOVLW       "T"
0141   2???               M         CALL        WR_DATA
                      00575         WRT_LCD     "A"
0142   3041               M         MOVLW       "A"
0143   2???               M         CALL        WR_DATA
                      00576         WRT_LCD     "R"
0144   3052               M         MOVLW       "R"
0145   2???               M         CALL        WR_DATA
                      00577         WRT_LCD     "T"
0146   3054               M         MOVLW       "T"
0147   2???               M         CALL        WR_DATA
0148   0008           00578         RETURN
                      00579         
                      00580 ;******************************************************************************;
                      00581 ;                                GOODBYE                                       ;
                      00582 ;******************************************************************************;
0149                  00583 STOP_STDBY_MSG
                      00584         WRT_LCD     "H"
0149   3048               M         MOVLW       "H"
014A   2???               M         CALL        WR_DATA
                      00585         WRT_LCD     "I"
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

014B   3049               M         MOVLW       "I"
014C   2???               M         CALL        WR_DATA
                      00586         WRT_LCD     "T"
014D   3054               M         MOVLW       "T"
014E   2???               M         CALL        WR_DATA
                      00587         WRT_LCD     " "
014F   3020               M         MOVLW       " "
0150   2???               M         CALL        WR_DATA
                      00588         WRT_LCD     "*"
0151   302A               M         MOVLW       "*"
0152   2???               M         CALL        WR_DATA
                      00589         WRT_LCD     " "
0153   3020               M         MOVLW       " "
0154   2???               M         CALL        WR_DATA
                      00590         WRT_LCD     "F"
0155   3046               M         MOVLW       "F"
0156   2???               M         CALL        WR_DATA
                      00591         WRT_LCD     "O"
0157   304F               M         MOVLW       "O"
0158   2???               M         CALL        WR_DATA
                      00592         WRT_LCD     "R"
0159   3052               M         MOVLW       "R"
015A   2???               M         CALL        WR_DATA
                      00593         WRT_LCD     " "
015B   3020               M         MOVLW       " "
015C   2???               M         CALL        WR_DATA
                      00594         WRT_LCD     "D"
015D   3044               M         MOVLW       "D"
015E   2???               M         CALL        WR_DATA
                      00595         WRT_LCD     "A"
015F   3041               M         MOVLW       "A"
0160   2???               M         CALL        WR_DATA
                      00596         WRT_LCD     "T"
0161   3054               M         MOVLW       "T"
0162   2???               M         CALL        WR_DATA
                      00597         WRT_LCD     "A"
0163   3041               M         MOVLW       "A"
0164   2???               M         CALL        WR_DATA
0165   0008           00598         RETURN
                      00599          
                      00600 ;******************************************************************************;
                      00601 ;                                 DATA                                         ;
                      00602 ;******************************************************************************;
0166                  00603 WRT_DATA        
                      00604         WRT_LCD     "N"
0166   304E               M         MOVLW       "N"
0167   2???               M         CALL        WR_DATA
                      00605         WRT_LCD     "U"
0168   3055               M         MOVLW       "U"
0169   2???               M         CALL        WR_DATA
                      00606         WRT_LCD     "M"
016A   304D               M         MOVLW       "M"
016B   2???               M         CALL        WR_DATA
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00607         WRT_LCD     " "
016C   3020               M         MOVLW       " "
016D   2???               M         CALL        WR_DATA
                      00608         WRT_LCD     "S"
016E   3053               M         MOVLW       "S"
016F   2???               M         CALL        WR_DATA
                      00609         WRT_LCD     "P"
0170   3050               M         MOVLW       "P"
0171   2???               M         CALL        WR_DATA
                      00610         WRT_LCD     "O"
0172   304F               M         MOVLW       "O"
0173   2???               M         CALL        WR_DATA
                      00611         WRT_LCD     "T"
0174   3054               M         MOVLW       "T"
0175   2???               M         CALL        WR_DATA
                      00612         WRT_LCD     "S"
0176   3053               M         MOVLW       "S"
0177   2???               M         CALL        WR_DATA
                      00613         WRT_LCD     ":"
0178   303A               M         MOVLW       ":"
0179   2???               M         CALL        WR_DATA
                      00614         WRT_LCD     " "
017A   3020               M         MOVLW       " "
017B   2???               M         CALL        WR_DATA
                      00615         CWRT_MEM_LCD num_spots
017C   084B               M         MOVFW       num_spots
017D   3E30               M         ADDLW       D'48'
017E   2???               M         CALL        WR_DATA
017F   0008           00616         RETURN
                      00617 ;******************************************************************************;
                      00618 ;                           RETREIVE START TIME                                ;
                      00619 ;******************************************************************************;
0180                  00620 GET_START_TIME
                      00621         ;Get minute             
                      00622         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0180   3001               M         movlw       0x01
0181   1283 1303          M         banksel     0x73
0183   00F3               M         movwf       0x73
0184   2???               M         call        read_rtc
0185   1283 1303          M         banksel     0x75
0187   0875               M         movf        0x75,w
0188   2???               M         call        rtc_convert   
0189   0877           00623         MOVFW       0X77
018A   00BB           00624         MOVWF       start_min10
018B   0878           00625         MOVFW       0X78
018C   00BA           00626         MOVWF       start_min
                      00627 
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00628         ;Get seconds
                      00629         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
018D   3000               M         movlw       0x00
018E   1283 1303          M         banksel     0x73
0190   00F3               M         movwf       0x73
0191   2???               M         call        read_rtc
0192   1283 1303          M         banksel     0x75
0194   0875               M         movf        0x75,w
0195   2???               M         call        rtc_convert   
0196   0877           00630         MOVFW       0X77
0197   00BD           00631         MOVWF       start_sec10
0198   0878           00632         MOVFW       0X78
0199   00BC           00633         MOVWF       start_sec
019A   0008           00634         RETURN
                      00635 ;******************************************************************************;
                      00636 ;                           RETREIVE STOP TIME                                 ;
                      00637 ;******************************************************************************;
019B                  00638 GET_STOP_TIME
                      00639         ;Get minute             
                      00640         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
019B   3001               M         movlw       0x01
019C   1283 1303          M         banksel     0x73
019E   00F3               M         movwf       0x73
019F   2???               M         call        read_rtc
01A0   1283 1303          M         banksel     0x75
01A2   0875               M         movf        0x75,w
01A3   2???               M         call        rtc_convert   
01A4   0877           00641         MOVFW       0X77
01A5   00BF           00642         MOVWF       stop_min10
01A6   0878           00643         MOVFW       0X78
01A7   00BE           00644         MOVWF       stop_min
                      00645 
                      00646         ;Get seconds
                      00647         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01A8   3000               M         movlw       0x00
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01A9   1283 1303          M         banksel     0x73
01AB   00F3               M         movwf       0x73
01AC   2???               M         call        read_rtc
01AD   1283 1303          M         banksel     0x75
01AF   0875               M         movf        0x75,w
01B0   2???               M         call        rtc_convert   
01B1   0877           00648         MOVFW       0X77
01B2   00C1           00649         MOVWF       stop_sec10
01B3   0878           00650         MOVFW       0X78
01B4   00C0           00651         MOVWF       stop_sec
01B5   0008           00652         RETURN
                      00653 ;******************************************************************************;
                      00654 ;                       DISPLAY RTC TIME TO LCD                                ;
                      00655 ;******************************************************************************;
01B6                  00656 SHOW_RTC
                      00657         ;clear LCD screen
01B6   3001           00658         movlw       b'00000001'
01B7   2???           00659         call        WR_INS
                      00660 
                      00661         ;Get year
                      00662         WRT_LCD     "2"
01B8   3032               M         MOVLW       "2"
01B9   2???               M         CALL        WR_DATA
                      00663         WRT_LCD     "0"
01BA   3030               M         MOVLW       "0"
01BB   2???               M         CALL        WR_DATA
                      00664         rtc_read    0x06                ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01BC   3006               M         movlw       0x06
01BD   1283 1303          M         banksel     0x73
01BF   00F3               M         movwf       0x73
01C0   2???               M         call        read_rtc
01C1   1283 1303          M         banksel     0x75
01C3   0875               M         movf        0x75,w
01C4   2???               M         call        rtc_convert   
                      00665         WRT_MEM_LCD 0x77
01C5   0877               M         MOVFW       0x77
01C6   2???               M         CALL        WR_DATA
                      00666         WRT_MEM_LCD 0x78
01C7   0878               M         MOVFW       0x78
01C8   2???               M         CALL        WR_DATA
                      00667 
                      00668         WRT_LCD     "/"
01C9   302F               M         MOVLW       "/"
01CA   2???               M         CALL        WR_DATA
                      00669 
                      00670         ;Get month
                      00671         rtc_read    0x05                ;Read Address 0x05 from DS1307---month
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01CB   3005               M         movlw       0x05
01CC   1283 1303          M         banksel     0x73
01CE   00F3               M         movwf       0x73
01CF   2???               M         call        read_rtc
01D0   1283 1303          M         banksel     0x75
01D2   0875               M         movf        0x75,w
01D3   2???               M         call        rtc_convert   
                      00672         WRT_MEM_LCD 0x77
01D4   0877               M         MOVFW       0x77
01D5   2???               M         CALL        WR_DATA
                      00673         WRT_MEM_LCD 0x78
01D6   0878               M         MOVFW       0x78
01D7   2???               M         CALL        WR_DATA
                      00674 
                      00675         WRT_LCD     "/"
01D8   302F               M         MOVLW       "/"
01D9   2???               M         CALL        WR_DATA
                      00676 
                      00677         ;Get day
                      00678         rtc_read    0x04                ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01DA   3004               M         movlw       0x04
01DB   1283 1303          M         banksel     0x73
01DD   00F3               M         movwf       0x73
01DE   2???               M         call        read_rtc
01DF   1283 1303          M         banksel     0x75
01E1   0875               M         movf        0x75,w
01E2   2???               M         call        rtc_convert   
                      00679         WRT_MEM_LCD 0x77
01E3   0877               M         MOVFW       0x77
01E4   2???               M         CALL        WR_DATA
                      00680         WRT_MEM_LCD 0x78
01E5   0878               M         MOVFW       0x78
01E6   2???               M         CALL        WR_DATA
                      00681 
01E7   30C0           00682         movlw       B'11000000'         ;Next line displays (hour):(min):(sec) **:**:**
01E8   2???           00683         call        WR_INS
                      00684         ;Get hour
                      00685         rtc_read    0x02                ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01E9   3002               M         movlw       0x02
01EA   1283 1303          M         banksel     0x73
01EC   00F3               M         movwf       0x73
01ED   2???               M         call        read_rtc
01EE   1283 1303          M         banksel     0x75
01F0   0875               M         movf        0x75,w
01F1   2???               M         call        rtc_convert   
                      00686         WRT_MEM_LCD 0x77
01F2   0877               M         MOVFW       0x77
01F3   2???               M         CALL        WR_DATA
                      00687         WRT_MEM_LCD 0x78
01F4   0878               M         MOVFW       0x78
01F5   2???               M         CALL        WR_DATA
                      00688         WRT_LCD     ":"
01F6   303A               M         MOVLW       ":"
01F7   2???               M         CALL        WR_DATA
                      00689 
                      00690         ;Get minute             
                      00691         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01F8   3001               M         movlw       0x01
01F9   1283 1303          M         banksel     0x73
01FB   00F3               M         movwf       0x73
01FC   2???               M         call        read_rtc
01FD   1283 1303          M         banksel     0x75
01FF   0875               M         movf        0x75,w
0200   2???               M         call        rtc_convert   
                      00692         WRT_MEM_LCD 0x77
0201   0877               M         MOVFW       0x77
0202   2???               M         CALL        WR_DATA
                      00693         WRT_MEM_LCD 0x78
0203   0878               M         MOVFW       0x78
0204   2???               M         CALL        WR_DATA
                      00694         WRT_LCD     ":"
0205   303A               M         MOVLW       ":"
0206   2???               M         CALL        WR_DATA
                      00695 
                      00696         ;Get seconds
                      00697         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0207   3000               M         movlw       0x00
0208   1283 1303          M         banksel     0x73
020A   00F3               M         movwf       0x73
020B   2???               M         call        read_rtc
020C   1283 1303          M         banksel     0x75
020E   0875               M         movf        0x75,w
020F   2???               M         call        rtc_convert   
                      00698         WRT_MEM_LCD 0x77
0210   0877               M         MOVFW       0x77
0211   2???               M         CALL        WR_DATA
                      00699         WRT_MEM_LCD 0x78
0212   0878               M         MOVFW       0x78
0213   2???               M         CALL        WR_DATA
                      00700 
0214   0008           00701         RETURN
                      00702 ;******************************************************************************;
                      00703 ;                       INITIALIZE RTC TIME                                    ;
                      00704 ;******************************************************************************;                
0215                  00705 SET_RTC_TIME
                      00706         rtc_resetAll    ;reset rtc
                          M ;input:         none
                          M ;output:        none
                          M ;desc:          Resets all the time keeping registers on the RTC to zero
0215   1283 1303          M         banksel     0x74
0217   01F4               M         clrf        0x74
0218   1283 1303          M         banksel     0x73
021A   01F3               M         clrf        0x73
021B   2???               M         call        write_rtc           ;Write 0 to Seconds
021C   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
021E   0AF3               M         incf        0x73                        ;Set register address to 1
021F   2???               M         call        write_rtc
0220   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0222   0AF3               M         incf        0x73                        ;Set register address to 2
0223   2???               M         call        write_rtc
0224   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0226   0AF3               M         incf        0x73                        ;Set register address to 3
0227   2???               M         call        write_rtc
0228   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
022A   0AF3               M         incf        0x73                        ;Set register address to 4
022B   2???               M         call        write_rtc
022C   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
022E   0AF3               M         incf        0x73                        ;Set register address to 5
022F   2???               M         call        write_rtc
0230   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0232   0AF3               M         incf        0x73                        ;Set register address to 6
0233   2???               M         call        write_rtc
                      00707 
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00708         rtc_set     0x00,       B'10000000'
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0234   1283 1303          M         banksel     0x73
0236   3000               M         movlw       0x00
0237   00F3               M         movwf       0x73
0238   1283 1303          M         banksel     0x74
023A   3080               M         movlw       B'10000000'
023B   00F4               M         movwf       0x74        
023C   2???               M         call        write_rtc
                      00709 
                      00710         ;set time 
                      00711         rtc_set     0x06,       B'00010110'             ; Year
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
023D   1283 1303          M         banksel     0x73
023F   3006               M         movlw       0x06
0240   00F3               M         movwf       0x73
0241   1283 1303          M         banksel     0x74
0243   3016               M         movlw       B'00010110'
0244   00F4               M         movwf       0x74        
0245   2???               M         call        write_rtc
                      00712         rtc_set     0x05,       B'00000100'             ; Month
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0246   1283 1303          M         banksel     0x73
0248   3005               M         movlw       0x05
0249   00F3               M         movwf       0x73
024A   1283 1303          M         banksel     0x74
024C   3004               M         movlw       B'00000100'
024D   00F4               M         movwf       0x74        
024E   2???               M         call        write_rtc
                      00713         rtc_set     0x04,       B'00000110'             ; Date
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
024F   1283 1303          M         banksel     0x73
0251   3004               M         movlw       0x04
0252   00F3               M         movwf       0x73
0253   1283 1303          M         banksel     0x74
0255   3006               M         movlw       B'00000110'
0256   00F4               M         movwf       0x74        
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0257   2???               M         call        write_rtc
                      00714         rtc_set     0x03,       B'00000010'             ; Day
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0258   1283 1303          M         banksel     0x73
025A   3003               M         movlw       0x03
025B   00F3               M         movwf       0x73
025C   1283 1303          M         banksel     0x74
025E   3002               M         movlw       B'00000010'
025F   00F4               M         movwf       0x74        
0260   2???               M         call        write_rtc
                      00715         rtc_set     0x02,       B'00000000'             ; Hours
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0261   1283 1303          M         banksel     0x73
0263   3002               M         movlw       0x02
0264   00F3               M         movwf       0x73
0265   1283 1303          M         banksel     0x74
0267   3000               M         movlw       B'00000000'
0268   00F4               M         movwf       0x74        
0269   2???               M         call        write_rtc
                      00716         rtc_set     0x01,       B'00000000'             ; Minutes
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
026A   1283 1303          M         banksel     0x73
026C   3001               M         movlw       0x01
026D   00F3               M         movwf       0x73
026E   1283 1303          M         banksel     0x74
0270   3000               M         movlw       B'00000000'
0271   00F4               M         movwf       0x74        
0272   2???               M         call        write_rtc
                      00717         rtc_set     0x00,       B'00000000'             ; Seconds
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0273   1283 1303          M         banksel     0x73
0275   3000               M         movlw       0x00
0276   00F3               M         movwf       0x73
0277   1283 1303          M         banksel     0x74
0279   3000               M         movlw       B'00000000'
027A   00F4               M         movwf       0x74        
027B   2???               M         call        write_rtc
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

027C   0008           00718         return
                      00719 
                      00720 ;******************************************************************************;                
                      00721 ;******************************************************************************;
                      00722 ;******************************************************************************;
027D                  00723 DIV16X8 ; DIV_HI and DIV_LO / DIVSOR.  result to Q
                      00724                 ; does not deal with divide by 0 case
027D   01B6           00725         CLRF Q
027E                  00726 DIV_1
027E   0835           00727         MOVF DIVISOR, W
027F   02B4           00728         SUBWF DIV_LO, F
0280   1C03           00729         BTFSS STATUS, C ; if positive skip
0281   2???           00730         GOTO BORROW
0282   2???           00731         GOTO DIV_2
0283                  00732 BORROW
0283   3001           00733         MOVLW 0x01
0284   02B3           00734         SUBWF DIV_HI, F ; DIV_HI = DIV_HI - 1
0285   1C03           00735         BTFSS STATUS, C ; if no borrow occurred
0286   2???           00736         GOTO DIV_DONE   
0287                  00737 DIV_2
0287   0AB6           00738         INCF Q, F
0288   2???           00739         GOTO DIV_1
0289                  00740 DIV_DONE
0289   0008           00741         RETURN
                      00742 
028A                  00743 DEL_1S
028A   3015           00744         movlw   0x15
028B   00B7           00745         movwf   d1
028C   3074           00746         movlw   0x74
028D   00B8           00747         movwf   d2
028E   3006           00748         movlw   0x06
028F   00B9           00749         movwf   d3
0290                  00750 DEL_1S_0
0290   0BB7           00751         decfsz  d1, f
0291   2???           00752         goto    $+2
0292   0BB8           00753         decfsz  d2, f
0293   2???           00754         goto    $+2
0294   0BB9           00755         decfsz  d3, f
0295   2???           00756         goto    DEL_1S_0
0296   2???           00757         goto    $+1
0297   2???           00758         goto    $+1
0298   0008           00759         return
                      00760         
0299                  00761 DEL_10MS
0299   3086           00762         movlw   0x86
029A   00B7           00763         movwf   d1
029B   3014           00764         movlw   0x14
029C   00B8           00765         movwf   d2
029D                  00766 DEL_10MS_0
029D   0BB7           00767         decfsz  d1, f
029E   2???           00768         goto    $+2
029F   0BB8           00769         decfsz  d2, f
02A0   2???           00770         goto    DEL_10MS_0
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02A1   2???           00771         goto    $+1
02A2   0000           00772         nop
02A3   0008           00773         return
                      00774 
02A4                  00775 DEL_2_1MS
02A4   3018           00776         movlw   0x18
02A5   00B7           00777         movwf   d1
02A6   3005           00778         movlw   0x05
02A7   00B8           00779         movwf   d2
02A8                  00780 DEL_2_1MS_0
02A8   0BB7           00781         decfsz  d1, f
02A9   2???           00782         goto    $+2
02AA   0BB8           00783         decfsz  d2, f
02AB   2???           00784         goto    DEL_2_1MS_0
02AC   2???           00785         goto    $+1
02AD   0000           00786         nop
02AE   0008           00787         return
                      00788         
02AF                  00789 DEL_1_5MS
02AF   30EC           00790         movlw   0xEC
02B0   00B7           00791         movwf   d1
02B1   3003           00792         movlw   0x03
02B2   00B8           00793         movwf   d2
02B3                  00794 DEL_1_5MS_0
02B3   0BB7           00795         decfsz  d1, f
02B4   2???           00796         goto    $+2
02B5   0BB8           00797         decfsz  d2, f
02B6   2???           00798         goto    DEL_1_5MS_0
02B7   2???           00799         goto    $+1
02B8   0000           00800         nop
02B9   0008           00801         return
                      00802         
02BA                  00803 DEL_20US
02BA   300F           00804         movlw   0x0F
02BB   00B7           00805         movwf   d1
02BC                  00806 DEL_20US_0
02BC   0BB7           00807         decfsz  d1, f
02BD   2???           00808         goto    DEL_20US_0
02BE   0008           00809         return
                      00810 
02BF                  00811 FINISH  
02BF   2???           00812         GOTO    FINISH
                      00813         
3F72                  00814         END
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ARM_CLOSE                         000000A1
ARM_CTRL                          0000009C
ARM_OPEN                          000000A9
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BORROW                            00000283
BRGH                              00000002
BUZZER                            PORTC, 7
C                                 00000000
CALIBRATE                         0000003C
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

CKP                               00000004
CLR_LCD                           00000000
CREN                              00000004
CSRC                              00000007
CWRT_MEM_LCD                      
D                                 00000005
DATA_ADDRESS                      00000005
DATA_LOOP                         0000010E
DC                                00000001
DEL_10MS                          00000299
DEL_10MS_0                        0000029D
DEL_1S                            0000028A
DEL_1S_0                          00000290
DEL_1_5MS                         000002AF
DEL_1_5MS_0                       000002B3
DEL_20US                          000002BA
DEL_20US_0                        000002BC
DEL_2_1MS                         000002A4
DEL_2_1MS_0                       000002A8
DIV16X8                           0000027D
DIVISOR                           00000035
DIV_1                             0000027E
DIV_2                             00000287
DIV_DONE                          00000289
DIV_HI                            00000033
DIV_LO                            00000034
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FINAL_BACKUP                      0000006C
FINISH                            000002BF
FSR                               00000004
GCEN                              00000007
GET_START_TIME                    00000180
GET_STOP_TIME                     0000019B
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

IBF                               00000007
IBOV                              00000005
INDF                              00000000
INIT                              00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
INT_HANDLER                       0000007A
IRP                               00000007
InitLCD                           00000000
LCD_INS                           
L_MOTOR_SPD                       B'11111001'
MOTOR_CTRL_L                      000000EE
MOTOR_CTRL_R                      000000E2
MOTOR_DIR_CTRL                    PORTC, 5
MUX_CTRL_0                        PORTA, 1
MUX_CTRL_1                        PORTA, 2
MUX_CTRL_2                        PORTA, 3
MUX_CTRL_3                        PORTA, 5
MUX_IN                            PORTA, 0
MX_LOOP                           00000087
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
Q                                 00000036
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_IRS                          00000085
READ_WRITE                        00000002
RETURN_HOME                       0000005D
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_MOTOR_SPD                       B'11111001'
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SCAN                              00000054
SEN                               00000000
SERVO_CTRL                        PORTC, 0
SET_RTC_TIME                      00000215
SHOW_RTC                          000001B6
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
START_MSG                         0000012C
START_STDBY                       0000002F
STATUS                            00000003
STOP_DATA                         000000FA
STOP_L                            000000F4
STOP_R                            000000E8
STOP_STDBY                        0000006E
STOP_STDBY_MSG                    00000149
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
USHOLDL                           000000D3
USHOLDS                           000000B8
USONIC_LAT                        000000CD
USONIC_LAT_ECHO                   000000D0
USONIC_SUP                        000000B2
USONIC_SUP_ECHO                   000000B5
US_LAT_ECHO                       PORTD, 1
US_LAT_TRIG                       PORTD, 0
US_SUP_ECHO                       PORTB, 4
US_SUP_TRIG                       PORTB, 3
W                                 00000000
WCOL                              00000007
WHL_ENC                           00000095
WR                                00000001
WREN                              00000002
WRERR                             00000003
WRT_DATA                          00000166
WRT_LCD                           
WRT_MEM_LCD                       
WR_DATA                           00000000
WR_INS                            00000000
Z                                 00000002
_.org_1_0035                      00000035
_.org_1_0075                      00000075
_.org_1_00B6                      000000B6
_.org_1_00D1                      000000D1
_.org_1_0291                      00000291
_.org_1_0293                      00000293
_.org_1_0296                      00000296
_.org_1_0297                      00000297
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

_.org_1_029E                      0000029E
_.org_1_02A1                      000002A1
_.org_1_02A9                      000002A9
_.org_1_02AC                      000002AC
_.org_1_02B4                      000002B4
_.org_1_02B7                      000002B7
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
crit_dist                         0X0A
crit_dist_l                       0x05
crit_dist_r                       0x0A
d1                                00000037
d2                                00000038
d3                                00000039
i2c_common_setup                  00000000
long_del                          00000030
MPASM 5.65                          MAIN.ASM   4-3-2016  11:18:46         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

measured_distance_lat             00000047
measured_distance_sup             00000048
multiplex_count                   00000043
num_spots                         0000004B
read_rtc                          00000000
rob_lat_distance                  00000044
rob_long_distance                 00000046
rob_long_distance_count           00000045
rob_return                        00000049
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
spot_base_loc                     0000004C
spot_count                        0000004A
spot_detected                     00000042
start_min                         0000003A
start_min10                       0000003B
start_sec                         0000003C
start_sec10                       0000003D
stop_min                          0000003E
stop_min10                        0000003F
stop_sec                          00000040
stop_sec10                        00000041
temp_status                       00000032
temp_w                            00000031
write_rtc                         00000000

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :    15 reported,     0 suppressed

