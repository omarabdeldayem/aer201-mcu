MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;******************************************************************************;
                      00002 ;        ____    ___  ______    ___  ____       ____  ____  ____    ___  ____  ;
                      00003 ;       |    \  /  _]|      T  /  _]|    \     |    \l    j|    \  /  _]|    \ ;
                      00004 ;       |  o  )/  [_ |      | /  [_ |  D  )    |  o  )|  T |  o  )/  [_ |  D  );
                      00005 ;       |   _/Y    _]l_j  l_jY    _]|    /     |   _/ |  | |   _/Y    _]|    / ;
                      00006 ;       |  |  |   [_   |  |  |   [_ |    \     |  |   |  | |  |  |   [_ |    \ ;
                      00007 ;       |  |  |     T  |  |  |     T|  .  Y    |  |   j  l |  |  |     T|  .  Y;
                      00008 ;       l__j  l_____j  l__j  l_____jl__j\_j    l__j  |____jl__j  l_____jl__j\_j;
                      00009 ;------------------------------------------------------------------------------;
                      00010 ;               AER201 Team 61 'Peter Piper' Pipe Inspector                    ;
                      00011 ;                        Author: Omar Abdeldayem                               ;
                      00012 ;                           Created: 1/12/2016                                 ;
                      00013 ;------------------------------------------------------------------------------;
                      00014 ; DESCRIPTION:                                                                                          
                                                               ;
                      00015 ; It does shit, yo.                                                                                     
                                                               ;
                      00016 ;******************************************************************************;
                      00017 ;******************************************************************************;
                      00018 ;******************************************************************************;
                      00019 
                      00020         List    p=16f877                    ; list directive to define processor
                      00021         #include        <p16f877.inc>       ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
2007   3F72           00022         __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP
                            _OFF
                      00023 
                      00024         #include        <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel     0x74
                      00011         clrf        0x74
                      00012         banksel     0x73
                      00013         clrf        0x73
                      00014         call        write_rtc           ;Write 0 to Seconds
                      00015         banksel     0x73
                      00016         incf        0x73                        ;Set register address to 1
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00017         call        write_rtc
                      00018         banksel     0x73
                      00019         incf        0x73                        ;Set register address to 2
                      00020         call        write_rtc
                      00021         banksel     0x73
                      00022         incf        0x73                        ;Set register address to 3
                      00023         call        write_rtc
                      00024         banksel     0x73
                      00025         incf        0x73                        ;Set register address to 4
                      00026         call        write_rtc
                      00027         banksel     0x73
                      00028         incf        0x73                        ;Set register address to 5
                      00029         call        write_rtc
                      00030         banksel     0x73
                      00031         incf        0x73                        ;Set register address to 6
                      00032         call        write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set macro       addliteral, datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel     0x73
                      00042         movlw       addliteral
                      00043         movwf       0x73
                      00044         banksel     0x74
                      00045         movlw       datliteral
                      00046         movwf       0x74        
                      00047         call        write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read macro      addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw       addliteral
                      00058         banksel     0x73
                      00059         movwf       0x73
                      00060         call        read_rtc
                      00061         banksel     0x75
                      00062         movf        0x75,w
                      00063         call        rtc_convert   
                      00064         endm
                      00065 
                      00066 
                      00067 
                      00068 
                      00069 
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00070 
                      00025         #include        <lcd.inc>
  0000                00001     extern      InitLCD,WR_INS,WR_DATA,CLR_LCD
                      00002 
                      00003 
                      00026 ;******************************************************************************;
                      00027 ;                               BANK0 RAM                                      ;
                      00028 ;******************************************************************************;
                      00029         CBLOCK      0x30
                      00030                     ; RTC I2C Mem
  00000030            00031         dt1         ; 0x30          
  00000031            00032         dt2
  00000032            00033         dt3
  00000033            00034         XBUF
  00000034            00035         count
  00000035            00036         CONTROL
  00000036            00037         ADD
  00000037            00038         DAT
  00000038            00039         flag
  00000039            00040         DOUT
  0000003A            00041         B1
  0000003B            00042         B2
                      00043                     ; LCD MEM
  0000003C            00044         lcd_tmp
  0000003D            00045         lcd_d1
  0000003E            00046         lcd_d2
  0000003F            00047         long_del
  00000040            00048         temp_w      ; 0x40
  00000041            00049         temp_status ; 0x41
                      00050                     ; DIVISION Registers
  00000042            00051         DIV_HI      ; 0X42
  00000043            00052         DIV_LO      ; 0X43
  00000044            00053         DIVISOR     ; 0X44
  00000045            00054         Q
  00000046            00055         d1
  00000047            00056         d2
  00000048            00057         d3
                      00058                     ; ROBOT VARS
  00000049            00059         start_min
  0000004A            00060         start_min10
  0000004B            00061         start_sec
  0000004C            00062         start_sec10
  0000004D            00063         stop_min
  0000004E            00064         stop_min10
  0000004F            00065         stop_sec
  00000050            00066         stop_sec10
  00000051            00067         spot_detected
  00000052            00068         multiplex_count
  00000053            00069         rob_lat_distance
  00000054            00070         rob_long_distance
  00000055            00071         measured_distance_lat
  00000056            00072         measured_distance_sup
  00000057            00073         rob_return
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000058            00074         spot_count
  00000059            00075         num_spots
  0000005A            00076         spot_base_loc
                      00077         ENDC
                      00078 
                      00079 ;******************************************************************************;
                      00080 ;                               EQUATES                                ;
                      00081 ;******************************************************************************;
                      00082         #define     crit_dist       d'5'
                      00083         #define     MOTOR_DIR_CTRL  PORTC, 5
                      00084 ;******************************************************************************;
                      00085 ;                               MACROS                                         ;
                      00086 ;******************************************************************************;
                      00087 MULT    macro       val1, val2, result
                      00088         MOVF        val1, W
                      00089         ADDWF       val1, W
                      00090         MOVWF       result
                      00091         DECFSZ      val2, f
                      00092         GOTO        $-3
                      00093         endm
                      00094         
                      00095 WRT_LCD macro       val
                      00096         MOVLW       val
                      00097         CALL        WR_DATA
                      00098         endm
                      00099 LCD_INS macro       val
                      00100         MOVLW       val
                      00101         CALL        WR_INS
                      00102         endm
                      00103         
                      00104 WRT_MEM_LCD macro   val
                      00105         MOVFW       val
                      00106         CALL        WR_DATA
                      00107         endm
                      00108 
                      00109 ;******************************************************************************;
                      00110 ;                          VECTOR TABLE                                        ;
                      00111 ;******************************************************************************;
                      00112         ORG         0x0000              ; RESET vector must always be at 0x00
0000   2???           00113         GOTO        INIT                ; Just jump to the main code section.
                      00114         ORG         0x0004
0004   2???           00115         GOTO        INT_HANDLER
                      00116 
                      00117 ;******************************************************************************;
                      00118 ;                         ROBOT INITIALIZATION                                 ;
                      00119 ;******************************************************************************;
0005                  00120 INIT
0005   1683           00121         BSF         STATUS, RP0         ; Select bank 1
0006   018B           00122         CLRF        INTCON              ; Disable interrupts for now
                      00123         
0007   3006           00124         MOVLW       0x06
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0008   009F           00125         MOVWF       ADCON1
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00126         
0009   3018           00127         MOVLW       b'00011000'         ; PORT A pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000A   0085           00128         MOVWF       TRISA
000B   30F3           00129         MOVLW       b'11110011'         ; PORT B pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000C   0086           00130         MOVWF       TRISB
000D   3079           00131         MOVLW       b'01111001'         ; PORT C pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000E   0087           00132         MOVWF       TRISC
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000F   0188           00133         CLRF        TRISD               ; PORT D pin mapping
0010   3007           00134         MOVLW       b'00000111'         ; PORT E pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0011   0089           00135         MOVWF       TRISE
                      00136         
0012   30FF           00137         MOVLW       B'11111111'         ; PWM pulsing period (484Hz)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0013   0092           00138         MOVWF       PR2
                      00139        
0014   1283           00140         BCF         STATUS, RP0         ; select bank 0
                      00141 
0015   3064           00142         MOVLW       B'01100100'         ; 100% DUTY CYCLE
0016   0095           00143         MOVWF       CCPR1L              ; Setup PWM pins
0017   3006           00144         MOVLW       B'00000110'         ; 10% DUTY CYCLE
0018   009B           00145         MOVWF       CCPR2L
0019   30FF           00146         MOVLW       B'11111111'
001A   0097           00147         MOVWF       CCP1CON
001B   009D           00148         MOVWF       CCP2CON
                      00149 ;       
001C   3005           00150         MOVLW       B'00000101'         ; Initialize and start timer 2
001D   0092           00151         MOVWF       T2CON
001E   0191           00152         CLRF        TMR2
001F   1112           00153         BCF         T2CON, TMR2ON
                      00154         
0020   3010           00155         MOVLW       0X10                ; TMR1 for Ultrasonic Sensors
0021   0090           00156         MOVWF       T1CON
0022   018F           00157         CLRF        TMR1H
0023   018E           00158         CLRF        TMR1L
                      00159         
0024   0185           00160         clrf        PORTA
0025   0186           00161         clrf        PORTB
0026   0187           00162         clrf        PORTC 
0027   0188           00163         clrf        PORTD
                      00164          
                      00165 ;       CALL        i2c_common_setup
                      00166 ;                   rtc_resetAll
                      00167 ;       CALL        SET_RTC_TIME
0028   2???           00168         CALL        InitLCD
                      00169         
0029   3000           00170         MOVLW       b'0'                ; Initialize variables
002A   00D9           00171         MOVWF       num_spots
002B   00D8           00172         MOVWF       spot_count
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002C   00D1           00173         MOVWF       spot_detected       
                      00174                                                 
002D   2???           00175         CALL        START_MSG
                      00176 ;******************************************************************************;
                      00177 ;                        ROBOT START AND STANDBY                               ;
                      00178 ;******************************************************************************;
002E                  00179 START_STDBY
002E   1C86           00180         BTFSS       PORTB, 1            ; Wait until data is available from the keypad
002F   2???           00181         GOTO        START_STDBY
                      00182 
0030   0E06           00183         SWAPF       PORTB, W            ; Read PortB<7:4> into W<3:0>
0031   390F           00184         ANDLW       0x0F
0032   2???           00185         CALL        CLR_LCD
                      00186 
0033   1886           00187         BTFSC       PORTB,1             ; Wait until key is released
0034   2???           00188         GOTO        $-1
                      00189         
0035   2???           00190         CALL        CLR_LCD
                      00191         ;CALL       GET_START_TIME
                      00192         ;CALL       ARM_TOGGLE
0036   1687           00193         BSF         MOTOR_DIR_CTRL
0037   1512           00194         BSF         T2CON, TMR2ON
0038   2???           00195         GOTO        SCAN
                      00196         ;GOTO       CALIBRATE
                      00197 
                      00198 ;******************************************************************************;
                      00199 ;                           SENSOR CALIBRATION                                 ;
                      00200 ;******************************************************************************;
0039                  00201 CALIBRATE
0039   2???           00202         CALL        USONIC_LAT
003A   0853           00203         MOVFW       rob_lat_distance
003B   3C05           00204         SUBLW       crit_dist
003C   1D03           00205         BTFSS       STATUS, 2
003D   2???           00206         GOTO        CALIBRATE
003E   158B           00207         BSF         INTCON, RBIE            ; Enable interrupts
003F   160B           00208         BSF         INTCON, INTE
0040   178B           00209         BSF         INTCON, GIE
0041   2???           00210         GOTO        SCAN
                      00211         
                      00212 ;******************************************************************************;
                      00213 ;                         PIPE SCAN SUPERLOOP                                  ;
                      00214 ;******************************************************************************;
0042                  00215 SCAN
                      00216 ;       CALL        USONIC_LAT
                      00217 ;       CALL        SHOW_RTC                ; DEBUG
                      00218         ;CALL       READ_IRS
0042   2???           00219         GOTO        SCAN
                      00220         
                      00221 ;******************************************************************************;
                      00222 ;                          INTERRUPT HANDLER                                   ;
                      00223 ;******************************************************************************;
0043                  00224 INT_HANDLER
0043   00C0           00225         MOVWF       temp_w
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0044   0E03           00226         SWAPF       STATUS, W
0045   00C1           00227         MOVWF       temp_status
0046   100B           00228         BCF         INTCON, RBIF
0047   108B           00229         BCF         INTCON, INTF          ; Clear the interrupt flag
                      00230         
0048   2???           00231         CALL        WHL_ENC
                      00232         
0049   0E41           00233         SWAPF       temp_status, W
004A   0083           00234         MOVWF       STATUS
004B   0EC0           00235         SWAPF       temp_w, F
004C   0E40           00236         SWAPF       temp_w, W
004D   2???           00237         GOTO        STOP_STDBY
004E   0009           00238         RETFIE
                      00239 
                      00240 ;******************************************************************************;
                      00241 ;                       CYCLE INFRARED SENSORS                                 ;
                      00242 ;******************************************************************************;
004F                  00243 READ_IRS
004F   3010           00244         MOVLW       d'16'
0050   00D2           00245         MOVWF       multiplex_count
0051                  00246 MX_LOOP 
Message[305]: Using default destination of 1 (file).
0051   03D2           00247         DECF        multiplex_count
0052   1009           00248         BCF         PORTE, 0
0053   1852           00249         BTFSC       multiplex_count, 0
0054   1409           00250         BSF         PORTE, 0
0055   1005           00251         BCF         PORTA, 0
0056   18D2           00252         BTFSC       multiplex_count, 1
0057   1405           00253         BSF         PORTA, 0
0058   1085           00254         BCF         PORTA, 1
0059   1952           00255         BTFSC       multiplex_count, 2
005A   1485           00256         BSF         PORTA, 1
005B   1105           00257         BCF         PORTA, 2
005C   19D2           00258         BTFSC       multiplex_count, 3
005D   1505           00259         BSF         PORTA, 2
                      00260         
005E   2???           00261         CALL        LONG_DLY
005F   2???           00262         CALL        LONG_DLY
0060   2???           00263         CALL        LONG_DLY
0061   2???           00264         CALL        LONG_DLY    
0062   2???           00265         CALL        LONG_DLY
0063   2???           00266         CALL        LONG_DLY
0064   2???           00267         CALL        LONG_DLY
0065   2???           00268         CALL        LONG_DLY
0066   2???           00269         CALL        LONG_DLY
0067   2???           00270         CALL        LONG_DLY
0068   2???           00271         CALL        LONG_DLY
0069   2???           00272         CALL        LONG_DLY
006A   2???           00273         CALL        LONG_DLY
                      00274         
006B   1C07           00275         BTFSS       PORTC, 0
006C   2???           00276         GOTO        $+3
006D   1685           00277         BSF         PORTA, 5                            ; Buzzer start
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

006E   0854           00278         MOVFW       rob_long_distance                   ; Save spot location
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
006F   07B3           00279         ADDWF       (spot_base_loc + num_spots), F
0070   0AD9           00280         INCF        num_spots, f                        ; Increase number of spots
Message[305]: Using default destination of 1 (file).
0071   0AD2           00281         INCF        multiplex_count
0072   0852           00282         MOVFW       multiplex_count
0073   1285           00283         BCF         PORTA, 5                            ; Buzzer stop
Message[305]: Using default destination of 1 (file).
0074   0AD2           00284         INCF        multiplex_count
Message[305]: Using default destination of 1 (file).
0075   0BD2           00285         DECFSZ      multiplex_count
0076   2???           00286         GOTO        MX_LOOP
0077   0008           00287         RETURN
                      00288 ;******************************************************************************;
                      00289 ;                         WHEEL ENCODER ROUTINE                                ;
                      00290 ;******************************************************************************;
0078                  00291 WHL_ENC
0078   3013           00292         MOVLW       d'19'
Message[305]: Using default destination of 1 (file).
0079   07D4           00293         ADDWF       rob_long_distance
007A   0008           00294         RETURN
                      00295         
                      00296 ;******************************************************************************;
                      00297 ;                       TOGGLE ARM STATE ROUTINE                               ;
                      00298 ;******************************************************************************;
007B                  00299 ARM_TOGGLE
                      00300         ; control servo to control arm
                      00301         ; if degree is set to 180, set to 0
                      00302         ; otherwise set to 0
007B   2???           00303         GOTO        ARM_TOGGLE
                      00304         
                      00305 ;******************************************************************************;
                      00306 ;                     ULTRASONIC SENSOR SUBROUTINES                            ;
                      00307 ;******************************************************************************;
007C                  00308 USONIC_LAT
007C   1586           00309         BSF         PORTB, 3
007D   2???           00310         CALL        DEL_20US
007E   1186           00311         BCF         PORTB, 3
007F                  00312 USONIC_LAT_ECHO
007F   1E06           00313         BTFSS       PORTB, 4
0080   2???           00314         GOTO        $-1
0081   1410           00315         BSF         T1CON, 0
0082   1A06           00316 USHOLDL BTFSC       PORTB, 4
0083   2???           00317         GOTO        USHOLDL
0084   1010           00318         BCF         T1CON, 0
0085   080F           00319         MOVF        TMR1H, W
0086   00C2           00320         MOVWF       DIV_HI
0087   080E           00321         MOVF        TMR1L, W
0088   00C3           00322         MOVWF       DIV_LO
0089   018F           00323         CLRF        TMR1H
008A   018E           00324         CLRF        TMR1L
008B   303A           00325         MOVLW       d'58'
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

008C   00C4           00326         MOVWF       DIVISOR
008D   2???           00327         CALL        DIV16X8
008E   0845           00328         MOVF        Q, W
008F   00D5           00329         MOVWF       measured_distance_lat
0090   0008           00330         RETURN
                      00331 
0091                  00332 USONIC_SUP
0091   1587           00333         BSF         PORTC, 3
0092   2???           00334         CALL        DEL_20US
0093   1187           00335         BCF         PORTC, 3
0094                  00336 USONIC_SUP_ECHO
0094   1E07           00337         BTFSS       PORTC, 4
0095   2???           00338         GOTO        $-1
0096   1410           00339         BSF         T1CON, 0
0097   1A07           00340 USHOLDS BTFSC       PORTC, 4
0098   2???           00341         GOTO        USHOLDS
0099   1010           00342         BCF         T1CON, 0
009A   080F           00343         MOVF        TMR1H, W
009B   00C2           00344         MOVWF       DIV_HI
009C   080E           00345         MOVF        TMR1L, W
009D   00C3           00346         MOVWF       DIV_LO
009E   018F           00347         CLRF        TMR1H
009F   018E           00348         CLRF        TMR1L
00A0   303A           00349         MOVLW       d'58'
00A1   00C4           00350         MOVWF       DIVISOR
00A2   2???           00351         CALL        DIV16X8
00A3   0845           00352         MOVF        Q, W
00A4   00D6           00353         MOVWF       measured_distance_sup
00A5   0008           00354         RETURN
                      00355 ;******************************************************************************;
                      00356 ;                           RETURN HOME ROUTINE                                ;
                      00357 ;******************************************************************************;
00A6                  00358 RETURN_HOME
00A6   1287           00359         BCF         MOTOR_DIR_CTRL
                      00360 ;       CALL        TOGGLE_ARM
00A7   0008           00361         RETURN
                      00362 
                      00363 ;******************************************************************************;
                      00364 ;                             STOP STANDBY                                     ;
                      00365 ;******************************************************************************;
00A8                  00366 STOP_STDBY
00A8   2???           00367         CALL        GET_STOP_TIME
00A9   2???           00368         CALL        STOP_STDBY_MSG
00AA   1C86           00369         BTFSS       PORTB, 1            ; Wait until data is available from the keypad
00AB   2???           00370         GOTO        STOP_STDBY
                      00371 
00AC   0E06           00372         SWAPF       PORTB, W            ; Read PortB<7:4> into W<3:0>
00AD   390F           00373         ANDLW       0x0F 
00AE   2???           00374         CALL        CLR_LCD
00AF   2???           00375         GOTO        STOP_DATA
                      00376 
                      00377 ;******************************************************************************;
                      00378 ;                               DISPLAY DATA                                   ;
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00379 ;******************************************************************************;
00B0                  00380 STOP_DATA       
00B0   2???           00381         CALL        WRT_DATA
00B1   2???           00382         CALL        LONG_DLY
00B2   2???           00383         CALL        LONG_DLY
00B3   2???           00384         CALL        LONG_DLY
00B4   2???           00385         CALL        LONG_DLY
00B5   2???           00386         CALL        LONG_DLY
00B6   2???           00387         CALL        LONG_DLY
00B7   2???           00388         CALL        LONG_DLY
                      00389         
00B8   2???           00390         CALL        CLR_LCD
                      00391         
00B9   305A           00392         MOVLW       spot_base_loc
00BA   0084           00393         MOVWF       FSR
                      00394         
00BB                  00395 DATA_LOOP       
                      00396         WRT_LCD     "S"
00BB   3053               M         MOVLW       "S"
00BC   2???               M         CALL        WR_DATA
                      00397         WRT_LCD     "P"
00BD   3050               M         MOVLW       "P"
00BE   2???               M         CALL        WR_DATA
                      00398         WRT_LCD     "O"
00BF   304F               M         MOVLW       "O"
00C0   2???               M         CALL        WR_DATA
                      00399         WRT_LCD     "T"
00C1   3054               M         MOVLW       "T"
00C2   2???               M         CALL        WR_DATA
                      00400         WRT_LCD     ":"
00C3   303A               M         MOVLW       ":"
00C4   2???               M         CALL        WR_DATA
                      00401         WRT_LCD     " "
00C5   3020               M         MOVLW       " "
00C6   2???               M         CALL        WR_DATA
                      00402 ;       WRT_MEM_LCD INDF
                      00403         WRT_LCD     "c"
00C7   3063               M         MOVLW       "c"
00C8   2???               M         CALL        WR_DATA
                      00404         WRT_LCD     "m"
00C9   306D               M         MOVLW       "m"
00CA   2???               M         CALL        WR_DATA
                      00405         
00CB   2???           00406         CALL        LONG_DLY
00CC   2???           00407         CALL        LONG_DLY
00CD   2???           00408         CALL        LONG_DLY
00CE   2???           00409         CALL        LONG_DLY
00CF   2???           00410         CALL        LONG_DLY
00D0   2???           00411         CALL        LONG_DLY
00D1   2???           00412         CALL        LONG_DLY
00D2   2???           00413         CALL        LONG_DLY
00D3   2???           00414         CALL        LONG_DLY
00D4   2???           00415         CALL        CLR_LCD
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00D5   0A84           00416         INCF        FSR, F
                      00417 
00D6   0BD8           00418         DECFSZ      spot_count, F
00D7   2???           00419         GOTO        DATA_LOOP
                      00420         
                      00421         WRT_LCD     "E"
00D8   3045               M         MOVLW       "E"
00D9   2???               M         CALL        WR_DATA
                      00422         WRT_LCD     "N"
00DA   304E               M         MOVLW       "N"
00DB   2???               M         CALL        WR_DATA
                      00423         WRT_LCD     "D"
00DC   3044               M         MOVLW       "D"
00DD   2???               M         CALL        WR_DATA
                      00424 
00DE   2???           00425         GOTO        FINISH
                      00426 
                      00427 ;******************************************************************************;
                      00428 ;                                  HELLO                                       ;
                      00429 ;******************************************************************************;
00DF                  00430 START_MSG
                      00431         WRT_LCD     "H"
00DF   3048               M         MOVLW       "H"
00E0   2???               M         CALL        WR_DATA
                      00432         WRT_LCD     "I"
00E1   3049               M         MOVLW       "I"
00E2   2???               M         CALL        WR_DATA
                      00433         WRT_LCD     "T"
00E3   3054               M         MOVLW       "T"
00E4   2???               M         CALL        WR_DATA
                      00434         WRT_LCD     " "
00E5   3020               M         MOVLW       " "
00E6   2???               M         CALL        WR_DATA
                      00435         WRT_LCD     "*"
00E7   302A               M         MOVLW       "*"
00E8   2???               M         CALL        WR_DATA
                      00436         WRT_LCD     " "
00E9   3020               M         MOVLW       " "
00EA   2???               M         CALL        WR_DATA
                      00437         WRT_LCD     "T"
00EB   3054               M         MOVLW       "T"
00EC   2???               M         CALL        WR_DATA
                      00438         WRT_LCD     "O"
00ED   304F               M         MOVLW       "O"
00EE   2???               M         CALL        WR_DATA
                      00439         WRT_LCD     " "
00EF   3020               M         MOVLW       " "
00F0   2???               M         CALL        WR_DATA
                      00440         WRT_LCD     "S"
00F1   3053               M         MOVLW       "S"
00F2   2???               M         CALL        WR_DATA
                      00441         WRT_LCD     "T"
00F3   3054               M         MOVLW       "T"
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F4   2???               M         CALL        WR_DATA
                      00442         WRT_LCD     "A"
00F5   3041               M         MOVLW       "A"
00F6   2???               M         CALL        WR_DATA
                      00443         WRT_LCD     "R"
00F7   3052               M         MOVLW       "R"
00F8   2???               M         CALL        WR_DATA
                      00444         WRT_LCD     "T"
00F9   3054               M         MOVLW       "T"
00FA   2???               M         CALL        WR_DATA
00FB   0008           00445         RETURN
                      00446         
                      00447 ;******************************************************************************;
                      00448 ;                                GOODBYE                                       ;
                      00449 ;******************************************************************************;
00FC                  00450 STOP_STDBY_MSG
                      00451         WRT_LCD     "H"
00FC   3048               M         MOVLW       "H"
00FD   2???               M         CALL        WR_DATA
                      00452         WRT_LCD     "I"
00FE   3049               M         MOVLW       "I"
00FF   2???               M         CALL        WR_DATA
                      00453         WRT_LCD     "T"
0100   3054               M         MOVLW       "T"
0101   2???               M         CALL        WR_DATA
                      00454         WRT_LCD     " "
0102   3020               M         MOVLW       " "
0103   2???               M         CALL        WR_DATA
                      00455         WRT_LCD     "*"
0104   302A               M         MOVLW       "*"
0105   2???               M         CALL        WR_DATA
                      00456         WRT_LCD     " "
0106   3020               M         MOVLW       " "
0107   2???               M         CALL        WR_DATA
                      00457         WRT_LCD     "F"
0108   3046               M         MOVLW       "F"
0109   2???               M         CALL        WR_DATA
                      00458         WRT_LCD     "O"
010A   304F               M         MOVLW       "O"
010B   2???               M         CALL        WR_DATA
                      00459         WRT_LCD     "R"
010C   3052               M         MOVLW       "R"
010D   2???               M         CALL        WR_DATA
                      00460         WRT_LCD     " "
010E   3020               M         MOVLW       " "
010F   2???               M         CALL        WR_DATA
                      00461         WRT_LCD     "D"
0110   3044               M         MOVLW       "D"
0111   2???               M         CALL        WR_DATA
                      00462         WRT_LCD     "A"
0112   3041               M         MOVLW       "A"
0113   2???               M         CALL        WR_DATA
                      00463         WRT_LCD     "T"
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0114   3054               M         MOVLW       "T"
0115   2???               M         CALL        WR_DATA
                      00464         WRT_LCD     "A"
0116   3041               M         MOVLW       "A"
0117   2???               M         CALL        WR_DATA
0118   0008           00465         RETURN
                      00466          
                      00467 ;******************************************************************************;
                      00468 ;                                 DATA                                         ;
                      00469 ;******************************************************************************;
0119                  00470 WRT_DATA        
                      00471         WRT_LCD     "N"
0119   304E               M         MOVLW       "N"
011A   2???               M         CALL        WR_DATA
                      00472         WRT_LCD     "U"
011B   3055               M         MOVLW       "U"
011C   2???               M         CALL        WR_DATA
                      00473         WRT_LCD     "M"
011D   304D               M         MOVLW       "M"
011E   2???               M         CALL        WR_DATA
                      00474         WRT_LCD     " "
011F   3020               M         MOVLW       " "
0120   2???               M         CALL        WR_DATA
                      00475         WRT_LCD     "S"
0121   3053               M         MOVLW       "S"
0122   2???               M         CALL        WR_DATA
                      00476         WRT_LCD     "P"
0123   3050               M         MOVLW       "P"
0124   2???               M         CALL        WR_DATA
                      00477         WRT_LCD     "O"
0125   304F               M         MOVLW       "O"
0126   2???               M         CALL        WR_DATA
                      00478         WRT_LCD     "T"
0127   3054               M         MOVLW       "T"
0128   2???               M         CALL        WR_DATA
                      00479         WRT_LCD     "S"
0129   3053               M         MOVLW       "S"
012A   2???               M         CALL        WR_DATA
                      00480         WRT_LCD     ":"
012B   303A               M         MOVLW       ":"
012C   2???               M         CALL        WR_DATA
                      00481         WRT_LCD     " "
012D   3020               M         MOVLW       " "
012E   2???               M         CALL        WR_DATA
                      00482 ;       WRT_MEM_LCD num_spots
012F   0008           00483         RETURN
                      00484 ;******************************************************************************;
                      00485 ;                           RETREIVE START TIME                                ;
                      00486 ;******************************************************************************;
0130                  00487 GET_START_TIME
                      00488         ;Get minute             
                      00489         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0130   3001               M         movlw       0x01
0131   1283 1303          M         banksel     0x73
0133   00F3               M         movwf       0x73
0134   2???               M         call        read_rtc
0135   1283 1303          M         banksel     0x75
0137   0875               M         movf        0x75,w
0138   2???               M         call        rtc_convert   
0139   0877           00490         MOVFW       0X77
013A   00CA           00491         MOVWF       start_min10
013B   0878           00492         MOVFW       0X78
013C   00C9           00493         MOVWF       start_min
                      00494 
                      00495         ;Get seconds
                      00496         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
013D   3000               M         movlw       0x00
013E   1283 1303          M         banksel     0x73
0140   00F3               M         movwf       0x73
0141   2???               M         call        read_rtc
0142   1283 1303          M         banksel     0x75
0144   0875               M         movf        0x75,w
0145   2???               M         call        rtc_convert   
0146   0877           00497         MOVFW       0X77
0147   00CC           00498         MOVWF       start_sec10
0148   0878           00499         MOVFW       0X78
0149   00CB           00500         MOVWF       start_sec
014A   0008           00501         RETURN
                      00502 ;******************************************************************************;
                      00503 ;                           RETREIVE STOP TIME                                 ;
                      00504 ;******************************************************************************;
014B                  00505 GET_STOP_TIME
                      00506         ;Get minute             
                      00507         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
014B   3001               M         movlw       0x01
014C   1283 1303          M         banksel     0x73
014E   00F3               M         movwf       0x73
014F   2???               M         call        read_rtc
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0150   1283 1303          M         banksel     0x75
0152   0875               M         movf        0x75,w
0153   2???               M         call        rtc_convert   
0154   0877           00508         MOVFW       0X77
0155   00CE           00509         MOVWF       stop_min10
0156   0878           00510         MOVFW       0X78
0157   00CD           00511         MOVWF       stop_min
                      00512 
                      00513         ;Get seconds
                      00514         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0158   3000               M         movlw       0x00
0159   1283 1303          M         banksel     0x73
015B   00F3               M         movwf       0x73
015C   2???               M         call        read_rtc
015D   1283 1303          M         banksel     0x75
015F   0875               M         movf        0x75,w
0160   2???               M         call        rtc_convert   
0161   0877           00515         MOVFW       0X77
0162   00D0           00516         MOVWF       stop_sec10
0163   0878           00517         MOVFW       0X78
0164   00CF           00518         MOVWF       stop_sec
0165   0008           00519         RETURN
                      00520 ;******************************************************************************;
                      00521 ;                       DISPLAY RTC TIME TO LCD                                ;
                      00522 ;******************************************************************************;
0166                  00523 SHOW_RTC
                      00524         ;clear LCD screen
0166   3001           00525         movlw       b'00000001'
0167   2???           00526         call        WR_INS
                      00527 
                      00528         ;Get year
                      00529         WRT_LCD     "2"
0168   3032               M         MOVLW       "2"
0169   2???               M         CALL        WR_DATA
                      00530         WRT_LCD     "0"
016A   3030               M         MOVLW       "0"
016B   2???               M         CALL        WR_DATA
                      00531         rtc_read    0x06                ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
016C   3006               M         movlw       0x06
016D   1283 1303          M         banksel     0x73
016F   00F3               M         movwf       0x73
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0170   2???               M         call        read_rtc
0171   1283 1303          M         banksel     0x75
0173   0875               M         movf        0x75,w
0174   2???               M         call        rtc_convert   
                      00532         WRT_MEM_LCD 0x77
0175   0877               M         MOVFW       0x77
0176   2???               M         CALL        WR_DATA
                      00533         WRT_MEM_LCD 0x78
0177   0878               M         MOVFW       0x78
0178   2???               M         CALL        WR_DATA
                      00534 
                      00535         WRT_LCD     "/"
0179   302F               M         MOVLW       "/"
017A   2???               M         CALL        WR_DATA
                      00536 
                      00537         ;Get month
                      00538         rtc_read    0x05                ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
017B   3005               M         movlw       0x05
017C   1283 1303          M         banksel     0x73
017E   00F3               M         movwf       0x73
017F   2???               M         call        read_rtc
0180   1283 1303          M         banksel     0x75
0182   0875               M         movf        0x75,w
0183   2???               M         call        rtc_convert   
                      00539         WRT_MEM_LCD 0x77
0184   0877               M         MOVFW       0x77
0185   2???               M         CALL        WR_DATA
                      00540         WRT_MEM_LCD 0x78
0186   0878               M         MOVFW       0x78
0187   2???               M         CALL        WR_DATA
                      00541 
                      00542         WRT_LCD     "/"
0188   302F               M         MOVLW       "/"
0189   2???               M         CALL        WR_DATA
                      00543 
                      00544         ;Get day
                      00545         rtc_read    0x04                ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
018A   3004               M         movlw       0x04
018B   1283 1303          M         banksel     0x73
018D   00F3               M         movwf       0x73
018E   2???               M         call        read_rtc
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

018F   1283 1303          M         banksel     0x75
0191   0875               M         movf        0x75,w
0192   2???               M         call        rtc_convert   
                      00546         WRT_MEM_LCD 0x77
0193   0877               M         MOVFW       0x77
0194   2???               M         CALL        WR_DATA
                      00547         WRT_MEM_LCD 0x78
0195   0878               M         MOVFW       0x78
0196   2???               M         CALL        WR_DATA
                      00548 
0197   30C0           00549         movlw       B'11000000'         ;Next line displays (hour):(min):(sec) **:**:**
0198   2???           00550         call        WR_INS
                      00551         ;Get hour
                      00552         rtc_read    0x02                ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0199   3002               M         movlw       0x02
019A   1283 1303          M         banksel     0x73
019C   00F3               M         movwf       0x73
019D   2???               M         call        read_rtc
019E   1283 1303          M         banksel     0x75
01A0   0875               M         movf        0x75,w
01A1   2???               M         call        rtc_convert   
                      00553         WRT_MEM_LCD 0x77
01A2   0877               M         MOVFW       0x77
01A3   2???               M         CALL        WR_DATA
                      00554         WRT_MEM_LCD 0x78
01A4   0878               M         MOVFW       0x78
01A5   2???               M         CALL        WR_DATA
                      00555         WRT_LCD     ":"
01A6   303A               M         MOVLW       ":"
01A7   2???               M         CALL        WR_DATA
                      00556 
                      00557         ;Get minute             
                      00558         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01A8   3001               M         movlw       0x01
01A9   1283 1303          M         banksel     0x73
01AB   00F3               M         movwf       0x73
01AC   2???               M         call        read_rtc
01AD   1283 1303          M         banksel     0x75
01AF   0875               M         movf        0x75,w
01B0   2???               M         call        rtc_convert   
                      00559         WRT_MEM_LCD 0x77
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01B1   0877               M         MOVFW       0x77
01B2   2???               M         CALL        WR_DATA
                      00560         WRT_MEM_LCD 0x78
01B3   0878               M         MOVFW       0x78
01B4   2???               M         CALL        WR_DATA
                      00561         WRT_LCD     ":"
01B5   303A               M         MOVLW       ":"
01B6   2???               M         CALL        WR_DATA
                      00562 
                      00563         ;Get seconds
                      00564         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01B7   3000               M         movlw       0x00
01B8   1283 1303          M         banksel     0x73
01BA   00F3               M         movwf       0x73
01BB   2???               M         call        read_rtc
01BC   1283 1303          M         banksel     0x75
01BE   0875               M         movf        0x75,w
01BF   2???               M         call        rtc_convert   
                      00565         WRT_MEM_LCD 0x77
01C0   0877               M         MOVFW       0x77
01C1   2???               M         CALL        WR_DATA
                      00566         WRT_MEM_LCD 0x78
01C2   0878               M         MOVFW       0x78
01C3   2???               M         CALL        WR_DATA
                      00567 
01C4   0008           00568         RETURN
                      00569 ;******************************************************************************;
                      00570 ;                       INITIALIZE RTC TIME                                    ;
                      00571 ;******************************************************************************;                
01C5                  00572 SET_RTC_TIME
                      00573         rtc_resetAll    ;reset rtc
                          M ;input:         none
                          M ;output:        none
                          M ;desc:          Resets all the time keeping registers on the RTC to zero
01C5   1283 1303          M         banksel     0x74
01C7   01F4               M         clrf        0x74
01C8   1283 1303          M         banksel     0x73
01CA   01F3               M         clrf        0x73
01CB   2???               M         call        write_rtc           ;Write 0 to Seconds
01CC   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
01CE   0AF3               M         incf        0x73                        ;Set register address to 1
01CF   2???               M         call        write_rtc
01D0   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
01D2   0AF3               M         incf        0x73                        ;Set register address to 2
01D3   2???               M         call        write_rtc
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01D4   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
01D6   0AF3               M         incf        0x73                        ;Set register address to 3
01D7   2???               M         call        write_rtc
01D8   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
01DA   0AF3               M         incf        0x73                        ;Set register address to 4
01DB   2???               M         call        write_rtc
01DC   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
01DE   0AF3               M         incf        0x73                        ;Set register address to 5
01DF   2???               M         call        write_rtc
01E0   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
01E2   0AF3               M         incf        0x73                        ;Set register address to 6
01E3   2???               M         call        write_rtc
                      00574 
                      00575         rtc_set     0x00,       B'10000000'
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
01E4   1283 1303          M         banksel     0x73
01E6   3000               M         movlw       0x00
01E7   00F3               M         movwf       0x73
01E8   1283 1303          M         banksel     0x74
01EA   3080               M         movlw       B'10000000'
01EB   00F4               M         movwf       0x74        
01EC   2???               M         call        write_rtc
                      00576 
                      00577         ;set time 
                      00578         rtc_set     0x06,       B'00010110'             ; Year
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
01ED   1283 1303          M         banksel     0x73
01EF   3006               M         movlw       0x06
01F0   00F3               M         movwf       0x73
01F1   1283 1303          M         banksel     0x74
01F3   3016               M         movlw       B'00010110'
01F4   00F4               M         movwf       0x74        
01F5   2???               M         call        write_rtc
                      00579         rtc_set     0x05,       B'00000100'             ; Month
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
01F6   1283 1303          M         banksel     0x73
01F8   3005               M         movlw       0x05
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01F9   00F3               M         movwf       0x73
01FA   1283 1303          M         banksel     0x74
01FC   3004               M         movlw       B'00000100'
01FD   00F4               M         movwf       0x74        
01FE   2???               M         call        write_rtc
                      00580         rtc_set     0x04,       B'00000110'             ; Date
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
01FF   1283 1303          M         banksel     0x73
0201   3004               M         movlw       0x04
0202   00F3               M         movwf       0x73
0203   1283 1303          M         banksel     0x74
0205   3006               M         movlw       B'00000110'
0206   00F4               M         movwf       0x74        
0207   2???               M         call        write_rtc
                      00581         rtc_set     0x03,       B'00000010'             ; Day
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0208   1283 1303          M         banksel     0x73
020A   3003               M         movlw       0x03
020B   00F3               M         movwf       0x73
020C   1283 1303          M         banksel     0x74
020E   3002               M         movlw       B'00000010'
020F   00F4               M         movwf       0x74        
0210   2???               M         call        write_rtc
                      00582         rtc_set     0x02,       B'00000000'             ; Hours
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0211   1283 1303          M         banksel     0x73
0213   3002               M         movlw       0x02
0214   00F3               M         movwf       0x73
0215   1283 1303          M         banksel     0x74
0217   3000               M         movlw       B'00000000'
0218   00F4               M         movwf       0x74        
0219   2???               M         call        write_rtc
                      00583         rtc_set     0x01,       B'00000000'             ; Minutes
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
021A   1283 1303          M         banksel     0x73
021C   3001               M         movlw       0x01
021D   00F3               M         movwf       0x73
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

021E   1283 1303          M         banksel     0x74
0220   3000               M         movlw       B'00000000'
0221   00F4               M         movwf       0x74        
0222   2???               M         call        write_rtc
                      00584         rtc_set     0x00,       B'00000000'             ; Seconds
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0223   1283 1303          M         banksel     0x73
0225   3000               M         movlw       0x00
0226   00F3               M         movwf       0x73
0227   1283 1303          M         banksel     0x74
0229   3000               M         movlw       B'00000000'
022A   00F4               M         movwf       0x74        
022B   2???               M         call        write_rtc
022C   0008           00585         return
                      00586 
                      00587 ;******************************************************************************;                
                      00588 ;******************************************************************************;
                      00589 ;******************************************************************************;
022D                  00590 DIV16X8 ; DIV_HI and DIV_LO / DIVSOR.  result to Q
                      00591                 ; does not deal with divide by 0 case
022D   01C5           00592         CLRF Q
022E                  00593 DIV_1
022E   0844           00594         MOVF DIVISOR, W
022F   02C3           00595         SUBWF DIV_LO, F
0230   1C03           00596         BTFSS STATUS, C ; if positive skip
0231   2???           00597         GOTO BORROW
0232   2???           00598         GOTO DIV_2
0233                  00599 BORROW
0233   3001           00600         MOVLW 0x01
0234   02C2           00601         SUBWF DIV_HI, F ; DIV_HI = DIV_HI - 1
0235   1C03           00602         BTFSS STATUS, C ; if no borrow occurred
0236   2???           00603         GOTO DIV_DONE   
0237                  00604 DIV_2
0237   0AC5           00605         INCF Q, F
0238   2???           00606         GOTO DIV_1
0239                  00607 DIV_DONE
0239   0008           00608         RETURN
                      00609         
023A                  00610 LONG_DLY
023A   30FF           00611         MOVLW       0xFF
023B   00BF           00612         MOVWF       long_del
023C                  00613 LD_LOOP 
Warning[207]: Found label after column 1. (LCD_DLY)
023C                  00614         LCD_DLY
023C   0BBF           00615         DECFSZ      long_del, f
023D   2???           00616         GOTO        LD_LOOP
023E   0008           00617         RETURN
                      00618 
023F                  00619 DEL_20US
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

023F   3021           00620         movlw   0x21
0240   00C6           00621         movwf   d1
0241                  00622 DEL_20US_0
0241   0BC6           00623         decfsz  d1, f
0242   2???           00624         goto    DEL_20US_0
0243   0008           00625         RETURN
                      00626 
0244                  00627 FINISH  
0244   2???           00628         GOTO    FINISH
                      00629         
3F72                  00630         END
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE 23


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADD                               00000036
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ARM_TOGGLE                        0000007B
B1                                0000003A
B2                                0000003B
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BORROW                            00000233
BRGH                              00000002
C                                 00000000
CALIBRATE                         00000039
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE 24


SYMBOL TABLE
  LABEL                             VALUE 

CKP                               00000004
CLR_LCD                           00000000
CONTROL                           00000035
CREN                              00000004
CSRC                              00000007
D                                 00000005
DAT                               00000037
DATA_ADDRESS                      00000005
DATA_LOOP                         000000BB
DC                                00000001
DEL_20US                          0000023F
DEL_20US_0                        00000241
DIV16X8                           0000022D
DIVISOR                           00000044
DIV_1                             0000022E
DIV_2                             00000237
DIV_DONE                          00000239
DIV_HI                            00000042
DIV_LO                            00000043
DOUT                              00000039
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FINISH                            00000244
FSR                               00000004
GCEN                              00000007
GET_START_TIME                    00000130
GET_STOP_TIME                     0000014B
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INIT                              00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE 25


SYMBOL TABLE
  LABEL                             VALUE 

INTF                              00000001
INT_HANDLER                       00000043
IRP                               00000007
InitLCD                           00000000
LCD_DLY                           0000023C
LCD_INS                           
LD_LOOP                           0000023C
LONG_DLY                          0000023A
MOTOR_DIR_CTRL                    PORTC, 5
MULT                              
MX_LOOP                           00000051
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

PSPIF                             00000007
PSPMODE                           00000004
Q                                 00000045
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_IRS                          0000004F
READ_WRITE                        00000002
RETURN_HOME                       000000A6
RP0                               00000005
RP1                               00000006
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SCAN                              00000042
SEN                               00000000
SET_RTC_TIME                      000001C5
SHOW_RTC                          00000166
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
START_MSG                         000000DF
START_STDBY                       0000002E
STATUS                            00000003
STOP_DATA                         000000B0
STOP_STDBY                        000000A8
STOP_STDBY_MSG                    000000FC
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
USHOLDL                           00000082
USHOLDS                           00000097
USONIC_LAT                        0000007C
USONIC_LAT_ECHO                   0000007F
USONIC_SUP                        00000091
USONIC_SUP_ECHO                   00000094
W                                 00000000
WCOL                              00000007
WHL_ENC                           00000078
WR                                00000001
WREN                              00000002
WRERR                             00000003
WRT_DATA                          00000119
WRT_LCD                           
WRT_MEM_LCD                       
WR_DATA                           00000000
WR_INS                            00000000
XBUF                              00000033
Z                                 00000002
_.org_1_0034                      00000034
_.org_1_006C                      0000006C
_.org_1_0080                      00000080
_.org_1_0095                      00000095
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
count                             00000034
crit_dist                         d'5'
d1                                00000046
d2                                00000047
d3                                00000048
dt1                               00000030
dt2                               00000031
dt3                               00000032
flag                              00000038
i2c_common_setup                  00000000
lcd_d1                            0000003D
lcd_d2                            0000003E
lcd_tmp                           0000003C
long_del                          0000003F
measured_distance_lat             00000055
measured_distance_sup             00000056
multiplex_count                   00000052
num_spots                         00000059
read_rtc                          00000000
rob_lat_distance                  00000053
rob_long_distance                 00000054
rob_return                        00000057
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
spot_base_loc                     0000005A
spot_count                        00000058
spot_detected                     00000051
start_min                         00000049
start_min10                       0000004A
start_sec                         0000004B
start_sec10                       0000004C
stop_min                          0000004D
stop_min10                        0000004E
stop_sec                          0000004F
MPASM 5.65                          MAIN.ASM   3-6-2016  18:59:08         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

stop_sec10                        00000050
temp_status                       00000041
temp_w                            00000040
write_rtc                         00000000

Errors   :     0
Warnings :     1 reported,     0 suppressed
Messages :    19 reported,     0 suppressed

