MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;******************************************************************************;
                      00002 ;        ____    ___  ______    ___  ____       ____  ____  ____    ___  ____  ;
                      00003 ;       |    \  /  _]|      T  /  _]|    \     |    \l    j|    \  /  _]|    \ ;
                      00004 ;       |  o  )/  [_ |      | /  [_ |  D  )    |  o  )|  T |  o  )/  [_ |  D  );
                      00005 ;       |   _/Y    _]l_j  l_jY    _]|    /     |   _/ |  | |   _/Y    _]|    / ;
                      00006 ;       |  |  |   [_   |  |  |   [_ |    \     |  |   |  | |  |  |   [_ |    \ ;
                      00007 ;       |  |  |     T  |  |  |     T|  .  Y    |  |   j  l |  |  |     T|  .  Y;
                      00008 ;       l__j  l_____j  l__j  l_____jl__j\_j    l__j  |____jl__j  l_____jl__j\_j;
                      00009 ;------------------------------------------------------------------------------;
                      00010 ;               AER201 Team 61 'Peter Piper' Pipe Inspector                    ;
                      00011 ;                        Author: Omar Abdeldayem                               ;
                      00012 ;                           Created: 1/12/2016                                 ;
                      00013 ;------------------------------------------------------------------------------;
                      00014 ; DESCRIPTION:                                                                                          
                                                               ;
                      00015 ; It does shit, yo.                                                                                     
                                                               ;
                      00016 ;******************************************************************************;
                      00017 ;******************************************************************************;
                      00018 ;******************************************************************************;
                      00019 
                      00020         List    p=16f877                    ; list directive to define processor
                      00021         #include        <p16f877.inc>       ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
2007   3F72           00022         __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP
                            _OFF
                      00023 
                      00024         #include        <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel     0x74
                      00011         clrf        0x74
                      00012         banksel     0x73
                      00013         clrf        0x73
                      00014         call        write_rtc           ;Write 0 to Seconds
                      00015         banksel     0x73
                      00016         incf        0x73                        ;Set register address to 1
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00017         call        write_rtc
                      00018         banksel     0x73
                      00019         incf        0x73                        ;Set register address to 2
                      00020         call        write_rtc
                      00021         banksel     0x73
                      00022         incf        0x73                        ;Set register address to 3
                      00023         call        write_rtc
                      00024         banksel     0x73
                      00025         incf        0x73                        ;Set register address to 4
                      00026         call        write_rtc
                      00027         banksel     0x73
                      00028         incf        0x73                        ;Set register address to 5
                      00029         call        write_rtc
                      00030         banksel     0x73
                      00031         incf        0x73                        ;Set register address to 6
                      00032         call        write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set macro       addliteral, datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel     0x73
                      00042         movlw       addliteral
                      00043         movwf       0x73
                      00044         banksel     0x74
                      00045         movlw       datliteral
                      00046         movwf       0x74        
                      00047         call        write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read macro      addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw       addliteral
                      00058         banksel     0x73
                      00059         movwf       0x73
                      00060         call        read_rtc
                      00061         banksel     0x75
                      00062         movf        0x75,w
                      00063         call        rtc_convert   
                      00064         endm
                      00025         #include        <lcd.inc>
  0000                00001     extern      InitLCD,WR_INS,WR_DATA,CLR_LCD
                      00026 ;******************************************************************************;
                      00027 ;                               BANK0 RAM                                      ;
                      00028 ;******************************************************************************;
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00029         CBLOCK      0x30
  00000030            00030         long_del
  00000031            00031         temp_w      ; 0x30
  00000032            00032         temp_status ; 0x31
                      00033                     ; DIVISION Registers
  00000033            00034         DIV_HI      ; 0X32
  00000034            00035         DIV_LO      ; 0X33
  00000035            00036         DIVISOR     ; 0X34
  00000036            00037         Q
  00000037            00038         d1
  00000038            00039         d2
  00000039            00040         d3
                      00041                     ; ROBOT VARS
  0000003A            00042         start_min
  0000003B            00043         start_min10
  0000003C            00044         start_sec
  0000003D            00045         start_sec10
  0000003E            00046         stop_min
  0000003F            00047         stop_min10
  00000040            00048         stop_sec
  00000041            00049         stop_sec10  ; 0x40
  00000042            00050         spot_detected
  00000043            00051         multiplex_count
  00000044            00052         rob_lat_distance
  00000045            00053         rob_long_distance_count
  00000046            00054         rob_long_distance
  00000047            00055         measured_distance_lat
  00000048            00056         measured_distance_sup
  00000049            00057         rob_return
  0000004A            00058         spot_count
  0000004B            00059         num_spots
  0000004C            00060         spot_base_loc
                      00061         ENDC
                      00062 
                      00063 ;******************************************************************************;
                      00064 ;                               EQUATES                                ;
                      00065 ;******************************************************************************;
                      00066         #define     crit_dist           0X08
                      00067         #define     MUX_CTRL_0          PORTA, 0
                      00068         #define     MUX_CTRL_1          PORTA, 1
                      00069         #define     MUX_CTRL_2          PORTA, 2
                      00070         #define     MUX_CTRL_3          PORTA, 3
                      00071         #define     SERVO_CTRL          PORTA, 5
                      00072         #define     US_SUP_TRIG         PORTB, 3
                      00073         #define     US_SUP_ECHO         PORTB, 4
                      00074         #define     MUX_IN              PORTC, 0
                      00075         #define     MOTOR_DIR_CTRL      PORTC, 5
                      00076         #define     US_LAT_TRIG         PORTC, 6
                      00077         #define     US_LAT_ECHO         PORTC, 7
                      00078         #define     BUZZER              PORTD, 0
                      00079         #define     L_MOTOR_SPD         B'11111111'
                      00080         #define     R_MOTOR_SPD         B'11111111'
                      00081 ;******************************************************************************;
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00082 ;                               MACROS                                         ;
                      00083 ;******************************************************************************;
                      00084 MULT    macro       val1, val2, result
                      00085         MOVF        val1, W
                      00086         ADDWF       val1, W
                      00087         MOVWF       result
                      00088         DECFSZ      val2, f
                      00089         GOTO        $-3
                      00090         endm
                      00091         
                      00092 WRT_LCD macro       val
                      00093         MOVLW       val
                      00094         CALL        WR_DATA
                      00095         endm
                      00096 LCD_INS macro       val
                      00097         MOVLW       val
                      00098         CALL        WR_INS
                      00099         endm
                      00100         
                      00101 WRT_MEM_LCD macro   val
                      00102         MOVFW       val
                      00103         CALL        WR_DATA
                      00104         endm
                      00105 
                      00106 CWRT_MEM_LCD macro   val
                      00107         MOVFW       val
                      00108         ADDLW       D'48'
                      00109         CALL        WR_DATA
                      00110         endm
                      00111 ;******************************************************************************;
                      00112 ;                          VECTOR TABLE                                        ;
                      00113 ;******************************************************************************;
                      00114         ORG         0x0000              ; RESET vector must always be at 0x00
0000   2???           00115         GOTO        INIT                ; Just jump to the main code section.
                      00116         ORG         0x0004
0004   2???           00117         GOTO        INT_HANDLER
                      00118 
                      00119 ;******************************************************************************;
                      00120 ;                         ROBOT INITIALIZATION                                 ;
                      00121 ;******************************************************************************;
0005                  00122 INIT
0005   1683           00123         BSF         STATUS, RP0         ; Select bank 1
0006   018B           00124         CLRF        INTCON              ; Disable interrupts for now
                      00125         
0007   3006           00126         MOVLW       0x06                ; Turn PORT A to digital
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0008   009F           00127         MOVWF       ADCON1
                      00128         
0009   3010           00129         MOVLW       b'00010000'         ; PORT A pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000A   0085           00130         MOVWF       TRISA
000B   30F3           00131         MOVLW       b'11110011'         ; PORT B pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C   0086           00132         MOVWF       TRISB
000D   3099           00133         MOVLW       b'10011001'         ; PORT C pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000E   0087           00134         MOVWF       TRISC
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000F   0188           00135         CLRF        TRISD               ; PORT D pin mapping
0010   3007           00136         MOVLW       b'00000111'         ; PORT E pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0011   0089           00137         MOVWF       TRISE
                      00138         
0012   30FF           00139         MOVLW       B'11111111'         ; PWM pulsing period (484Hz)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0013   0092           00140         MOVWF       PR2
                      00141        
0014   1283           00142         BCF         STATUS, RP0         ; select bank 0
                      00143 
0015   30FF           00144         MOVLW       L_MOTOR_SPD         ; 100% DUTY CYCLE
0016   0095           00145         MOVWF       CCPR1L              
0017   30FF           00146         MOVLW       R_MOTOR_SPD         ; '01100100' 100% DUTY CYCLE
0018   009B           00147         MOVWF       CCPR2L
0019   30FF           00148         MOVLW       B'11111111'
001A   0097           00149         MOVWF       CCP1CON
001B   30FF           00150         MOVLW       B'11111111'
001C   009D           00151         MOVWF       CCP2CON
                      00152         
001D   3005           00153         MOVLW       B'00000101'         ; Initialize and hold timer 2
001E   0092           00154         MOVWF       T2CON
001F   0191           00155         CLRF        TMR2
0020   1112           00156         BCF         T2CON, TMR2ON
                      00157         
0021   3010           00158         MOVLW       0X10                ; TMR1 for Ultrasonic Sensors
0022   0090           00159         MOVWF       T1CON
0023   018F           00160         CLRF        TMR1H
0024   018E           00161         CLRF        TMR1L
                      00162         
                      00163 ;       clrf        PORTA
                      00164  ;       clrf       PORTB
                      00165   ;      clrf       PORTC 
                      00166    ;     clrf       PORTD
                      00167         
                      00168 ;       CALL        i2c_common_setup
0025   2???           00169         CALL        InitLCD
                      00170         
0026   01CB           00171         CLRF        num_spots
0027   01CA           00172         CLRF        spot_count
0028   01C2           00173         CLRF        spot_detected
0029   01C7           00174         CLRF        measured_distance_lat
002A   01C8           00175         CLRF        measured_distance_sup
                      00176                                                 
002B   2???           00177         CALL        START_MSG
                      00178 ;******************************************************************************;
                      00179 ;                        ROBOT START AND STANDBY                               ;
                      00180 ;******************************************************************************;
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002C                  00181 START_STDBY
002C   1C86           00182         BTFSS       PORTB, 1            ; Wait until data is available from the keypad
002D   2???           00183         GOTO        START_STDBY
                      00184 
002E   0E06           00185         SWAPF       PORTB, W            ; Read PortB<7:4> into W<3:0>
002F   390F           00186         ANDLW       0x0F
0030   2???           00187         CALL        CLR_LCD
                      00188 
0031   1886           00189         BTFSC       PORTB,1             ; Wait until key is released
0032   2???           00190         GOTO        $-1
                      00191         
0033   2???           00192         CALL        CLR_LCD
                      00193 
0034   1287           00194         BCF         MOTOR_DIR_CTRL
0035   1512           00195         BSF         T2CON, TMR2ON
0036   2???           00196         GOTO        SCAN
                      00197 ;       CALL        SET_RTC_TIME
                      00198 ;       CALL        GET_START_TIME
                      00199 ;       GOTO        CALIBRATE
                      00200 
                      00201 ;******************************************************************************;
                      00202 ;                           SENSOR CALIBRATION                                 ;
                      00203 ;******************************************************************************;
0037                  00204 CALIBRATE
0037   2???           00205         CALL        USONIC_LAT  
0038   2???           00206         CALL        ARM_CTRL
0039   2???           00207         CALL        USONIC_LAT
003A   3008           00208         MOVLW       crit_dist
003B   0247           00209         SUBWF       measured_distance_lat, W
003C   1803           00210         BTFSC       STATUS, 0
003D   2???           00211         GOTO        CALIBRATE
                      00212 ;       BCF         PORTD, 0
                      00213 ;       BSF         INTCON, RBIE            ; Enable interrupts
                      00214 ;       BSF         INTCON, INTE
                      00215 ;       BSF         INTCON, GIE 
003E   2???           00216         GOTO        SCAN
                      00217         
                      00218 ;******************************************************************************;
                      00219 ;                         PIPE SCAN SUPERLOOP                                  ;
                      00220 ;******************************************************************************;
003F                  00221 SCAN
                      00222         ;CALL       USONIC_SUP
                      00223 ;       CALL        ARM_CTRL
                      00224 ;       CALL        USONIC_LAT
                      00225 ;       CALL        MOTOR_CTRL_R
                      00226 ;       CALL        MOTOR_CTRL_L
                      00227 ;       MOVLW       crit_dist
                      00228 ;       SUBWF       measured_distance_lat, W
                      00229 ;       BTFSC       STATUS, 0
                      00230 ;       GOTO        RETURN_HOME
                      00231 ;       CALL        SHOW_RTC                ; DEBUG
003F   2???           00232         CALL        READ_IRS
0040   2???           00233         GOTO        SCAN
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00234         
                      00235 ;******************************************************************************;
                      00236 ;                          INTERRUPT HANDLER                                   ;
                      00237 ;******************************************************************************;
0041                  00238 INT_HANDLER
0041   00B1           00239         MOVWF       temp_w
0042   0E03           00240         SWAPF       STATUS, W
0043   00B2           00241         MOVWF       temp_status
0044   100B           00242         BCF         INTCON, RBIF
0045   108B           00243         BCF         INTCON, INTF          ; Clear the interrupt flag
                      00244         
0046   2???           00245         CALL        WHL_ENC
                      00246         
0047   0E32           00247         SWAPF       temp_status, W
0048   0083           00248         MOVWF       STATUS
0049   0EB1           00249         SWAPF       temp_w, F
004A   0E31           00250         SWAPF       temp_w, W
004B   0009           00251         RETFIE
                      00252 
                      00253 ;******************************************************************************;
                      00254 ;                       CYCLE INFRARED SENSORS                                 ;
                      00255 ;******************************************************************************;
004C                  00256 READ_IRS
004C   3010           00257         MOVLW       d'16'
004D   00C3           00258         MOVWF       multiplex_count
004E                  00259 MX_LOOP 
Message[305]: Using default destination of 1 (file).
004E   03C3           00260         DECF        multiplex_count
004F   1005           00261         BCF         MUX_CTRL_0
0050   1843           00262         BTFSC       multiplex_count, 0
0051   1405           00263         BSF         MUX_CTRL_0
0052   1085           00264         BCF         MUX_CTRL_1
0053   18C3           00265         BTFSC       multiplex_count, 1
0054   1485           00266         BSF         MUX_CTRL_1
0055   1105           00267         BCF         MUX_CTRL_2
0056   1943           00268         BTFSC       multiplex_count, 2
0057   1505           00269         BSF         MUX_CTRL_2
0058   1185           00270         BCF         MUX_CTRL_3
0059   19C3           00271         BTFSC       multiplex_count, 3
005A   1585           00272         BSF         MUX_CTRL_3
                      00273         
005B   2???           00274         CALL        DEL_10MS
005C   2???           00275         CALL        DEL_10MS
005D   2???           00276         CALL        DEL_10MS
005E   2???           00277         CALL        DEL_10MS
005F   2???           00278         CALL        DEL_10MS
0060   2???           00279         CALL        DEL_10MS
0061   2???           00280         CALL        DEL_10MS
                      00281         
0062   2???           00282         CALL        DEL_10MS
0063   2???           00283         CALL        DEL_10MS
0064   2???           00284         CALL        DEL_10MS
                      00285         
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0065   2???           00286         CALL        DEL_10MS
0066   2???           00287         CALL        DEL_10MS
0067   2???           00288         CALL        DEL_10MS
                      00289         
0068   1807           00290         BTFSC       MUX_IN
0069   2???           00291         GOTO        NO_SPOT 
006A   1408           00292         BSF         BUZZER                              ; Buzzer start
006B   2???           00293         CALL        DEL_1S
006C   0846           00294         MOVFW       rob_long_distance                   ; Save spot location
Warning[219]: Invalid RAM location specified.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
006D   0097           00295         MOVWF       spot_base_loc + num_spots
006E   0ACB           00296         INCF        num_spots, f                        ; Increase number of spots
006F   1008           00297         BCF         BUZZER                              ; Buzzer stop
Message[305]: Using default destination of 1 (file).
0070   0AC3           00298 NO_SPOT INCF        multiplex_count
Message[305]: Using default destination of 1 (file).
0071   0BC3           00299         DECFSZ      multiplex_count
0072   2???           00300         GOTO        MX_LOOP
0073   0008           00301         RETURN
                      00302         
                      00303 ;******************************************************************************;
                      00304 ;                         WHEEL ENCODER ROUTINE                                ;
                      00305 ;******************************************************************************;
0074                  00306 WHL_ENC
Message[305]: Using default destination of 1 (file).
0074   0AC5           00307         INCF        rob_long_distance_count ; Increment number of changes
0075   3006           00308         MOVLW       0x06                    ; Every six changes is approx 1in
0076   02C5           00309         SUBWF       rob_long_distance_count, F
0077   1C03           00310         BTFSS       STATUS, 0
Message[305]: Using default destination of 1 (file).
0078   0AC6           00311         INCF        rob_long_distance       ; One inch was covered
0079   0008           00312         RETURN
                      00313         
                      00314 ;******************************************************************************;
                      00315 ;                       TOGGLE ARM STATE SUBROUTINES                           ;
                      00316 ;******************************************************************************;
007A                  00317 ARM_CTRL
007A   3008           00318         MOVLW       crit_dist
007B   0247           00319         SUBWF       measured_distance_lat, W
007C   1803           00320         BTFSC       STATUS, 0               ; C==0 if measured_distance_sup < crit_dist
007D   2???           00321         GOTO        ARM_CLOSE
007E   2???           00322         GOTO        ARM_OPEN
007F                  00323 ARM_CLOSE                                   ; Close arm for full scan
007F   1685           00324         BSF         SERVO_CTRL
0080   2???           00325         CALL        DEL_1_5MS
0081   1285           00326         BCF         SERVO_CTRL
0082   2???           00327         CALL        DEL_10MS
0083   2???           00328         CALL        DEL_10MS
0084   2???           00329         CALL        DEL_10MS
0085   2???           00330         CALL        DEL_10MS
0086   0008           00331         RETURN      
                      00332         
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0087                  00333 ARM_OPEN                                    ; Open arm to clear support
0087   1685           00334         BSF         SERVO_CTRL
0088   2???           00335         CALL        DEL_2_1MS
0089   2???           00336         CALL        DEL_2_1MS
008A   1285           00337         BCF         SERVO_CTRL
008B   2???           00338         CALL        DEL_10MS
008C   2???           00339         CALL        DEL_10MS
008D   2???           00340         CALL        DEL_10MS
008E   2???           00341         CALL        DEL_10MS
008F   0008           00342         RETURN
                      00343 ;******************************************************************************;
                      00344 ;                     ULTRASONIC SENSOR SUBROUTINES                            ;
                      00345 ;******************************************************************************;
0090                  00346 USONIC_SUP
0090   1586           00347         BSF         US_SUP_TRIG
0091   2???           00348         CALL        DEL_20US
0092   1186           00349         BCF         US_SUP_TRIG
0093                  00350 USONIC_SUP_ECHO
0093   1E06           00351         BTFSS       US_SUP_ECHO
0094   2???           00352         GOTO        $-1
0095   1410           00353         BSF         T1CON, 0
0096   1A06           00354 USHOLDL BTFSC       US_SUP_ECHO
0097   2???           00355         GOTO        USHOLDL
0098   1010           00356         BCF         T1CON, 0
0099   080F           00357         MOVF        TMR1H, W
009A   00B3           00358         MOVWF       DIV_HI
009B   080E           00359         MOVF        TMR1L, W
009C   00B4           00360         MOVWF       DIV_LO
009D   018F           00361         CLRF        TMR1H
009E   018E           00362         CLRF        TMR1L
009F   303A           00363         MOVLW       d'58'
00A0   00B5           00364         MOVWF       DIVISOR
00A1   2???           00365         CALL        DIV16X8
00A2   0836           00366         MOVF        Q, W
00A3   00C8           00367         MOVWF       measured_distance_sup
00A4   0008           00368         RETURN
                      00369 
00A5                  00370 USONIC_LAT
00A5   1707           00371         BSF         US_LAT_TRIG
00A6   2???           00372         CALL        DEL_20US
00A7   1387           00373         BCF         US_LAT_ECHO
00A8                  00374 USONIC_LAT_ECHO
00A8   1F87           00375         BTFSS       US_LAT_ECHO
00A9   2???           00376         GOTO        $-1
00AA   1410           00377         BSF         T1CON, 0
00AB   1B87           00378 USHOLDS BTFSC       US_LAT_ECHO
00AC   2???           00379         GOTO        USHOLDS
00AD   1010           00380         BCF         T1CON, 0
00AE   080F           00381         MOVF        TMR1H, W
00AF   00B3           00382         MOVWF       DIV_HI
00B0   080E           00383         MOVF        TMR1L, W
00B1   00B4           00384         MOVWF       DIV_LO
00B2   018F           00385         CLRF        TMR1H
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B3   018E           00386         CLRF        TMR1L
00B4   303A           00387         MOVLW       d'58'
00B5   00B5           00388         MOVWF       DIVISOR
00B6   2???           00389         CALL        DIV16X8
00B7   0836           00390         MOVF        Q, W
00B8   00C7           00391         MOVWF       measured_distance_lat
                      00392         ;CALL       rtc_convert
                      00393         ;CALL       CLR_LCD             ; DEBUG!
                      00394         ;WRT_MEM_LCD 0x77
                      00395         ;WRT_MEM_LCD 0x78
00B9   0008           00396         RETURN
                      00397         
                      00398 ;******************************************************************************;
                      00399 ;                              ACTIVE CONTROL                                  ;
                      00400 ;******************************************************************************;
00BA                  00401 MOTOR_CTRL_R
00BA   3008           00402         MOVLW       crit_dist
00BB   0247           00403         SUBWF       measured_distance_lat, W
00BC   1C03           00404         BTFSS       STATUS, 0               ; C==0 if measured_distance_lat >= crit_dist
00BD   0008           00405         RETURN
00BE   1408           00406         BSF         BUZZER
00BF   0195           00407         CLRF        CCPR1L
00C0   0197           00408         CLRF        CCP1CON
00C1   2???           00409         CALL        DEL_10MS
00C2   2???           00410         CALL        DEL_10MS
00C3   2???           00411         CALL        DEL_10MS
00C4   30FF           00412         MOVLW       R_MOTOR_SPD
00C5   0095           00413         MOVWF       CCPR1L
00C6   1008           00414         BCF         BUZZER
00C7   0008           00415         RETURN
                      00416 
00C8                  00417 MOTOR_CTRL_L
00C8   0847           00418         MOVFW       measured_distance_lat
00C9   3C08           00419         SUBLW       crit_dist
00CA   1C03           00420         BTFSS       STATUS, 0
00CB   0008           00421         RETURN
00CC   019B           00422         CLRF        CCPR2L
00CD   019D           00423         CLRF        CCP2CON
00CE   2???           00424         CALL        DEL_10MS
00CF   2???           00425         CALL        DEL_10MS
00D0   2???           00426         CALL        DEL_10MS
00D1   30FF           00427         MOVLW       R_MOTOR_SPD
00D2   009B           00428         MOVWF       CCPR2L
00D3   0008           00429         RETURN
                      00430         
                      00431 ;******************************************************************************;
                      00432 ;                           RETURN HOME ROUTINE                                ;
                      00433 ;******************************************************************************;
00D4                  00434 RETURN_HOME
00D4   018B           00435         CLRF        INTCON
00D5   1287           00436         BCF         MOTOR_DIR_CTRL
00D6   2???           00437         CALL        ARM_CTRL
00D7   2???           00438         CALL        USONIC_LAT
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00D8   3008           00439         MOVLW       crit_dist
00D9   0247           00440         SUBWF       measured_distance_lat, W
00DA   1803           00441         BTFSC       STATUS, 0
00DB   2???           00442         GOTO        RETURN_HOME
00DC   2???           00443         GOTO        FINAL_BACKUP
                      00444 
00DD                  00445 FINAL_BACKUP
00DD   2???           00446         CALL        DEL_1S
00DE   2???           00447         CALL        DEL_1S
00DF   2???           00448         CALL        DEL_1S
00E0   2???           00449         CALL        DEL_1S
00E1   2???           00450         GOTO        STOP_STDBY
                      00451         
                      00452 ;******************************************************************************;
                      00453 ;                             STOP STANDBY                                     ;
                      00454 ;******************************************************************************;
00E2                  00455 STOP_STDBY
00E2   1112           00456         BCF         T2CON, TMR2ON       ; Turn off motors
00E3   0197           00457         CLRF        CCP1CON
00E4   019D           00458         CLRF        CCP2CON
                      00459 
00E5   2???           00460         CALL        GET_STOP_TIME       ; Get stop time
00E6   2???           00461         CALL        STOP_STDBY_MSG      ; Display standby message
00E7   1C86           00462         BTFSS       PORTB, 1            ; Wait until data is available from the keypad
00E8   2???           00463         GOTO        $-1
00E9   0E06           00464         SWAPF       PORTB, W            ; Read PortB<7:4> into W<3:0>
00EA   390F           00465         ANDLW       0x0F 
00EB   2???           00466         CALL        CLR_LCD
00EC   2???           00467         GOTO        STOP_DATA           ; Display run data
                      00468 
                      00469 ;******************************************************************************;
                      00470 ;                               DISPLAY DATA                                   ;
                      00471 ;******************************************************************************;
00ED                  00472 STOP_DATA
                      00473         WRT_LCD     "T"
00ED   3054               M         MOVLW       "T"
00EE   2???               M         CALL        WR_DATA
                      00474         WRT_LCD     "I"
00EF   3049               M         MOVLW       "I"
00F0   2???               M         CALL        WR_DATA
                      00475         WRT_LCD     "M"
00F1   304D               M         MOVLW       "M"
00F2   2???               M         CALL        WR_DATA
                      00476         WRT_LCD     "E"
00F3   3045               M         MOVLW       "E"
00F4   2???               M         CALL        WR_DATA
                      00477         WRT_LCD     ":"
00F5   303A               M         MOVLW       ":"
00F6   2???               M         CALL        WR_DATA
                      00478         WRT_LCD     " "
00F7   3020               M         MOVLW       " "
00F8   2???               M         CALL        WR_DATA
                      00479         ;Get minute             
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00480         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
00F9   3001               M         movlw       0x01
00FA   1283 1303          M         banksel     0x73
00FC   00F3               M         movwf       0x73
00FD   2???               M         call        read_rtc
00FE   1283 1303          M         banksel     0x75
0100   0875               M         movf        0x75,w
0101   2???               M         call        rtc_convert   
                      00481         WRT_MEM_LCD 0x77
0102   0877               M         MOVFW       0x77
0103   2???               M         CALL        WR_DATA
                      00482         WRT_MEM_LCD 0x78
0104   0878               M         MOVFW       0x78
0105   2???               M         CALL        WR_DATA
                      00483         WRT_LCD     ":"
0106   303A               M         MOVLW       ":"
0107   2???               M         CALL        WR_DATA
                      00484 
                      00485         ;Get seconds
                      00486         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0108   3000               M         movlw       0x00
0109   1283 1303          M         banksel     0x73
010B   00F3               M         movwf       0x73
010C   2???               M         call        read_rtc
010D   1283 1303          M         banksel     0x75
010F   0875               M         movf        0x75,w
0110   2???               M         call        rtc_convert   
                      00487         WRT_MEM_LCD 0x77
0111   0877               M         MOVFW       0x77
0112   2???               M         CALL        WR_DATA
                      00488         WRT_MEM_LCD 0x78
0113   0878               M         MOVFW       0x78
0114   2???               M         CALL        WR_DATA
                      00489 
0115   30C0           00490         movlw       B'11000000'         ;Next line displays (min):(sec) **:**
0116   2???           00491         call        WR_INS
0117   2???           00492         CALL        WRT_DATA
0118   2???           00493         CALL        DEL_1S
0119   2???           00494         CALL        DEL_1S
011A   2???           00495         CALL        CLR_LCD
                      00496         
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

011B   304C           00497         MOVLW       spot_base_loc
011C   0084           00498         MOVWF       FSR
                      00499         
011D                  00500 DATA_LOOP       
                      00501 ;       WRT_LCD     "S"
                      00502 ;       WRT_LCD     "P"
                      00503 ;       WRT_LCD     "O"
                      00504 ;       WRT_LCD     "T"
                      00505 ;       WRT_LCD     ":"
                      00506 ;       WRT_LCD     " "
                      00507 ;       WRT_MEM_LCD INDF
                      00508 ;       WRT_LCD     "c"
                      00509 ;       WRT_LCD     "m"
                      00510 ;       
                      00511 ;       CALL        DEL_1S
                      00512 ;       
                      00513 ;       CALL        CLR_LCD
                      00514 ;       INCF        FSR, F
                      00515 ;
                      00516 ;       DECFSZ      spot_count, F
                      00517 ;       GOTO        DATA_LOOP
                      00518         
                      00519         WRT_LCD     "E"
011D   3045               M         MOVLW       "E"
011E   2???               M         CALL        WR_DATA
                      00520         WRT_LCD     "N"
011F   304E               M         MOVLW       "N"
0120   2???               M         CALL        WR_DATA
                      00521         WRT_LCD     "D"
0121   3044               M         MOVLW       "D"
0122   2???               M         CALL        WR_DATA
                      00522 
0123   2???           00523         GOTO        FINISH
                      00524 
                      00525 ;******************************************************************************;
                      00526 ;                                  HELLO                                       ;
                      00527 ;******************************************************************************;
0124                  00528 START_MSG
                      00529         WRT_LCD     "H"
0124   3048               M         MOVLW       "H"
0125   2???               M         CALL        WR_DATA
                      00530         WRT_LCD     "I"
0126   3049               M         MOVLW       "I"
0127   2???               M         CALL        WR_DATA
                      00531         WRT_LCD     "T"
0128   3054               M         MOVLW       "T"
0129   2???               M         CALL        WR_DATA
                      00532         WRT_LCD     " "
012A   3020               M         MOVLW       " "
012B   2???               M         CALL        WR_DATA
                      00533         WRT_LCD     "*"
012C   302A               M         MOVLW       "*"
012D   2???               M         CALL        WR_DATA
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00534         WRT_LCD     " "
012E   3020               M         MOVLW       " "
012F   2???               M         CALL        WR_DATA
                      00535         WRT_LCD     "T"
0130   3054               M         MOVLW       "T"
0131   2???               M         CALL        WR_DATA
                      00536         WRT_LCD     "O"
0132   304F               M         MOVLW       "O"
0133   2???               M         CALL        WR_DATA
                      00537         WRT_LCD     " "
0134   3020               M         MOVLW       " "
0135   2???               M         CALL        WR_DATA
                      00538         WRT_LCD     "S"
0136   3053               M         MOVLW       "S"
0137   2???               M         CALL        WR_DATA
                      00539         WRT_LCD     "T"
0138   3054               M         MOVLW       "T"
0139   2???               M         CALL        WR_DATA
                      00540         WRT_LCD     "A"
013A   3041               M         MOVLW       "A"
013B   2???               M         CALL        WR_DATA
                      00541         WRT_LCD     "R"
013C   3052               M         MOVLW       "R"
013D   2???               M         CALL        WR_DATA
                      00542         WRT_LCD     "T"
013E   3054               M         MOVLW       "T"
013F   2???               M         CALL        WR_DATA
0140   0008           00543         RETURN
                      00544         
                      00545 ;******************************************************************************;
                      00546 ;                                GOODBYE                                       ;
                      00547 ;******************************************************************************;
0141                  00548 STOP_STDBY_MSG
                      00549         WRT_LCD     "H"
0141   3048               M         MOVLW       "H"
0142   2???               M         CALL        WR_DATA
                      00550         WRT_LCD     "I"
0143   3049               M         MOVLW       "I"
0144   2???               M         CALL        WR_DATA
                      00551         WRT_LCD     "T"
0145   3054               M         MOVLW       "T"
0146   2???               M         CALL        WR_DATA
                      00552         WRT_LCD     " "
0147   3020               M         MOVLW       " "
0148   2???               M         CALL        WR_DATA
                      00553         WRT_LCD     "*"
0149   302A               M         MOVLW       "*"
014A   2???               M         CALL        WR_DATA
                      00554         WRT_LCD     " "
014B   3020               M         MOVLW       " "
014C   2???               M         CALL        WR_DATA
                      00555         WRT_LCD     "F"
014D   3046               M         MOVLW       "F"
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

014E   2???               M         CALL        WR_DATA
                      00556         WRT_LCD     "O"
014F   304F               M         MOVLW       "O"
0150   2???               M         CALL        WR_DATA
                      00557         WRT_LCD     "R"
0151   3052               M         MOVLW       "R"
0152   2???               M         CALL        WR_DATA
                      00558         WRT_LCD     " "
0153   3020               M         MOVLW       " "
0154   2???               M         CALL        WR_DATA
                      00559         WRT_LCD     "D"
0155   3044               M         MOVLW       "D"
0156   2???               M         CALL        WR_DATA
                      00560         WRT_LCD     "A"
0157   3041               M         MOVLW       "A"
0158   2???               M         CALL        WR_DATA
                      00561         WRT_LCD     "T"
0159   3054               M         MOVLW       "T"
015A   2???               M         CALL        WR_DATA
                      00562         WRT_LCD     "A"
015B   3041               M         MOVLW       "A"
015C   2???               M         CALL        WR_DATA
015D   0008           00563         RETURN
                      00564          
                      00565 ;******************************************************************************;
                      00566 ;                                 DATA                                         ;
                      00567 ;******************************************************************************;
015E                  00568 WRT_DATA        
                      00569         WRT_LCD     "N"
015E   304E               M         MOVLW       "N"
015F   2???               M         CALL        WR_DATA
                      00570         WRT_LCD     "U"
0160   3055               M         MOVLW       "U"
0161   2???               M         CALL        WR_DATA
                      00571         WRT_LCD     "M"
0162   304D               M         MOVLW       "M"
0163   2???               M         CALL        WR_DATA
                      00572         WRT_LCD     " "
0164   3020               M         MOVLW       " "
0165   2???               M         CALL        WR_DATA
                      00573         WRT_LCD     "S"
0166   3053               M         MOVLW       "S"
0167   2???               M         CALL        WR_DATA
                      00574         WRT_LCD     "P"
0168   3050               M         MOVLW       "P"
0169   2???               M         CALL        WR_DATA
                      00575         WRT_LCD     "O"
016A   304F               M         MOVLW       "O"
016B   2???               M         CALL        WR_DATA
                      00576         WRT_LCD     "T"
016C   3054               M         MOVLW       "T"
016D   2???               M         CALL        WR_DATA
                      00577         WRT_LCD     "S"
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

016E   3053               M         MOVLW       "S"
016F   2???               M         CALL        WR_DATA
                      00578         WRT_LCD     ":"
0170   303A               M         MOVLW       ":"
0171   2???               M         CALL        WR_DATA
                      00579         WRT_LCD     " "
0172   3020               M         MOVLW       " "
0173   2???               M         CALL        WR_DATA
                      00580         CWRT_MEM_LCD num_spots
0174   084B               M         MOVFW       num_spots
0175   3E30               M         ADDLW       D'48'
0176   2???               M         CALL        WR_DATA
0177   0008           00581         RETURN
                      00582 ;******************************************************************************;
                      00583 ;                           RETREIVE START TIME                                ;
                      00584 ;******************************************************************************;
0178                  00585 GET_START_TIME
                      00586         ;Get minute             
                      00587         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0178   3001               M         movlw       0x01
0179   1283 1303          M         banksel     0x73
017B   00F3               M         movwf       0x73
017C   2???               M         call        read_rtc
017D   1283 1303          M         banksel     0x75
017F   0875               M         movf        0x75,w
0180   2???               M         call        rtc_convert   
0181   0877           00588         MOVFW       0X77
0182   00BB           00589         MOVWF       start_min10
0183   0878           00590         MOVFW       0X78
0184   00BA           00591         MOVWF       start_min
                      00592 
                      00593         ;Get seconds
                      00594         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0185   3000               M         movlw       0x00
0186   1283 1303          M         banksel     0x73
0188   00F3               M         movwf       0x73
0189   2???               M         call        read_rtc
018A   1283 1303          M         banksel     0x75
018C   0875               M         movf        0x75,w
018D   2???               M         call        rtc_convert   
018E   0877           00595         MOVFW       0X77
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

018F   00BD           00596         MOVWF       start_sec10
0190   0878           00597         MOVFW       0X78
0191   00BC           00598         MOVWF       start_sec
0192   0008           00599         RETURN
                      00600 ;******************************************************************************;
                      00601 ;                           RETREIVE STOP TIME                                 ;
                      00602 ;******************************************************************************;
0193                  00603 GET_STOP_TIME
                      00604         ;Get minute             
                      00605         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0193   3001               M         movlw       0x01
0194   1283 1303          M         banksel     0x73
0196   00F3               M         movwf       0x73
0197   2???               M         call        read_rtc
0198   1283 1303          M         banksel     0x75
019A   0875               M         movf        0x75,w
019B   2???               M         call        rtc_convert   
019C   0877           00606         MOVFW       0X77
019D   00BF           00607         MOVWF       stop_min10
019E   0878           00608         MOVFW       0X78
019F   00BE           00609         MOVWF       stop_min
                      00610 
                      00611         ;Get seconds
                      00612         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01A0   3000               M         movlw       0x00
01A1   1283 1303          M         banksel     0x73
01A3   00F3               M         movwf       0x73
01A4   2???               M         call        read_rtc
01A5   1283 1303          M         banksel     0x75
01A7   0875               M         movf        0x75,w
01A8   2???               M         call        rtc_convert   
01A9   0877           00613         MOVFW       0X77
01AA   00C1           00614         MOVWF       stop_sec10
01AB   0878           00615         MOVFW       0X78
01AC   00C0           00616         MOVWF       stop_sec
01AD   0008           00617         RETURN
                      00618 ;******************************************************************************;
                      00619 ;                       DISPLAY RTC TIME TO LCD                                ;
                      00620 ;******************************************************************************;
01AE                  00621 SHOW_RTC
                      00622         ;clear LCD screen
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01AE   3001           00623         movlw       b'00000001'
01AF   2???           00624         call        WR_INS
                      00625 
                      00626         ;Get year
                      00627         WRT_LCD     "2"
01B0   3032               M         MOVLW       "2"
01B1   2???               M         CALL        WR_DATA
                      00628         WRT_LCD     "0"
01B2   3030               M         MOVLW       "0"
01B3   2???               M         CALL        WR_DATA
                      00629         rtc_read    0x06                ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01B4   3006               M         movlw       0x06
01B5   1283 1303          M         banksel     0x73
01B7   00F3               M         movwf       0x73
01B8   2???               M         call        read_rtc
01B9   1283 1303          M         banksel     0x75
01BB   0875               M         movf        0x75,w
01BC   2???               M         call        rtc_convert   
                      00630         WRT_MEM_LCD 0x77
01BD   0877               M         MOVFW       0x77
01BE   2???               M         CALL        WR_DATA
                      00631         WRT_MEM_LCD 0x78
01BF   0878               M         MOVFW       0x78
01C0   2???               M         CALL        WR_DATA
                      00632 
                      00633         WRT_LCD     "/"
01C1   302F               M         MOVLW       "/"
01C2   2???               M         CALL        WR_DATA
                      00634 
                      00635         ;Get month
                      00636         rtc_read    0x05                ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01C3   3005               M         movlw       0x05
01C4   1283 1303          M         banksel     0x73
01C6   00F3               M         movwf       0x73
01C7   2???               M         call        read_rtc
01C8   1283 1303          M         banksel     0x75
01CA   0875               M         movf        0x75,w
01CB   2???               M         call        rtc_convert   
                      00637         WRT_MEM_LCD 0x77
01CC   0877               M         MOVFW       0x77
01CD   2???               M         CALL        WR_DATA
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00638         WRT_MEM_LCD 0x78
01CE   0878               M         MOVFW       0x78
01CF   2???               M         CALL        WR_DATA
                      00639 
                      00640         WRT_LCD     "/"
01D0   302F               M         MOVLW       "/"
01D1   2???               M         CALL        WR_DATA
                      00641 
                      00642         ;Get day
                      00643         rtc_read    0x04                ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01D2   3004               M         movlw       0x04
01D3   1283 1303          M         banksel     0x73
01D5   00F3               M         movwf       0x73
01D6   2???               M         call        read_rtc
01D7   1283 1303          M         banksel     0x75
01D9   0875               M         movf        0x75,w
01DA   2???               M         call        rtc_convert   
                      00644         WRT_MEM_LCD 0x77
01DB   0877               M         MOVFW       0x77
01DC   2???               M         CALL        WR_DATA
                      00645         WRT_MEM_LCD 0x78
01DD   0878               M         MOVFW       0x78
01DE   2???               M         CALL        WR_DATA
                      00646 
01DF   30C0           00647         movlw       B'11000000'         ;Next line displays (hour):(min):(sec) **:**:**
01E0   2???           00648         call        WR_INS
                      00649         ;Get hour
                      00650         rtc_read    0x02                ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01E1   3002               M         movlw       0x02
01E2   1283 1303          M         banksel     0x73
01E4   00F3               M         movwf       0x73
01E5   2???               M         call        read_rtc
01E6   1283 1303          M         banksel     0x75
01E8   0875               M         movf        0x75,w
01E9   2???               M         call        rtc_convert   
                      00651         WRT_MEM_LCD 0x77
01EA   0877               M         MOVFW       0x77
01EB   2???               M         CALL        WR_DATA
                      00652         WRT_MEM_LCD 0x78
01EC   0878               M         MOVFW       0x78
01ED   2???               M         CALL        WR_DATA
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00653         WRT_LCD     ":"
01EE   303A               M         MOVLW       ":"
01EF   2???               M         CALL        WR_DATA
                      00654 
                      00655         ;Get minute             
                      00656         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01F0   3001               M         movlw       0x01
01F1   1283 1303          M         banksel     0x73
01F3   00F3               M         movwf       0x73
01F4   2???               M         call        read_rtc
01F5   1283 1303          M         banksel     0x75
01F7   0875               M         movf        0x75,w
01F8   2???               M         call        rtc_convert   
                      00657         WRT_MEM_LCD 0x77
01F9   0877               M         MOVFW       0x77
01FA   2???               M         CALL        WR_DATA
                      00658         WRT_MEM_LCD 0x78
01FB   0878               M         MOVFW       0x78
01FC   2???               M         CALL        WR_DATA
                      00659         WRT_LCD     ":"
01FD   303A               M         MOVLW       ":"
01FE   2???               M         CALL        WR_DATA
                      00660 
                      00661         ;Get seconds
                      00662         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01FF   3000               M         movlw       0x00
0200   1283 1303          M         banksel     0x73
0202   00F3               M         movwf       0x73
0203   2???               M         call        read_rtc
0204   1283 1303          M         banksel     0x75
0206   0875               M         movf        0x75,w
0207   2???               M         call        rtc_convert   
                      00663         WRT_MEM_LCD 0x77
0208   0877               M         MOVFW       0x77
0209   2???               M         CALL        WR_DATA
                      00664         WRT_MEM_LCD 0x78
020A   0878               M         MOVFW       0x78
020B   2???               M         CALL        WR_DATA
                      00665 
020C   0008           00666         RETURN
                      00667 ;******************************************************************************;
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00668 ;                       INITIALIZE RTC TIME                                    ;
                      00669 ;******************************************************************************;                
020D                  00670 SET_RTC_TIME
                      00671         rtc_resetAll    ;reset rtc
                          M ;input:         none
                          M ;output:        none
                          M ;desc:          Resets all the time keeping registers on the RTC to zero
020D   1283 1303          M         banksel     0x74
020F   01F4               M         clrf        0x74
0210   1283 1303          M         banksel     0x73
0212   01F3               M         clrf        0x73
0213   2???               M         call        write_rtc           ;Write 0 to Seconds
0214   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0216   0AF3               M         incf        0x73                        ;Set register address to 1
0217   2???               M         call        write_rtc
0218   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
021A   0AF3               M         incf        0x73                        ;Set register address to 2
021B   2???               M         call        write_rtc
021C   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
021E   0AF3               M         incf        0x73                        ;Set register address to 3
021F   2???               M         call        write_rtc
0220   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0222   0AF3               M         incf        0x73                        ;Set register address to 4
0223   2???               M         call        write_rtc
0224   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0226   0AF3               M         incf        0x73                        ;Set register address to 5
0227   2???               M         call        write_rtc
0228   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
022A   0AF3               M         incf        0x73                        ;Set register address to 6
022B   2???               M         call        write_rtc
                      00672 
                      00673         rtc_set     0x00,       B'10000000'
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
022C   1283 1303          M         banksel     0x73
022E   3000               M         movlw       0x00
022F   00F3               M         movwf       0x73
0230   1283 1303          M         banksel     0x74
0232   3080               M         movlw       B'10000000'
0233   00F4               M         movwf       0x74        
0234   2???               M         call        write_rtc
                      00674 
                      00675         ;set time 
                      00676         rtc_set     0x06,       B'00010110'             ; Year
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0235   1283 1303          M         banksel     0x73
0237   3006               M         movlw       0x06
0238   00F3               M         movwf       0x73
0239   1283 1303          M         banksel     0x74
023B   3016               M         movlw       B'00010110'
023C   00F4               M         movwf       0x74        
023D   2???               M         call        write_rtc
                      00677         rtc_set     0x05,       B'00000100'             ; Month
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
023E   1283 1303          M         banksel     0x73
0240   3005               M         movlw       0x05
0241   00F3               M         movwf       0x73
0242   1283 1303          M         banksel     0x74
0244   3004               M         movlw       B'00000100'
0245   00F4               M         movwf       0x74        
0246   2???               M         call        write_rtc
                      00678         rtc_set     0x04,       B'00000110'             ; Date
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0247   1283 1303          M         banksel     0x73
0249   3004               M         movlw       0x04
024A   00F3               M         movwf       0x73
024B   1283 1303          M         banksel     0x74
024D   3006               M         movlw       B'00000110'
024E   00F4               M         movwf       0x74        
024F   2???               M         call        write_rtc
                      00679         rtc_set     0x03,       B'00000010'             ; Day
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0250   1283 1303          M         banksel     0x73
0252   3003               M         movlw       0x03
0253   00F3               M         movwf       0x73
0254   1283 1303          M         banksel     0x74
0256   3002               M         movlw       B'00000010'
0257   00F4               M         movwf       0x74        
0258   2???               M         call        write_rtc
                      00680         rtc_set     0x02,       B'00000000'             ; Hours
                          M ;input:         addliteral: value of address
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0259   1283 1303          M         banksel     0x73
025B   3002               M         movlw       0x02
025C   00F3               M         movwf       0x73
025D   1283 1303          M         banksel     0x74
025F   3000               M         movlw       B'00000000'
0260   00F4               M         movwf       0x74        
0261   2???               M         call        write_rtc
                      00681         rtc_set     0x01,       B'00000000'             ; Minutes
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0262   1283 1303          M         banksel     0x73
0264   3001               M         movlw       0x01
0265   00F3               M         movwf       0x73
0266   1283 1303          M         banksel     0x74
0268   3000               M         movlw       B'00000000'
0269   00F4               M         movwf       0x74        
026A   2???               M         call        write_rtc
                      00682         rtc_set     0x00,       B'00000000'             ; Seconds
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
026B   1283 1303          M         banksel     0x73
026D   3000               M         movlw       0x00
026E   00F3               M         movwf       0x73
026F   1283 1303          M         banksel     0x74
0271   3000               M         movlw       B'00000000'
0272   00F4               M         movwf       0x74        
0273   2???               M         call        write_rtc
0274   0008           00683         return
                      00684 
                      00685 ;******************************************************************************;                
                      00686 ;******************************************************************************;
                      00687 ;******************************************************************************;
0275                  00688 DIV16X8 ; DIV_HI and DIV_LO / DIVSOR.  result to Q
                      00689                 ; does not deal with divide by 0 case
0275   01B6           00690         CLRF Q
0276                  00691 DIV_1
0276   0835           00692         MOVF DIVISOR, W
0277   02B4           00693         SUBWF DIV_LO, F
0278   1C03           00694         BTFSS STATUS, C ; if positive skip
0279   2???           00695         GOTO BORROW
027A   2???           00696         GOTO DIV_2
027B                  00697 BORROW
027B   3001           00698         MOVLW 0x01
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

027C   02B3           00699         SUBWF DIV_HI, F ; DIV_HI = DIV_HI - 1
027D   1C03           00700         BTFSS STATUS, C ; if no borrow occurred
027E   2???           00701         GOTO DIV_DONE   
027F                  00702 DIV_2
027F   0AB6           00703         INCF Q, F
0280   2???           00704         GOTO DIV_1
0281                  00705 DIV_DONE
0281   0008           00706         RETURN
                      00707 
0282                  00708 DEL_1S
0282   3015           00709         movlw   0x15
0283   00B7           00710         movwf   d1
0284   3074           00711         movlw   0x74
0285   00B8           00712         movwf   d2
0286   3006           00713         movlw   0x06
0287   00B9           00714         movwf   d3
0288                  00715 DEL_1S_0
0288   0BB7           00716         decfsz  d1, f
0289   2???           00717         goto    $+2
028A   0BB8           00718         decfsz  d2, f
028B   2???           00719         goto    $+2
028C   0BB9           00720         decfsz  d3, f
028D   2???           00721         goto    DEL_1S_0
028E   2???           00722         goto    $+1
028F   2???           00723         goto    $+1
0290   0008           00724         return
                      00725         
0291                  00726 DEL_10MS
0291   3086           00727         movlw   0x86
0292   00B7           00728         movwf   d1
0293   3014           00729         movlw   0x14
0294   00B8           00730         movwf   d2
0295                  00731 DEL_10MS_0
0295   0BB7           00732         decfsz  d1, f
0296   2???           00733         goto    $+2
0297   0BB8           00734         decfsz  d2, f
0298   2???           00735         goto    DEL_10MS_0
0299   2???           00736         goto    $+1
029A   0000           00737         nop
029B   0008           00738         return
                      00739 
029C                  00740 DEL_2_1MS
029C   3018           00741         movlw   0x18
029D   00B7           00742         movwf   d1
029E   3005           00743         movlw   0x05
029F   00B8           00744         movwf   d2
02A0                  00745 DEL_2_1MS_0
02A0   0BB7           00746         decfsz  d1, f
02A1   2???           00747         goto    $+2
02A2   0BB8           00748         decfsz  d2, f
02A3   2???           00749         goto    DEL_2_1MS_0
02A4   2???           00750         goto    $+1
02A5   0000           00751         nop
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02A6   0008           00752         return
                      00753         
02A7                  00754 DEL_1_5MS
02A7   30EC           00755         movlw   0xEC
02A8   00B7           00756         movwf   d1
02A9   3003           00757         movlw   0x03
02AA   00B8           00758         movwf   d2
02AB                  00759 DEL_1_5MS_0
02AB   0BB7           00760         decfsz  d1, f
02AC   2???           00761         goto    $+2
02AD   0BB8           00762         decfsz  d2, f
02AE   2???           00763         goto    DEL_1_5MS_0
02AF   2???           00764         goto    $+1
02B0   0000           00765         nop
02B1   0008           00766         return
                      00767         
02B2                  00768 DEL_20US
02B2   300F           00769         movlw   0x0F
02B3   00B7           00770         movwf   d1
02B4                  00771 DEL_20US_0
02B4   0BB7           00772         decfsz  d1, f
02B5   2???           00773         goto    DEL_20US_0
02B6   0008           00774         return
                      00775 
Warning[207]: Found label after column 1. (FINISH)
02B7                  00776         FINISH  
02B7   2???           00777         GOTO    FINISH
                      00778         
3F72                  00779         END
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ARM_CLOSE                         0000007F
ARM_CTRL                          0000007A
ARM_OPEN                          00000087
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BORROW                            0000027B
BRGH                              00000002
BUZZER                            PORTD, 0
C                                 00000000
CALIBRATE                         00000037
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

CKP                               00000004
CLR_LCD                           00000000
CREN                              00000004
CSRC                              00000007
CWRT_MEM_LCD                      
D                                 00000005
DATA_ADDRESS                      00000005
DATA_LOOP                         0000011D
DC                                00000001
DEL_10MS                          00000291
DEL_10MS_0                        00000295
DEL_1S                            00000282
DEL_1S_0                          00000288
DEL_1_5MS                         000002A7
DEL_1_5MS_0                       000002AB
DEL_20US                          000002B2
DEL_20US_0                        000002B4
DEL_2_1MS                         0000029C
DEL_2_1MS_0                       000002A0
DIV16X8                           00000275
DIVISOR                           00000035
DIV_1                             00000276
DIV_2                             0000027F
DIV_DONE                          00000281
DIV_HI                            00000033
DIV_LO                            00000034
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FINAL_BACKUP                      000000DD
FINISH                            000002B7
FSR                               00000004
GCEN                              00000007
GET_START_TIME                    00000178
GET_STOP_TIME                     00000193
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

IBF                               00000007
IBOV                              00000005
INDF                              00000000
INIT                              00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
INT_HANDLER                       00000041
IRP                               00000007
InitLCD                           00000000
LCD_INS                           
L_MOTOR_SPD                       B'11111111'
MOTOR_CTRL_L                      000000C8
MOTOR_CTRL_R                      000000BA
MOTOR_DIR_CTRL                    PORTC, 5
MULT                              
MUX_CTRL_0                        PORTA, 0
MUX_CTRL_1                        PORTA, 1
MUX_CTRL_2                        PORTA, 2
MUX_CTRL_3                        PORTA, 3
MUX_IN                            PORTC, 0
MX_LOOP                           0000004E
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NO_SPOT                           00000070
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
Q                                 00000036
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_IRS                          0000004C
READ_WRITE                        00000002
RETURN_HOME                       000000D4
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_MOTOR_SPD                       B'11111111'
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SCAN                              0000003F
SEN                               00000000
SERVO_CTRL                        PORTA, 5
SET_RTC_TIME                      0000020D
SHOW_RTC                          000001AE
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
START_MSG                         00000124
START_STDBY                       0000002C
STATUS                            00000003
STOP_DATA                         000000ED
STOP_STDBY                        000000E2
STOP_STDBY_MSG                    00000141
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
USHOLDL                           00000096
USHOLDS                           000000AB
USONIC_LAT                        000000A5
USONIC_LAT_ECHO                   000000A8
USONIC_SUP                        00000090
USONIC_SUP_ECHO                   00000093
US_LAT_ECHO                       PORTC, 7
US_LAT_TRIG                       PORTC, 6
US_SUP_ECHO                       PORTB, 4
US_SUP_TRIG                       PORTB, 3
W                                 00000000
WCOL                              00000007
WHL_ENC                           00000074
WR                                00000001
WREN                              00000002
WRERR                             00000003
WRT_DATA                          0000015E
WRT_LCD                           
WRT_MEM_LCD                       
WR_DATA                           00000000
WR_INS                            00000000
Z                                 00000002
_.org_1_0032                      00000032
_.org_1_0094                      00000094
_.org_1_00A9                      000000A9
_.org_1_00E8                      000000E8
_.org_1_0289                      00000289
_.org_1_028B                      0000028B
_.org_1_028E                      0000028E
_.org_1_028F                      0000028F
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

_.org_1_0296                      00000296
_.org_1_0299                      00000299
_.org_1_02A1                      000002A1
_.org_1_02A4                      000002A4
_.org_1_02AC                      000002AC
_.org_1_02AF                      000002AF
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
crit_dist                         0X08
d1                                00000037
d2                                00000038
d3                                00000039
i2c_common_setup                  00000000
long_del                          00000030
measured_distance_lat             00000047
measured_distance_sup             00000048
MPASM 5.65                          MAIN.ASM   3-21-2016  22:50:01         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

multiplex_count                   00000043
num_spots                         0000004B
read_rtc                          00000000
rob_lat_distance                  00000044
rob_long_distance                 00000046
rob_long_distance_count           00000045
rob_return                        00000049
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
spot_base_loc                     0000004C
spot_count                        0000004A
spot_detected                     00000042
start_min                         0000003A
start_min10                       0000003B
start_sec                         0000003C
start_sec10                       0000003D
stop_min                          0000003E
stop_min10                        0000003F
stop_sec                          00000040
stop_sec10                        00000041
temp_status                       00000032
temp_w                            00000031
write_rtc                         00000000

Errors   :     0
Warnings :     2 reported,     0 suppressed
Messages :    19 reported,     0 suppressed

