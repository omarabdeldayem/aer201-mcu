MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;******************************************************************************;
                      00002 ;        ____    ___  ______    ___  ____       ____  ____  ____    ___  ____  ;
                      00003 ;       |    \  /  _]|      T  /  _]|    \     |    \l    j|    \  /  _]|    \ ;
                      00004 ;       |  o  )/  [_ |      | /  [_ |  D  )    |  o  )|  T |  o  )/  [_ |  D  );
                      00005 ;       |   _/Y    _]l_j  l_jY    _]|    /     |   _/ |  | |   _/Y    _]|    / ;
                      00006 ;       |  |  |   [_   |  |  |   [_ |    \     |  |   |  | |  |  |   [_ |    \ ;
                      00007 ;       |  |  |     T  |  |  |     T|  .  Y    |  |   j  l |  |  |     T|  .  Y;
                      00008 ;       l__j  l_____j  l__j  l_____jl__j\_j    l__j  |____jl__j  l_____jl__j\_j;
                      00009 ;------------------------------------------------------------------------------;
                      00010 ;               AER201 Team 61 'Peter Piper' Pipe Inspector                    ;
                      00011 ;                        Author: Omar Abdeldayem                               ;
                      00012 ;                           Created: 1/12/2016                                 ;
                      00013 ;------------------------------------------------------------------------------;
                      00014 ; DESCRIPTION:                                                                                          
                                                               ;
                      00015 ; It does shit, yo.                                                                                     
                                                               ;
                      00016 ;******************************************************************************;
                      00017 ;******************************************************************************;
                      00018 ;******************************************************************************;
                      00019 
                      00020         List    p=16f877                    ; list directive to define processor
                      00021         #include        <p16f877.inc>       ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
2007   3F72           00022         __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP
                            _OFF
                      00023 
                      00024         #include        <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel     0x74
                      00011         clrf        0x74
                      00012         banksel     0x73
                      00013         clrf        0x73
                      00014         call        write_rtc           ;Write 0 to Seconds
                      00015         banksel     0x73
                      00016         incf        0x73                        ;Set register address to 1
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00017         call        write_rtc
                      00018         banksel     0x73
                      00019         incf        0x73                        ;Set register address to 2
                      00020         call        write_rtc
                      00021         banksel     0x73
                      00022         incf        0x73                        ;Set register address to 3
                      00023         call        write_rtc
                      00024         banksel     0x73
                      00025         incf        0x73                        ;Set register address to 4
                      00026         call        write_rtc
                      00027         banksel     0x73
                      00028         incf        0x73                        ;Set register address to 5
                      00029         call        write_rtc
                      00030         banksel     0x73
                      00031         incf        0x73                        ;Set register address to 6
                      00032         call        write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set macro       addliteral, datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel     0x73
                      00042         movlw       addliteral
                      00043         movwf       0x73
                      00044         banksel     0x74
                      00045         movlw       datliteral
                      00046         movwf       0x74        
                      00047         call        write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read macro      addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw       addliteral
                      00058         banksel     0x73
                      00059         movwf       0x73
                      00060         call        read_rtc
                      00061         banksel     0x75
                      00062         movf        0x75,w
                      00063         call        rtc_convert   
                      00064         endm
                      00025         #include        <lcd.inc>
  0000                00001     extern      InitLCD,WR_INS,WR_DATA,CLR_LCD
                      00026 ;******************************************************************************;
                      00027 ;                               BANK0 RAM                                      ;
                      00028 ;******************************************************************************;
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00029         CBLOCK      0x30
  00000030            00030         long_del    ; 0x30
  00000031            00031         temp_w      ; 0x31
  00000032            00032         temp_status ; 0x32
                      00033                     ; DIVISION Registers
  00000033            00034         DIV_HI      ; 0X33
  00000034            00035         DIV_LO      ; 0X34
  00000035            00036         DIVISOR     ; 0X35
  00000036            00037         Q           ; 0X36
  00000037            00038         d1
  00000038            00039         d2
  00000039            00040         d3          ; 0X39
                      00041                     ; ROBOT VARS
  0000003A            00042         start_min   ; 0X3A
  0000003B            00043         start_min10 ; 0X3B
  0000003C            00044         start_sec
  0000003D            00045         start_sec10
  0000003E            00046         stop_min
  0000003F            00047         stop_min10
  00000040            00048         stop_sec    ; 0X40
  00000041            00049         stop_sec10  ; 0x41
  00000042            00050         spot_detected
  00000043            00051         multiplex_count
  00000044            00052         rob_lat_distance
  00000045            00053         rob_long_distance_count
  00000046            00054         rob_long_distance
  00000047            00055         measured_distance_lat
  00000048            00056         measured_distance_sup
  00000049            00057         rob_return
  0000004A            00058         spot_count  ; 0X4A
  0000004B            00059         num_spots
  0000004C            00060         spot_base_loc
                      00061         ENDC
                      00062 
                      00063 ;******************************************************************************;
                      00064 ;                               EQUATES                                        ;
                      00065 ;******************************************************************************;
                      00066         #define     crit_dist           0X08
                      00067         #define     crit_dist_r         0x02
                      00068         #define     crit_dist_l         0x05
                      00069         #define     MUX_CTRL_0          PORTA, 0
                      00070         #define     MUX_CTRL_1          PORTA, 1
                      00071         #define     MUX_CTRL_2          PORTA, 2
                      00072         #define     MUX_CTRL_3          PORTA, 3
                      00073         #define     SERVO_CTRL          PORTA, 5
                      00074         #define     US_SUP_TRIG         PORTD, 1
                      00075         #define     US_SUP_ECHO         PORTD, 2
                      00076         #define     MUX_IN              PORTC, 0
                      00077         #define     MOTOR_DIR_CTRL      PORTC, 5
                      00078         #define     US_LAT_TRIG         PORTD, 0
                      00079         #define     US_LAT_ECHO         PORTD, 1
                      00080         #define     BUZZER              PORTC, 7
                      00081         #define     L_MOTOR_SPD         B'11111111'
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00082         #define     R_MOTOR_SPD         B'11111111'
                      00083 ;******************************************************************************;
                      00084 ;                               MACROS                                         ;
                      00085 ;******************************************************************************;
                      00086 MULT    macro       val1, val2, result
                      00087         MOVF        val1, W
                      00088         ADDWF       val1, W
                      00089         MOVWF       result
                      00090         DECFSZ      val2, f
                      00091         GOTO        $-3
                      00092         endm
                      00093         
                      00094 WRT_LCD macro       val
                      00095         MOVLW       val
                      00096         CALL        WR_DATA
                      00097         endm
                      00098 LCD_INS macro       val
                      00099         MOVLW       val
                      00100         CALL        WR_INS
                      00101         endm
                      00102         
                      00103 WRT_MEM_LCD macro   val
                      00104         MOVFW       val
                      00105         CALL        WR_DATA
                      00106         endm
                      00107 
                      00108 CWRT_MEM_LCD macro   val
                      00109         MOVFW       val
                      00110         ADDLW       D'48'
                      00111         CALL        WR_DATA
                      00112         endm
                      00113 ;******************************************************************************;
                      00114 ;                          VECTOR TABLE                                        ;
                      00115 ;******************************************************************************;
                      00116         ORG         0x0000              ; RESET vector must always be at 0x00
0000   2???           00117         GOTO        INIT                ; Just jump to the main code section.
                      00118         ORG         0x0004
0004   2???           00119         GOTO        INT_HANDLER
                      00120 
                      00121 ;******************************************************************************;
                      00122 ;                         ROBOT INITIALIZATION                                 ;
                      00123 ;******************************************************************************;
0005                  00124 INIT
0005   1683           00125         BSF         STATUS, RP0         ; Select bank 1
0006   018B           00126         CLRF        INTCON              ; Disable interrupts for now
                      00127         
0007   3006           00128         MOVLW       0x06                ; Turn PORT A to digital
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0008   009F           00129         MOVWF       ADCON1
                      00130         
0009   3010           00131         MOVLW       b'00010000'         ; PORT A pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000A   0085           00132         MOVWF       TRISA
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B   30F3           00133         MOVLW       b'11110011'         ; PORT B pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000C   0086           00134         MOVWF       TRISB
000D   3099           00135         MOVLW       b'10011001'         ; PORT C pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000E   0087           00136         MOVWF       TRISC
000F   3002           00137         MOVLW       B'00000010'         ; PORT D pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0010   0088           00138         MOVWF       TRISD               
0011   3001           00139         MOVLW       b'00000001'         ; PORT E pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0012   0089           00140         MOVWF       TRISE
                      00141         
0013   30FF           00142         MOVLW       B'11111111'         ; PWM pulsing period (484Hz)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0014   0092           00143         MOVWF       PR2
                      00144        
0015   1283           00145         BCF         STATUS, RP0         ; select bank 0
0016   0185           00146         CLRF        PORTA
0017   0186           00147         CLRF        PORTB
0018   0187           00148         CLRF        PORTC
0019   0188           00149         CLRF        PORTD
001A   30FF           00150         MOVLW       L_MOTOR_SPD         ; 100% DUTY CYCLE
001B   0095           00151         MOVWF       CCPR1L              
001C   30FF           00152         MOVLW       R_MOTOR_SPD         ; '01100100' 100% DUTY CYCLE
001D   009B           00153         MOVWF       CCPR2L
001E   30FF           00154         MOVLW       B'11111111'
001F   0097           00155         MOVWF       CCP1CON
0020   30FF           00156         MOVLW       B'11111111'
0021   009D           00157         MOVWF       CCP2CON
                      00158         
0022   3005           00159         MOVLW       B'00000101'         ; Initialize and hold timer 2
0023   0092           00160         MOVWF       T2CON
0024   0191           00161         CLRF        TMR2
0025   1112           00162         BCF         T2CON, TMR2ON
                      00163         
0026   3010           00164         MOVLW       0X10                ; TMR1 for Ultrasonic Sensors
0027   0090           00165         MOVWF       T1CON
0028   018F           00166         CLRF        TMR1H
0029   018E           00167         CLRF        TMR1L
                      00168         
                      00169         ;CALL       i2c_common_setup
002A   2???           00170         CALL        InitLCD
                      00171         
002B   01CB           00172         CLRF        num_spots
002C   01CA           00173         CLRF        spot_count
002D   01C2           00174         CLRF        spot_detected
002E   01C7           00175         CLRF        measured_distance_lat
002F   01C8           00176         CLRF        measured_distance_sup
                      00177                                                 
0030   2???           00178         CALL        START_MSG
                      00179 ;******************************************************************************;
                      00180 ;                        ROBOT START AND STANDBY                               ;
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00181 ;******************************************************************************;
0031                  00182 START_STDBY
0031   1C86           00183         BTFSS       PORTB, 1            ; Wait until data is available from the keypad
0032   2???           00184         GOTO        START_STDBY
                      00185 
0033   0E06           00186         SWAPF       PORTB, W            ; Read PortB<7:4> into W<3:0>
0034   390F           00187         ANDLW       0x0F
0035   2???           00188         CALL        CLR_LCD
                      00189 
0036   1886           00190         BTFSC       PORTB,1             ; Wait until key is released
0037   2???           00191         GOTO        $-1
                      00192         
0038   2???           00193         CALL        CLR_LCD
0039   1787           00194         BSF         BUZZER
003A   2???           00195         CALL        DEL_1S
003B   1387           00196         BCF         BUZZER
003C   1287           00197         BCF         MOTOR_DIR_CTRL
003D   1512           00198         BSF         T2CON, TMR2ON
                      00199         ;CALL       SET_RTC_TIME
                      00200         ;CALL       GET_START_TIME
003E   2???           00201         GOTO        CALIBRATE
                      00202 
                      00203 ;******************************************************************************;
                      00204 ;                           SENSOR CALIBRATION                                 ;
                      00205 ;******************************************************************************;
003F                  00206 CALIBRATE
                      00207 ;       CALL        USONIC_LAT
                      00208 ;       CALL        ARM_CTRL
003F   2???           00209         CALL        DEL_10MS
0040   2???           00210         CALL        DEL_10MS
0041   2???           00211         CALL        DEL_10MS
0042   2???           00212         CALL        DEL_10MS
0043   2???           00213         CALL        USONIC_LAT
0044   3008           00214         MOVLW       crit_dist
0045   0247           00215         SUBWF       measured_distance_lat, W
0046   1803           00216         BTFSC       STATUS, 0
0047   2???           00217         GOTO        CALIBRATE
0048   1787           00218         BSF         BUZZER
0049   2???           00219         CALL        DEL_1S
004A   2???           00220         CALL        DEL_1S
004B   158B           00221         BSF         INTCON, RBIE            ; Enable interrupts
004C   160B           00222         BSF         INTCON, INTE
004D   178B           00223         BSF         INTCON, GIE
004E   1387           00224         BCF         BUZZER
004F   304C           00225         MOVLW       spot_base_loc
0050   0084           00226         MOVWF       FSR
0051   2???           00227         GOTO        SCAN
                      00228         
                      00229 ;******************************************************************************;
                      00230 ;                         PIPE SCAN SUPERLOOP                                  ;
                      00231 ;******************************************************************************;
0052                  00232 SCAN
                      00233 ;       CALL        USONIC_SUP
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00234 ;       CALL        ARM_CTRL
                      00235 ;       CALL        USONIC_LAT
                      00236 ;       CALL        MOTOR_CTRL_R
                      00237 ;       CALL        MOTOR_CTRL_L
                      00238 ;       MOVLW       crit_dist
                      00239 ;       SUBWF       measured_distance_lat, W
                      00240 ;       BTFSC       STATUS, 0
                      00241 ;       GOTO        RETURN_HOME
                      00242 ;       CALL        SHOW_RTC                ; DEBUG
0052   2???           00243         CALL        READ_IRS
0053   2???           00244         GOTO        SCAN
                      00245 
                      00246 ;******************************************************************************;
                      00247 ;                           RETURN HOME ROUTINE                                ;
                      00248 ;******************************************************************************;
0054                  00249 RETURN_HOME
0054   018B           00250         CLRF        INTCON
0055   1687           00251         BSF         MOTOR_DIR_CTRL
0056   2???           00252         CALL        ARM_OPEN
0057   2???           00253         CALL        USONIC_LAT
0058   3008           00254         MOVLW       crit_dist
0059   0247           00255         SUBWF       measured_distance_lat, W
005A   1803           00256         BTFSC       STATUS, 0
005B   2???           00257         GOTO        RETURN_HOME
005C   2???           00258         GOTO        FINAL_BACKUP
                      00259 
005D                  00260 FINAL_BACKUP
005D   2???           00261         CALL        DEL_1S
005E   2???           00262         CALL        DEL_1S
005F   2???           00263         CALL        DEL_1S
0060   2???           00264         GOTO        STOP_STDBY
                      00265         
                      00266 ;******************************************************************************;
                      00267 ;                             STOP STANDBY                                     ;
                      00268 ;******************************************************************************;
0061                  00269 STOP_STDBY
0061   1112           00270         BCF         T2CON, TMR2ON       ; Turn off motors
0062   0197           00271         CLRF        CCP1CON
0063   019D           00272         CLRF        CCP2CON
                      00273 
                      00274         ;CALL       GET_STOP_TIME       ; Get stop time
0064   2???           00275         CALL        STOP_STDBY_MSG      ; Display standby message
0065   1C86           00276         BTFSS       PORTB, 1            ; Wait until data is available from the keypad
0066   2???           00277         GOTO        $-1
0067   0E06           00278         SWAPF       PORTB, W            ; Read PortB<7:4> into W<3:0>
0068   390F           00279         ANDLW       0x0F 
0069   2???           00280         CALL        CLR_LCD
006A   2???           00281         GOTO        STOP_DATA           ; Display run data
                      00282 
                      00283 ;******************************************************************************;
                      00284 ;                          INTERRUPT HANDLER                                   ;
                      00285 ;******************************************************************************;
006B                  00286 INT_HANDLER
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

006B   00B1           00287         MOVWF       temp_w
006C   0E03           00288         SWAPF       STATUS, W
006D   00B2           00289         MOVWF       temp_status
006E   100B           00290         BCF         INTCON, RBIF
006F   108B           00291         BCF         INTCON, INTF          ; Clear the interrupt flag
                      00292         
0070   2???           00293         CALL        WHL_ENC
                      00294         
0071   0E32           00295         SWAPF       temp_status, W
0072   0083           00296         MOVWF       STATUS
0073   0EB1           00297         SWAPF       temp_w, F
0074   0E31           00298         SWAPF       temp_w, W
0075   0009           00299         RETFIE
                      00300 
                      00301 ;******************************************************************************;
                      00302 ;                       CYCLE INFRARED SENSORS                                 ;
                      00303 ;******************************************************************************;
0076                  00304 READ_IRS
0076   3010           00305         MOVLW       d'16'
0077   00C3           00306         MOVWF       multiplex_count
0078                  00307 MX_LOOP 
Message[305]: Using default destination of 1 (file).
0078   03C3           00308         DECF        multiplex_count
0079   1005           00309         BCF         MUX_CTRL_0
007A   1843           00310         BTFSC       multiplex_count, 0
007B   1405           00311         BSF         MUX_CTRL_0
007C   1085           00312         BCF         MUX_CTRL_1
007D   18C3           00313         BTFSC       multiplex_count, 1
007E   1485           00314         BSF         MUX_CTRL_1
007F   1105           00315         BCF         MUX_CTRL_2
0080   1943           00316         BTFSC       multiplex_count, 2
0081   1505           00317         BSF         MUX_CTRL_2
0082   1185           00318         BCF         MUX_CTRL_3
0083   19C3           00319         BTFSC       multiplex_count, 3
0084   1585           00320         BSF         MUX_CTRL_3
                      00321         
0085   2???           00322         CALL        DEL_10MS
0086   2???           00323         CALL        DEL_10MS
0087   2???           00324         CALL        DEL_10MS
0088   2???           00325         CALL        DEL_10MS
0089   2???           00326         CALL        DEL_10MS
008A   2???           00327         CALL        DEL_10MS
008B   2???           00328         CALL        DEL_10MS
008C   2???           00329         CALL        DEL_10MS
008D   2???           00330         CALL        DEL_10MS
008E   2???           00331         CALL        DEL_10MS
                      00332         
008F   1807           00333         BTFSC       MUX_IN
0090   2???           00334         GOTO        NO_SPOT 
0091   1787           00335         BSF         BUZZER                              ; Buzzer start
0092   2???           00336         CALL        DEL_1S
0093   0846           00337         MOVFW       rob_long_distance                   ; Save spot location
0094   0080           00338         MOVWF       INDF
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0095   0ACB           00339         INCF        num_spots, f                        ; Increase number of spots
0096   0A84           00340         INCF        FSR, F
0097   1387           00341         BCF         BUZZER                              ; Buzzer stop
Message[305]: Using default destination of 1 (file).
0098   0AC3           00342 NO_SPOT INCF        multiplex_count
Message[305]: Using default destination of 1 (file).
0099   0BC3           00343         DECFSZ      multiplex_count
009A   2???           00344         GOTO        MX_LOOP
009B   0008           00345         RETURN
                      00346         
                      00347 ;******************************************************************************;
                      00348 ;                         WHEEL ENCODER ROUTINE                                ;
                      00349 ;******************************************************************************;
009C                  00350 WHL_ENC
Message[305]: Using default destination of 1 (file).
009C   0AC5           00351         INCF        rob_long_distance_count ; Increment number of changes
009D   3006           00352         MOVLW       0x06                    ; Every six changes is approx 1in
009E   02C5           00353         SUBWF       rob_long_distance_count, F
009F   1803           00354         BTFSC       STATUS, 0
Message[305]: Using default destination of 1 (file).
00A0   0AC6           00355         INCF        rob_long_distance       ; One inch was covered
00A1   01C5           00356         CLRF        rob_long_distance_count
00A2   0008           00357         RETURN
                      00358         
                      00359 ;******************************************************************************;
                      00360 ;                       TOGGLE ARM STATE SUBROUTINES                           ;
                      00361 ;******************************************************************************;
00A3                  00362 ARM_CTRL
00A3   3008           00363         MOVLW       crit_dist
00A4   0248           00364         SUBWF       measured_distance_sup, W
00A5   1803           00365         BTFSC       STATUS, 0               ; C==0 if measured_distance_sup < crit_dist
00A6   2???           00366         GOTO        ARM_CLOSE
00A7   2???           00367         GOTO        ARM_OPEN
00A8                  00368 ARM_CLOSE                                   ; Close arm for full scan
00A8   1685           00369         BSF         SERVO_CTRL
00A9   2???           00370         CALL        DEL_1_5MS
00AA   1285           00371         BCF         SERVO_CTRL
00AB   2???           00372         CALL        DEL_10MS
00AC   2???           00373         CALL        DEL_10MS
00AD   2???           00374         CALL        DEL_10MS
00AE   2???           00375         CALL        DEL_10MS
00AF   0008           00376         RETURN      
                      00377         
00B0                  00378 ARM_OPEN                                    ; Open arm to clear support
00B0   1685           00379         BSF         SERVO_CTRL
00B1   2???           00380         CALL        DEL_2_1MS
00B2   2???           00381         CALL        DEL_2_1MS
00B3   1285           00382         BCF         SERVO_CTRL
00B4   2???           00383         CALL        DEL_10MS
00B5   2???           00384         CALL        DEL_10MS
00B6   2???           00385         CALL        DEL_10MS
00B7   2???           00386         CALL        DEL_10MS
00B8   0008           00387         RETURN
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00388 ;******************************************************************************;
                      00389 ;                     ULTRASONIC SENSOR SUBROUTINES                            ;
                      00390 ;******************************************************************************;
00B9                  00391 USONIC_SUP
00B9   1488           00392         BSF         US_SUP_TRIG
00BA   2???           00393         CALL        DEL_20US
00BB   1088           00394         BCF         US_SUP_TRIG
00BC                  00395 USONIC_SUP_ECHO
00BC   1D08           00396         BTFSS       US_SUP_ECHO
00BD   2???           00397         GOTO        $-1
00BE   1410           00398         BSF         T1CON, 0
00BF   1908           00399 USHOLDS BTFSC       US_SUP_ECHO
00C0   2???           00400         GOTO        USHOLDS
00C1   1010           00401         BCF         T1CON, 0
00C2   080F           00402         MOVF        TMR1H, W
00C3   00B3           00403         MOVWF       DIV_HI
00C4   080E           00404         MOVF        TMR1L, W
00C5   00B4           00405         MOVWF       DIV_LO
00C6   018F           00406         CLRF        TMR1H
00C7   018E           00407         CLRF        TMR1L
00C8   303A           00408         MOVLW       d'58'
00C9   00B5           00409         MOVWF       DIVISOR
00CA   2???           00410         CALL        DIV16X8
00CB   0836           00411         MOVF        Q, W
00CC   00C8           00412         MOVWF       measured_distance_sup
00CD   0008           00413         RETURN
                      00414 
00CE                  00415 USONIC_LAT
00CE   1408           00416         BSF         US_LAT_TRIG
00CF   2???           00417         CALL        DEL_20US
00D0   1008           00418         BCF         US_LAT_TRIG
00D1                  00419 USONIC_LAT_ECHO
00D1   1C88           00420         BTFSS       US_LAT_ECHO
00D2   2???           00421         GOTO        $-1
00D3   1410           00422         BSF         T1CON, 0
00D4   1888           00423 USHOLDL BTFSC       US_LAT_ECHO
00D5   2???           00424         GOTO        USHOLDL
00D6   1010           00425         BCF         T1CON, 0
00D7   080F           00426         MOVF        TMR1H, W
00D8   00B3           00427         MOVWF       DIV_HI
00D9   080E           00428         MOVF        TMR1L, W
00DA   00B4           00429         MOVWF       DIV_LO
00DB   018F           00430         CLRF        TMR1H
00DC   018E           00431         CLRF        TMR1L
00DD   303A           00432         MOVLW       d'58'
00DE   00B5           00433         MOVWF       DIVISOR
00DF   2???           00434         CALL        DIV16X8
00E0   0836           00435         MOVF        Q, W
00E1   00C7           00436         MOVWF       measured_distance_lat
                      00437         ;CALL       rtc_convert
                      00438         ;CALL       CLR_LCD             ; DEBUG!
                      00439 ;       WRT_MEM_LCD 0x77
                      00440 ;       WRT_MEM_LCD 0x78
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00E2   0008           00441         RETURN
                      00442         
                      00443 ;******************************************************************************;
                      00444 ;                              ACTIVE CONTROL                                  ;
                      00445 ;******************************************************************************;
00E3                  00446 MOTOR_CTRL_R                                ; Turn right - robot is too far
00E3   3005           00447         MOVLW       crit_dist_l
00E4   0247           00448         SUBWF       measured_distance_lat, W
00E5   1C03           00449         BTFSS       STATUS, 0               ; C==0 if measured_distance_lat >= crit_dist
00E6   0008           00450         RETURN
00E7   1787           00451         BSF         BUZZER
00E8   0195           00452         CLRF        CCPR1L
00E9   0197           00453         CLRF        CCP1CON
00EA   2???           00454         CALL        DEL_10MS
00EB   2???           00455         CALL        DEL_10MS
00EC   2???           00456         CALL        DEL_10MS
00ED   2???           00457         CALL        DEL_10MS
00EE   2???           00458         CALL        DEL_10MS
00EF   2???           00459         CALL        DEL_10MS
00F0   30FF           00460         MOVLW       R_MOTOR_SPD
00F1   0095           00461         MOVWF       CCPR1L
00F2   1387           00462         BCF         BUZZER
00F3   0008           00463         RETURN
                      00464 
00F4                  00465 MOTOR_CTRL_L                                ; Turn left - robot is too close
00F4   3002           00466         MOVLW       crit_dist_r
00F5   0247           00467         SUBWF       measured_distance_lat, W
00F6   1803           00468         BTFSC       STATUS, 0
00F7   0008           00469         RETURN
00F8   019B           00470         CLRF        CCPR2L
00F9   019D           00471         CLRF        CCP2CON
00FA   2???           00472         CALL        DEL_10MS
00FB   2???           00473         CALL        DEL_10MS
00FC   2???           00474         CALL        DEL_10MS
00FD   2???           00475         CALL        DEL_10MS
00FE   2???           00476         CALL        DEL_10MS
00FF   2???           00477         CALL        DEL_10MS
0100   30FF           00478         MOVLW       R_MOTOR_SPD
0101   009B           00479         MOVWF       CCPR2L
0102   0008           00480         RETURN
                      00481         
                      00482 ;******************************************************************************;
                      00483 ;                               DISPLAY DATA                                   ;
                      00484 ;******************************************************************************;
0103                  00485 STOP_DATA
                      00486         WRT_LCD     "T"
0103   3054               M         MOVLW       "T"
0104   2???               M         CALL        WR_DATA
                      00487         WRT_LCD     "I"
0105   3049               M         MOVLW       "I"
0106   2???               M         CALL        WR_DATA
                      00488         WRT_LCD     "M"
0107   304D               M         MOVLW       "M"
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0108   2???               M         CALL        WR_DATA
                      00489         WRT_LCD     "E"
0109   3045               M         MOVLW       "E"
010A   2???               M         CALL        WR_DATA
                      00490         WRT_LCD     ":"
010B   303A               M         MOVLW       ":"
010C   2???               M         CALL        WR_DATA
                      00491         WRT_LCD     " "
010D   3020               M         MOVLW       " "
010E   2???               M         CALL        WR_DATA
                      00492         ;Get minute             
                      00493 ;       rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                      00494         ;WRT_MEM_LCD 0x77
                      00495 ;       .WRT_MEM_LCD 0x78
                      00496 ;       WRT_LCD     ":"
                      00497 
                      00498         ;Get seconds
                      00499         ;rtc_read    0x00               ;Read Address 0x00 from DS1307---seconds
                      00500 ;       WRT_MEM_LCD 0x77
                      00501 ;       WRT_MEM_LCD 0x78
                      00502 
010F   30C0           00503         movlw       B'11000000'         ;Next line displays (min):(sec) **:**
0110   2???           00504         call        WR_INS
0111   2???           00505         CALL        WRT_DATA
0112   2???           00506         CALL        DEL_1S
0113   2???           00507         CALL        DEL_1S
0114   2???           00508         CALL        CLR_LCD
                      00509         
0115   304C           00510         MOVLW       spot_base_loc
0116   0084           00511         MOVWF       FSR
                      00512         
0117                  00513 DATA_LOOP       
                      00514         WRT_LCD     "S"
0117   3053               M         MOVLW       "S"
0118   2???               M         CALL        WR_DATA
                      00515         WRT_LCD     "P"
0119   3050               M         MOVLW       "P"
011A   2???               M         CALL        WR_DATA
                      00516         WRT_LCD     "O"
011B   304F               M         MOVLW       "O"
011C   2???               M         CALL        WR_DATA
                      00517         WRT_LCD     "T"
011D   3054               M         MOVLW       "T"
011E   2???               M         CALL        WR_DATA
                      00518         WRT_LCD     ":"
011F   303A               M         MOVLW       ":"
0120   2???               M         CALL        WR_DATA
                      00519         WRT_LCD     " "
0121   3020               M         MOVLW       " "
0122   2???               M         CALL        WR_DATA
                      00520         WRT_MEM_LCD INDF
0123   0800               M         MOVFW       INDF
0124   2???               M         CALL        WR_DATA
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00521         WRT_LCD     "c"
0125   3063               M         MOVLW       "c"
0126   2???               M         CALL        WR_DATA
                      00522         WRT_LCD     "m"
0127   306D               M         MOVLW       "m"
0128   2???               M         CALL        WR_DATA
                      00523         
0129   2???           00524         CALL        DEL_1S
                      00525         
012A   2???           00526         CALL        CLR_LCD
012B   0A84           00527         INCF        FSR, F
                      00528 
012C   0BCA           00529         DECFSZ      spot_count, F
012D   2???           00530         GOTO        DATA_LOOP
                      00531         
                      00532         WRT_LCD     "E"
012E   3045               M         MOVLW       "E"
012F   2???               M         CALL        WR_DATA
                      00533         WRT_LCD     "N"
0130   304E               M         MOVLW       "N"
0131   2???               M         CALL        WR_DATA
                      00534         WRT_LCD     "D"
0132   3044               M         MOVLW       "D"
0133   2???               M         CALL        WR_DATA
                      00535 
0134   2???           00536         GOTO        FINISH
                      00537 
                      00538 ;******************************************************************************;
                      00539 ;                                  HELLO                                       ;
                      00540 ;******************************************************************************;
0135                  00541 START_MSG
                      00542         WRT_LCD     "H"
0135   3048               M         MOVLW       "H"
0136   2???               M         CALL        WR_DATA
                      00543         WRT_LCD     "I"
0137   3049               M         MOVLW       "I"
0138   2???               M         CALL        WR_DATA
                      00544         WRT_LCD     "T"
0139   3054               M         MOVLW       "T"
013A   2???               M         CALL        WR_DATA
                      00545         WRT_LCD     " "
013B   3020               M         MOVLW       " "
013C   2???               M         CALL        WR_DATA
                      00546         WRT_LCD     "*"
013D   302A               M         MOVLW       "*"
013E   2???               M         CALL        WR_DATA
                      00547         WRT_LCD     " "
013F   3020               M         MOVLW       " "
0140   2???               M         CALL        WR_DATA
                      00548         WRT_LCD     "T"
0141   3054               M         MOVLW       "T"
0142   2???               M         CALL        WR_DATA
                      00549         WRT_LCD     "O"
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0143   304F               M         MOVLW       "O"
0144   2???               M         CALL        WR_DATA
                      00550         WRT_LCD     " "
0145   3020               M         MOVLW       " "
0146   2???               M         CALL        WR_DATA
                      00551         WRT_LCD     "S"
0147   3053               M         MOVLW       "S"
0148   2???               M         CALL        WR_DATA
                      00552         WRT_LCD     "T"
0149   3054               M         MOVLW       "T"
014A   2???               M         CALL        WR_DATA
                      00553         WRT_LCD     "A"
014B   3041               M         MOVLW       "A"
014C   2???               M         CALL        WR_DATA
                      00554         WRT_LCD     "R"
014D   3052               M         MOVLW       "R"
014E   2???               M         CALL        WR_DATA
                      00555         WRT_LCD     "T"
014F   3054               M         MOVLW       "T"
0150   2???               M         CALL        WR_DATA
0151   0008           00556         RETURN
                      00557         
                      00558 ;******************************************************************************;
                      00559 ;                                GOODBYE                                       ;
                      00560 ;******************************************************************************;
0152                  00561 STOP_STDBY_MSG
                      00562         WRT_LCD     "H"
0152   3048               M         MOVLW       "H"
0153   2???               M         CALL        WR_DATA
                      00563         WRT_LCD     "I"
0154   3049               M         MOVLW       "I"
0155   2???               M         CALL        WR_DATA
                      00564         WRT_LCD     "T"
0156   3054               M         MOVLW       "T"
0157   2???               M         CALL        WR_DATA
                      00565         WRT_LCD     " "
0158   3020               M         MOVLW       " "
0159   2???               M         CALL        WR_DATA
                      00566         WRT_LCD     "*"
015A   302A               M         MOVLW       "*"
015B   2???               M         CALL        WR_DATA
                      00567         WRT_LCD     " "
015C   3020               M         MOVLW       " "
015D   2???               M         CALL        WR_DATA
                      00568         WRT_LCD     "F"
015E   3046               M         MOVLW       "F"
015F   2???               M         CALL        WR_DATA
                      00569         WRT_LCD     "O"
0160   304F               M         MOVLW       "O"
0161   2???               M         CALL        WR_DATA
                      00570         WRT_LCD     "R"
0162   3052               M         MOVLW       "R"
0163   2???               M         CALL        WR_DATA
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00571         WRT_LCD     " "
0164   3020               M         MOVLW       " "
0165   2???               M         CALL        WR_DATA
                      00572         WRT_LCD     "D"
0166   3044               M         MOVLW       "D"
0167   2???               M         CALL        WR_DATA
                      00573         WRT_LCD     "A"
0168   3041               M         MOVLW       "A"
0169   2???               M         CALL        WR_DATA
                      00574         WRT_LCD     "T"
016A   3054               M         MOVLW       "T"
016B   2???               M         CALL        WR_DATA
                      00575         WRT_LCD     "A"
016C   3041               M         MOVLW       "A"
016D   2???               M         CALL        WR_DATA
016E   0008           00576         RETURN
                      00577          
                      00578 ;******************************************************************************;
                      00579 ;                                 DATA                                         ;
                      00580 ;******************************************************************************;
016F                  00581 WRT_DATA        
                      00582         WRT_LCD     "N"
016F   304E               M         MOVLW       "N"
0170   2???               M         CALL        WR_DATA
                      00583         WRT_LCD     "U"
0171   3055               M         MOVLW       "U"
0172   2???               M         CALL        WR_DATA
                      00584         WRT_LCD     "M"
0173   304D               M         MOVLW       "M"
0174   2???               M         CALL        WR_DATA
                      00585         WRT_LCD     " "
0175   3020               M         MOVLW       " "
0176   2???               M         CALL        WR_DATA
                      00586         WRT_LCD     "S"
0177   3053               M         MOVLW       "S"
0178   2???               M         CALL        WR_DATA
                      00587         WRT_LCD     "P"
0179   3050               M         MOVLW       "P"
017A   2???               M         CALL        WR_DATA
                      00588         WRT_LCD     "O"
017B   304F               M         MOVLW       "O"
017C   2???               M         CALL        WR_DATA
                      00589         WRT_LCD     "T"
017D   3054               M         MOVLW       "T"
017E   2???               M         CALL        WR_DATA
                      00590         WRT_LCD     "S"
017F   3053               M         MOVLW       "S"
0180   2???               M         CALL        WR_DATA
                      00591         WRT_LCD     ":"
0181   303A               M         MOVLW       ":"
0182   2???               M         CALL        WR_DATA
                      00592         WRT_LCD     " "
0183   3020               M         MOVLW       " "
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0184   2???               M         CALL        WR_DATA
                      00593         CWRT_MEM_LCD num_spots
0185   084B               M         MOVFW       num_spots
0186   3E30               M         ADDLW       D'48'
0187   2???               M         CALL        WR_DATA
0188   0008           00594         RETURN
                      00595 ;******************************************************************************;
                      00596 ;                           RETREIVE START TIME                                ;
                      00597 ;******************************************************************************;
0189                  00598 GET_START_TIME
                      00599         ;Get minute             
                      00600         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0189   3001               M         movlw       0x01
018A   1283 1303          M         banksel     0x73
018C   00F3               M         movwf       0x73
018D   2???               M         call        read_rtc
018E   1283 1303          M         banksel     0x75
0190   0875               M         movf        0x75,w
0191   2???               M         call        rtc_convert   
0192   0877           00601         MOVFW       0X77
0193   00BB           00602         MOVWF       start_min10
0194   0878           00603         MOVFW       0X78
0195   00BA           00604         MOVWF       start_min
                      00605 
                      00606         ;Get seconds
                      00607         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0196   3000               M         movlw       0x00
0197   1283 1303          M         banksel     0x73
0199   00F3               M         movwf       0x73
019A   2???               M         call        read_rtc
019B   1283 1303          M         banksel     0x75
019D   0875               M         movf        0x75,w
019E   2???               M         call        rtc_convert   
019F   0877           00608         MOVFW       0X77
01A0   00BD           00609         MOVWF       start_sec10
01A1   0878           00610         MOVFW       0X78
01A2   00BC           00611         MOVWF       start_sec
01A3   0008           00612         RETURN
                      00613 ;******************************************************************************;
                      00614 ;                           RETREIVE STOP TIME                                 ;
                      00615 ;******************************************************************************;
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01A4                  00616 GET_STOP_TIME
                      00617         ;Get minute             
                      00618         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01A4   3001               M         movlw       0x01
01A5   1283 1303          M         banksel     0x73
01A7   00F3               M         movwf       0x73
01A8   2???               M         call        read_rtc
01A9   1283 1303          M         banksel     0x75
01AB   0875               M         movf        0x75,w
01AC   2???               M         call        rtc_convert   
01AD   0877           00619         MOVFW       0X77
01AE   00BF           00620         MOVWF       stop_min10
01AF   0878           00621         MOVFW       0X78
01B0   00BE           00622         MOVWF       stop_min
                      00623 
                      00624         ;Get seconds
                      00625         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01B1   3000               M         movlw       0x00
01B2   1283 1303          M         banksel     0x73
01B4   00F3               M         movwf       0x73
01B5   2???               M         call        read_rtc
01B6   1283 1303          M         banksel     0x75
01B8   0875               M         movf        0x75,w
01B9   2???               M         call        rtc_convert   
01BA   0877           00626         MOVFW       0X77
01BB   00C1           00627         MOVWF       stop_sec10
01BC   0878           00628         MOVFW       0X78
01BD   00C0           00629         MOVWF       stop_sec
01BE   0008           00630         RETURN
                      00631 ;******************************************************************************;
                      00632 ;                       DISPLAY RTC TIME TO LCD                                ;
                      00633 ;******************************************************************************;
01BF                  00634 SHOW_RTC
                      00635         ;clear LCD screen
01BF   3001           00636         movlw       b'00000001'
01C0   2???           00637         call        WR_INS
                      00638 
                      00639         ;Get year
                      00640         WRT_LCD     "2"
01C1   3032               M         MOVLW       "2"
01C2   2???               M         CALL        WR_DATA
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00641         WRT_LCD     "0"
01C3   3030               M         MOVLW       "0"
01C4   2???               M         CALL        WR_DATA
                      00642         rtc_read    0x06                ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01C5   3006               M         movlw       0x06
01C6   1283 1303          M         banksel     0x73
01C8   00F3               M         movwf       0x73
01C9   2???               M         call        read_rtc
01CA   1283 1303          M         banksel     0x75
01CC   0875               M         movf        0x75,w
01CD   2???               M         call        rtc_convert   
                      00643         WRT_MEM_LCD 0x77
01CE   0877               M         MOVFW       0x77
01CF   2???               M         CALL        WR_DATA
                      00644         WRT_MEM_LCD 0x78
01D0   0878               M         MOVFW       0x78
01D1   2???               M         CALL        WR_DATA
                      00645 
                      00646         WRT_LCD     "/"
01D2   302F               M         MOVLW       "/"
01D3   2???               M         CALL        WR_DATA
                      00647 
                      00648         ;Get month
                      00649         rtc_read    0x05                ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01D4   3005               M         movlw       0x05
01D5   1283 1303          M         banksel     0x73
01D7   00F3               M         movwf       0x73
01D8   2???               M         call        read_rtc
01D9   1283 1303          M         banksel     0x75
01DB   0875               M         movf        0x75,w
01DC   2???               M         call        rtc_convert   
                      00650         WRT_MEM_LCD 0x77
01DD   0877               M         MOVFW       0x77
01DE   2???               M         CALL        WR_DATA
                      00651         WRT_MEM_LCD 0x78
01DF   0878               M         MOVFW       0x78
01E0   2???               M         CALL        WR_DATA
                      00652 
                      00653         WRT_LCD     "/"
01E1   302F               M         MOVLW       "/"
01E2   2???               M         CALL        WR_DATA
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00654 
                      00655         ;Get day
                      00656         rtc_read    0x04                ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01E3   3004               M         movlw       0x04
01E4   1283 1303          M         banksel     0x73
01E6   00F3               M         movwf       0x73
01E7   2???               M         call        read_rtc
01E8   1283 1303          M         banksel     0x75
01EA   0875               M         movf        0x75,w
01EB   2???               M         call        rtc_convert   
                      00657         WRT_MEM_LCD 0x77
01EC   0877               M         MOVFW       0x77
01ED   2???               M         CALL        WR_DATA
                      00658         WRT_MEM_LCD 0x78
01EE   0878               M         MOVFW       0x78
01EF   2???               M         CALL        WR_DATA
                      00659 
01F0   30C0           00660         movlw       B'11000000'         ;Next line displays (hour):(min):(sec) **:**:**
01F1   2???           00661         call        WR_INS
                      00662         ;Get hour
                      00663         rtc_read    0x02                ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01F2   3002               M         movlw       0x02
01F3   1283 1303          M         banksel     0x73
01F5   00F3               M         movwf       0x73
01F6   2???               M         call        read_rtc
01F7   1283 1303          M         banksel     0x75
01F9   0875               M         movf        0x75,w
01FA   2???               M         call        rtc_convert   
                      00664         WRT_MEM_LCD 0x77
01FB   0877               M         MOVFW       0x77
01FC   2???               M         CALL        WR_DATA
                      00665         WRT_MEM_LCD 0x78
01FD   0878               M         MOVFW       0x78
01FE   2???               M         CALL        WR_DATA
                      00666         WRT_LCD     ":"
01FF   303A               M         MOVLW       ":"
0200   2???               M         CALL        WR_DATA
                      00667 
                      00668         ;Get minute             
                      00669         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0201   3001               M         movlw       0x01
0202   1283 1303          M         banksel     0x73
0204   00F3               M         movwf       0x73
0205   2???               M         call        read_rtc
0206   1283 1303          M         banksel     0x75
0208   0875               M         movf        0x75,w
0209   2???               M         call        rtc_convert   
                      00670         WRT_MEM_LCD 0x77
020A   0877               M         MOVFW       0x77
020B   2???               M         CALL        WR_DATA
                      00671         WRT_MEM_LCD 0x78
020C   0878               M         MOVFW       0x78
020D   2???               M         CALL        WR_DATA
                      00672         WRT_LCD     ":"
020E   303A               M         MOVLW       ":"
020F   2???               M         CALL        WR_DATA
                      00673 
                      00674         ;Get seconds
                      00675         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0210   3000               M         movlw       0x00
0211   1283 1303          M         banksel     0x73
0213   00F3               M         movwf       0x73
0214   2???               M         call        read_rtc
0215   1283 1303          M         banksel     0x75
0217   0875               M         movf        0x75,w
0218   2???               M         call        rtc_convert   
                      00676         WRT_MEM_LCD 0x77
0219   0877               M         MOVFW       0x77
021A   2???               M         CALL        WR_DATA
                      00677         WRT_MEM_LCD 0x78
021B   0878               M         MOVFW       0x78
021C   2???               M         CALL        WR_DATA
                      00678 
021D   0008           00679         RETURN
                      00680 ;******************************************************************************;
                      00681 ;                       INITIALIZE RTC TIME                                    ;
                      00682 ;******************************************************************************;                
021E                  00683 SET_RTC_TIME
                      00684         rtc_resetAll    ;reset rtc
                          M ;input:         none
                          M ;output:        none
                          M ;desc:          Resets all the time keeping registers on the RTC to zero
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

021E   1283 1303          M         banksel     0x74
0220   01F4               M         clrf        0x74
0221   1283 1303          M         banksel     0x73
0223   01F3               M         clrf        0x73
0224   2???               M         call        write_rtc           ;Write 0 to Seconds
0225   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0227   0AF3               M         incf        0x73                        ;Set register address to 1
0228   2???               M         call        write_rtc
0229   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
022B   0AF3               M         incf        0x73                        ;Set register address to 2
022C   2???               M         call        write_rtc
022D   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
022F   0AF3               M         incf        0x73                        ;Set register address to 3
0230   2???               M         call        write_rtc
0231   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0233   0AF3               M         incf        0x73                        ;Set register address to 4
0234   2???               M         call        write_rtc
0235   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0237   0AF3               M         incf        0x73                        ;Set register address to 5
0238   2???               M         call        write_rtc
0239   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
023B   0AF3               M         incf        0x73                        ;Set register address to 6
023C   2???               M         call        write_rtc
                      00685 
                      00686         rtc_set     0x00,       B'10000000'
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
023D   1283 1303          M         banksel     0x73
023F   3000               M         movlw       0x00
0240   00F3               M         movwf       0x73
0241   1283 1303          M         banksel     0x74
0243   3080               M         movlw       B'10000000'
0244   00F4               M         movwf       0x74        
0245   2???               M         call        write_rtc
                      00687 
                      00688         ;set time 
                      00689         rtc_set     0x06,       B'00010110'             ; Year
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0246   1283 1303          M         banksel     0x73
0248   3006               M         movlw       0x06
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0249   00F3               M         movwf       0x73
024A   1283 1303          M         banksel     0x74
024C   3016               M         movlw       B'00010110'
024D   00F4               M         movwf       0x74        
024E   2???               M         call        write_rtc
                      00690         rtc_set     0x05,       B'00000100'             ; Month
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
024F   1283 1303          M         banksel     0x73
0251   3005               M         movlw       0x05
0252   00F3               M         movwf       0x73
0253   1283 1303          M         banksel     0x74
0255   3004               M         movlw       B'00000100'
0256   00F4               M         movwf       0x74        
0257   2???               M         call        write_rtc
                      00691         rtc_set     0x04,       B'00000110'             ; Date
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0258   1283 1303          M         banksel     0x73
025A   3004               M         movlw       0x04
025B   00F3               M         movwf       0x73
025C   1283 1303          M         banksel     0x74
025E   3006               M         movlw       B'00000110'
025F   00F4               M         movwf       0x74        
0260   2???               M         call        write_rtc
                      00692         rtc_set     0x03,       B'00000010'             ; Day
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0261   1283 1303          M         banksel     0x73
0263   3003               M         movlw       0x03
0264   00F3               M         movwf       0x73
0265   1283 1303          M         banksel     0x74
0267   3002               M         movlw       B'00000010'
0268   00F4               M         movwf       0x74        
0269   2???               M         call        write_rtc
                      00693         rtc_set     0x02,       B'00000000'             ; Hours
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
026A   1283 1303          M         banksel     0x73
026C   3002               M         movlw       0x02
026D   00F3               M         movwf       0x73
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

026E   1283 1303          M         banksel     0x74
0270   3000               M         movlw       B'00000000'
0271   00F4               M         movwf       0x74        
0272   2???               M         call        write_rtc
                      00694         rtc_set     0x01,       B'00000000'             ; Minutes
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0273   1283 1303          M         banksel     0x73
0275   3001               M         movlw       0x01
0276   00F3               M         movwf       0x73
0277   1283 1303          M         banksel     0x74
0279   3000               M         movlw       B'00000000'
027A   00F4               M         movwf       0x74        
027B   2???               M         call        write_rtc
                      00695         rtc_set     0x00,       B'00000000'             ; Seconds
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
027C   1283 1303          M         banksel     0x73
027E   3000               M         movlw       0x00
027F   00F3               M         movwf       0x73
0280   1283 1303          M         banksel     0x74
0282   3000               M         movlw       B'00000000'
0283   00F4               M         movwf       0x74        
0284   2???               M         call        write_rtc
0285   0008           00696         return
                      00697 
                      00698 ;******************************************************************************;                
                      00699 ;******************************************************************************;
                      00700 ;******************************************************************************;
0286                  00701 DIV16X8 ; DIV_HI and DIV_LO / DIVSOR.  result to Q
                      00702                 ; does not deal with divide by 0 case
0286   01B6           00703         CLRF Q
0287                  00704 DIV_1
0287   0835           00705         MOVF DIVISOR, W
0288   02B4           00706         SUBWF DIV_LO, F
0289   1C03           00707         BTFSS STATUS, C ; if positive skip
028A   2???           00708         GOTO BORROW
028B   2???           00709         GOTO DIV_2
028C                  00710 BORROW
028C   3001           00711         MOVLW 0x01
028D   02B3           00712         SUBWF DIV_HI, F ; DIV_HI = DIV_HI - 1
028E   1C03           00713         BTFSS STATUS, C ; if no borrow occurred
028F   2???           00714         GOTO DIV_DONE   
0290                  00715 DIV_2
0290   0AB6           00716         INCF Q, F
0291   2???           00717         GOTO DIV_1
0292                  00718 DIV_DONE
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0292   0008           00719         RETURN
                      00720 
0293                  00721 DEL_1S
0293   3015           00722         movlw   0x15
0294   00B7           00723         movwf   d1
0295   3074           00724         movlw   0x74
0296   00B8           00725         movwf   d2
0297   3006           00726         movlw   0x06
0298   00B9           00727         movwf   d3
0299                  00728 DEL_1S_0
0299   0BB7           00729         decfsz  d1, f
029A   2???           00730         goto    $+2
029B   0BB8           00731         decfsz  d2, f
029C   2???           00732         goto    $+2
029D   0BB9           00733         decfsz  d3, f
029E   2???           00734         goto    DEL_1S_0
029F   2???           00735         goto    $+1
02A0   2???           00736         goto    $+1
02A1   0008           00737         return
                      00738         
02A2                  00739 DEL_10MS
02A2   3086           00740         movlw   0x86
02A3   00B7           00741         movwf   d1
02A4   3014           00742         movlw   0x14
02A5   00B8           00743         movwf   d2
02A6                  00744 DEL_10MS_0
02A6   0BB7           00745         decfsz  d1, f
02A7   2???           00746         goto    $+2
02A8   0BB8           00747         decfsz  d2, f
02A9   2???           00748         goto    DEL_10MS_0
02AA   2???           00749         goto    $+1
02AB   0000           00750         nop
02AC   0008           00751         return
                      00752 
02AD                  00753 DEL_2_1MS
02AD   3018           00754         movlw   0x18
02AE   00B7           00755         movwf   d1
02AF   3005           00756         movlw   0x05
02B0   00B8           00757         movwf   d2
02B1                  00758 DEL_2_1MS_0
02B1   0BB7           00759         decfsz  d1, f
02B2   2???           00760         goto    $+2
02B3   0BB8           00761         decfsz  d2, f
02B4   2???           00762         goto    DEL_2_1MS_0
02B5   2???           00763         goto    $+1
02B6   0000           00764         nop
02B7   0008           00765         return
                      00766         
02B8                  00767 DEL_1_5MS
02B8   30EC           00768         movlw   0xEC
02B9   00B7           00769         movwf   d1
02BA   3003           00770         movlw   0x03
02BB   00B8           00771         movwf   d2
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02BC                  00772 DEL_1_5MS_0
02BC   0BB7           00773         decfsz  d1, f
02BD   2???           00774         goto    $+2
02BE   0BB8           00775         decfsz  d2, f
02BF   2???           00776         goto    DEL_1_5MS_0
02C0   2???           00777         goto    $+1
02C1   0000           00778         nop
02C2   0008           00779         return
                      00780         
02C3                  00781 DEL_20US
02C3   300F           00782         movlw   0x0F
02C4   00B7           00783         movwf   d1
02C5                  00784 DEL_20US_0
02C5   0BB7           00785         decfsz  d1, f
02C6   2???           00786         goto    DEL_20US_0
02C7   0008           00787         return
                      00788 
02C8                  00789 FINISH  
02C8   2???           00790         GOTO    FINISH
                      00791         
3F72                  00792         END
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ARM_CLOSE                         000000A8
ARM_CTRL                          000000A3
ARM_OPEN                          000000B0
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BORROW                            0000028C
BRGH                              00000002
BUZZER                            PORTC, 7
C                                 00000000
CALIBRATE                         0000003F
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

CKP                               00000004
CLR_LCD                           00000000
CREN                              00000004
CSRC                              00000007
CWRT_MEM_LCD                      
D                                 00000005
DATA_ADDRESS                      00000005
DATA_LOOP                         00000117
DC                                00000001
DEL_10MS                          000002A2
DEL_10MS_0                        000002A6
DEL_1S                            00000293
DEL_1S_0                          00000299
DEL_1_5MS                         000002B8
DEL_1_5MS_0                       000002BC
DEL_20US                          000002C3
DEL_20US_0                        000002C5
DEL_2_1MS                         000002AD
DEL_2_1MS_0                       000002B1
DIV16X8                           00000286
DIVISOR                           00000035
DIV_1                             00000287
DIV_2                             00000290
DIV_DONE                          00000292
DIV_HI                            00000033
DIV_LO                            00000034
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FINAL_BACKUP                      0000005D
FINISH                            000002C8
FSR                               00000004
GCEN                              00000007
GET_START_TIME                    00000189
GET_STOP_TIME                     000001A4
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

IBF                               00000007
IBOV                              00000005
INDF                              00000000
INIT                              00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
INT_HANDLER                       0000006B
IRP                               00000007
InitLCD                           00000000
LCD_INS                           
L_MOTOR_SPD                       B'11111111'
MOTOR_CTRL_L                      000000F4
MOTOR_CTRL_R                      000000E3
MOTOR_DIR_CTRL                    PORTC, 5
MULT                              
MUX_CTRL_0                        PORTA, 0
MUX_CTRL_1                        PORTA, 1
MUX_CTRL_2                        PORTA, 2
MUX_CTRL_3                        PORTA, 3
MUX_IN                            PORTC, 0
MX_LOOP                           00000078
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NO_SPOT                           00000098
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
Q                                 00000036
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_IRS                          00000076
READ_WRITE                        00000002
RETURN_HOME                       00000054
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_MOTOR_SPD                       B'11111111'
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SCAN                              00000052
SEN                               00000000
SERVO_CTRL                        PORTA, 5
SET_RTC_TIME                      0000021E
SHOW_RTC                          000001BF
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
START_MSG                         00000135
START_STDBY                       00000031
STATUS                            00000003
STOP_DATA                         00000103
STOP_STDBY                        00000061
STOP_STDBY_MSG                    00000152
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
USHOLDL                           000000D4
USHOLDS                           000000BF
USONIC_LAT                        000000CE
USONIC_LAT_ECHO                   000000D1
USONIC_SUP                        000000B9
USONIC_SUP_ECHO                   000000BC
US_LAT_ECHO                       PORTD, 1
US_LAT_TRIG                       PORTD, 0
US_SUP_ECHO                       PORTD, 2
US_SUP_TRIG                       PORTD, 1
W                                 00000000
WCOL                              00000007
WHL_ENC                           0000009C
WR                                00000001
WREN                              00000002
WRERR                             00000003
WRT_DATA                          0000016F
WRT_LCD                           
WRT_MEM_LCD                       
WR_DATA                           00000000
WR_INS                            00000000
Z                                 00000002
_.org_1_0037                      00000037
_.org_1_0066                      00000066
_.org_1_00BD                      000000BD
_.org_1_00D2                      000000D2
_.org_1_029A                      0000029A
_.org_1_029C                      0000029C
_.org_1_029F                      0000029F
_.org_1_02A0                      000002A0
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

_.org_1_02A7                      000002A7
_.org_1_02AA                      000002AA
_.org_1_02B2                      000002B2
_.org_1_02B5                      000002B5
_.org_1_02BD                      000002BD
_.org_1_02C0                      000002C0
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
crit_dist                         0X08
crit_dist_l                       0x05
crit_dist_r                       0x02
d1                                00000037
d2                                00000038
d3                                00000039
i2c_common_setup                  00000000
long_del                          00000030
MPASM 5.65                          MAIN.ASM   3-26-2016  10:08:34         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

measured_distance_lat             00000047
measured_distance_sup             00000048
multiplex_count                   00000043
num_spots                         0000004B
read_rtc                          00000000
rob_lat_distance                  00000044
rob_long_distance                 00000046
rob_long_distance_count           00000045
rob_return                        00000049
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
spot_base_loc                     0000004C
spot_count                        0000004A
spot_detected                     00000042
start_min                         0000003A
start_min10                       0000003B
start_sec                         0000003C
start_sec10                       0000003D
stop_min                          0000003E
stop_min10                        0000003F
stop_sec                          00000040
stop_sec10                        00000041
temp_status                       00000032
temp_w                            00000031
write_rtc                         00000000

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :    18 reported,     0 suppressed

