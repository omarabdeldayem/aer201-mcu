MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;******************************************************************************;
                      00002 ;        ____    ___  ______    ___  ____       ____  ____  ____    ___  ____  ;
                      00003 ;       |    \  /  _]|      T  /  _]|    \     |    \l    j|    \  /  _]|    \ ;
                      00004 ;       |  o  )/  [_ |      | /  [_ |  D  )    |  o  )|  T |  o  )/  [_ |  D  );
                      00005 ;       |   _/Y    _]l_j  l_jY    _]|    /     |   _/ |  | |   _/Y    _]|    / ;
                      00006 ;       |  |  |   [_   |  |  |   [_ |    \     |  |   |  | |  |  |   [_ |    \ ;
                      00007 ;       |  |  |     T  |  |  |     T|  .  Y    |  |   j  l |  |  |     T|  .  Y;
                      00008 ;       l__j  l_____j  l__j  l_____jl__j\_j    l__j  |____jl__j  l_____jl__j\_j;
                      00009 ;------------------------------------------------------------------------------;
                      00010 ;               AER201 Team 61 'Peter Piper' Pipe Inspector                    ;
                      00011 ;                        Author: Omar Abdeldayem                               ;
                      00012 ;                           Created: 1/12/2016                                 ;
                      00013 ;------------------------------------------------------------------------------;
                      00014 ; DESCRIPTION:                                                                                          
                                                               ;
                      00015 ; It does shit, yo.                                                                                     
                                                               ;
                      00016 ;******************************************************************************;
                      00017 ;******************************************************************************;
                      00018 ;******************************************************************************;
                      00019 
                      00020         List    p=16f877                    ; list directive to define processor
                      00021         #include        <p16f877.inc>       ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
2007   3F72           00022         __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP
                            _OFF
                      00023 
                      00024         #include        <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel     0x74
                      00011         clrf        0x74
                      00012         banksel     0x73
                      00013         clrf        0x73
                      00014         call        write_rtc           ;Write 0 to Seconds
                      00015         banksel     0x73
                      00016         incf        0x73                        ;Set register address to 1
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00017         call        write_rtc
                      00018         banksel     0x73
                      00019         incf        0x73                        ;Set register address to 2
                      00020         call        write_rtc
                      00021         banksel     0x73
                      00022         incf        0x73                        ;Set register address to 3
                      00023         call        write_rtc
                      00024         banksel     0x73
                      00025         incf        0x73                        ;Set register address to 4
                      00026         call        write_rtc
                      00027         banksel     0x73
                      00028         incf        0x73                        ;Set register address to 5
                      00029         call        write_rtc
                      00030         banksel     0x73
                      00031         incf        0x73                        ;Set register address to 6
                      00032         call        write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set macro       addliteral, datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel     0x73
                      00042         movlw       addliteral
                      00043         movwf       0x73
                      00044         banksel     0x74
                      00045         movlw       datliteral
                      00046         movwf       0x74        
                      00047         call        write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read macro      addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw       addliteral
                      00058         banksel     0x73
                      00059         movwf       0x73
                      00060         call        read_rtc
                      00061         banksel     0x75
                      00062         movf        0x75,w
                      00063         call        rtc_convert   
                      00064         endm
                      00065 
                      00066 
                      00067 
                      00068 
                      00069 
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00070 
                      00025         #include        <lcd.inc>
  0000                00001     extern      InitLCD,WR_INS,WR_DATA,CLR_LCD
                      00002 
                      00003 
                      00026 ;******************************************************************************;
                      00027 ;                               BANK0 RAM                                      ;
                      00028 ;******************************************************************************;
                      00029         CBLOCK      0x30
                      00030                     ; RTC I2C Mem
  00000030            00031         dt1         ; 0x30          
  00000031            00032         dt2
  00000032            00033         dt3
  00000033            00034         XBUF
  00000034            00035         count
  00000035            00036         CONTROL
  00000036            00037         ADD
  00000037            00038         DAT
  00000038            00039         flag
  00000039            00040         DOUT
  0000003A            00041         B1
  0000003B            00042         B2
                      00043                     ; LCD MEM
  0000003C            00044         lcd_tmp
  0000003D            00045         lcd_d1
  0000003E            00046         lcd_d2
  0000003F            00047         long_del
  00000040            00048         temp_w      ; 0x40
  00000041            00049         temp_status ; 0x41
                      00050                     ; DIVISION Registers
  00000042            00051         DIV_HI      ; 0X42
  00000043            00052         DIV_LO      ; 0X43
  00000044            00053         DIVISOR     ; 0X44
  00000045            00054         Q
  00000046            00055         d1
  00000047            00056         d2
  00000048            00057         d3
                      00058                     ; ROBOT VARS
  00000049            00059         start_min
  0000004A            00060         start_min10
  0000004B            00061         start_sec
  0000004C            00062         start_sec10
  0000004D            00063         stop_min
  0000004E            00064         stop_min10
  0000004F            00065         stop_sec
  00000050            00066         stop_sec10
  00000051            00067         spot_detected
  00000052            00068         multiplex_count
  00000053            00069         rob_lat_distance
  00000054            00070         rob_long_distance
  00000055            00071         measured_distance_lat
  00000056            00072         measured_distance_sup
  00000057            00073         rob_return
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000058            00074         spot_count
  00000059            00075         num_spots
  0000005A            00076         spot_base_loc
                      00077         ENDC
                      00078 
                      00079 ;******************************************************************************;
                      00080 ;                               EQUATES                                ;
                      00081 ;******************************************************************************;
                      00082         #define     crit_dist       d'5'
                      00083         #define     MOTOR_DIR_CTRL  PORTC, 5
                      00084 ;******************************************************************************;
                      00085 ;                               MACROS                                         ;
                      00086 ;******************************************************************************;
                      00087 MULT    macro       val1, val2, result
                      00088         MOVF        val1, W
                      00089         ADDWF       val1, W
                      00090         MOVWF       result
                      00091         DECFSZ      val2, f
                      00092         GOTO        $-3
                      00093         endm
                      00094         
                      00095 WRT_LCD macro       val
                      00096         MOVLW       val
                      00097         CALL        WR_DATA
                      00098         endm
                      00099 LCD_INS macro       val
                      00100         MOVLW       val
                      00101         CALL        WR_INS
                      00102         endm
                      00103         
                      00104 WRT_MEM_LCD macro   val
                      00105         MOVFW       val
                      00106         CALL        WR_DATA
                      00107         endm
                      00108 
                      00109 ;******************************************************************************;
                      00110 ;                          VECTOR TABLE                                        ;
                      00111 ;******************************************************************************;
                      00112         ORG         0x0000              ; RESET vector must always be at 0x00
0000   2???           00113         GOTO        INIT                ; Just jump to the main code section.
                      00114         ORG         0x0004
0004   2???           00115         GOTO        INT_HANDLER
                      00116 
                      00117 ;******************************************************************************;
                      00118 ;                         ROBOT INITIALIZATION                                 ;
                      00119 ;******************************************************************************;
0005                  00120 INIT
0005   1683           00121         BSF         STATUS, RP0         ; Select bank 1
0006   018B           00122         CLRF        INTCON              ; Disable interrupts for now
                      00123         
0007   3006           00124         MOVLW       0x06
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0008   009F           00125         MOVWF       ADCON1
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00126         
0009   3010           00127         MOVLW       b'00010000'         ; PORT A pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000A   0085           00128         MOVWF       TRISA
000B   30F3           00129         MOVLW       b'11110011'         ; PORT B pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000C   0086           00130         MOVWF       TRISB
000D   3079           00131         MOVLW       b'01111001'         ; PORT C pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000E   0087           00132         MOVWF       TRISC
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000F   0188           00133         CLRF        TRISD               ; PORT D pin mapping
0010   3007           00134         MOVLW       b'00000111'         ; PORT E pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0011   0089           00135         MOVWF       TRISE
                      00136         
0012   30FF           00137         MOVLW       B'11111111'         ; PWM pulsing period (484Hz)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0013   0092           00138         MOVWF       PR2
                      00139        
0014   1283           00140         BCF         STATUS, RP0         ; select bank 0
                      00141 
0015   30FF           00142         MOVLW       B'11111111'         ; 100% DUTY CYCLE
0016   0095           00143         MOVWF       CCPR1L              
0017   30FF           00144         MOVLW       B'11111111'         ; '01100100' 100% DUTY CYCLE
0018   009B           00145         MOVWF       CCPR2L
0019   30FF           00146         MOVLW       B'11111111'
001A   0097           00147         MOVWF       CCP1CON
001B   009D           00148         MOVWF       CCP2CON
                      00149 ;       
001C   3005           00150         MOVLW       B'00000101'         ; Initialize and hold timer 2
001D   0092           00151         MOVWF       T2CON
001E   0191           00152         CLRF        TMR2
001F   1112           00153         BCF         T2CON, TMR2ON
                      00154         
0020   3010           00155         MOVLW       0X10                ; TMR1 for Ultrasonic Sensors
0021   0090           00156         MOVWF       T1CON
0022   018F           00157         CLRF        TMR1H
0023   018E           00158         CLRF        TMR1L
                      00159         
0024   0185           00160         clrf        PORTA
0025   0186           00161         clrf        PORTB
0026   0187           00162         clrf        PORTC 
0027   0188           00163         clrf        PORTD
                      00164          
                      00165 ;       CALL        i2c_common_setup
                      00166 ;                   rtc_resetAll
                      00167 ;       CALL        SET_RTC_TIME
0028   2???           00168         CALL        InitLCD
                      00169         
0029   3000           00170         MOVLW       b'0'                ; Initialize variables
002A   00D9           00171         MOVWF       num_spots
002B   00D8           00172         MOVWF       spot_count
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002C   00D1           00173         MOVWF       spot_detected       
                      00174                                                 
002D   2???           00175         CALL        START_MSG
                      00176 ;******************************************************************************;
                      00177 ;                        ROBOT START AND STANDBY                               ;
                      00178 ;******************************************************************************;
002E                  00179 START_STDBY
002E   1C86           00180         BTFSS       PORTB, 1            ; Wait until data is available from the keypad
002F   2???           00181         GOTO        START_STDBY
                      00182 
0030   0E06           00183         SWAPF       PORTB, W            ; Read PortB<7:4> into W<3:0>
0031   390F           00184         ANDLW       0x0F
0032   2???           00185         CALL        CLR_LCD
                      00186 
0033   1886           00187         BTFSC       PORTB,1             ; Wait until key is released
0034   2???           00188         GOTO        $-1
                      00189         
0035   2???           00190         CALL        CLR_LCD
                      00191         ;CALL       GET_START_TIME
                      00192         ;CALL       ARM_TOGGLE
0036   1687           00193         BSF         MOTOR_DIR_CTRL
0037   1512           00194         BSF         T2CON, TMR2ON
0038   158B           00195         BSF         INTCON, RBIE            ; Enable interrupts
0039   160B           00196         BSF         INTCON, INTE
003A   178B           00197         BSF         INTCON, GIE
003B   2???           00198         GOTO        SCAN
                      00199         ;GOTO       CALIBRATE
                      00200 
                      00201 ;******************************************************************************;
                      00202 ;                           SENSOR CALIBRATION                                 ;
                      00203 ;******************************************************************************;
003C                  00204 CALIBRATE
003C   2???           00205         CALL        USONIC_LAT
003D   0853           00206         MOVFW       rob_lat_distance
003E   3C05           00207         SUBLW       crit_dist
003F   1D03           00208         BTFSS       STATUS, 2
0040   2???           00209         GOTO        CALIBRATE
0041   158B           00210         BSF         INTCON, RBIE            ; Enable interrupts
0042   160B           00211         BSF         INTCON, INTE
0043   178B           00212         BSF         INTCON, GIE
0044   2???           00213         GOTO        SCAN
                      00214         
                      00215 ;******************************************************************************;
                      00216 ;                         PIPE SCAN SUPERLOOP                                  ;
                      00217 ;******************************************************************************;
0045                  00218 SCAN
                      00219 ;       CALL        USONIC_LAT
                      00220 ;       MOVLW       0x05
                      00221 ;       SUBWF       measured_distance_lat, W
                      00222 ;       BTFSC       STATUS, 2
                      00223 ;       GOTO        RETURN_HOME
                      00224 ;       CALL        USONIC_SUP
                      00225 ;       MOVLW       0x05
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00226 ;       SUBWF       measured_distance_sup, W
                      00227 ;       BTFSC       STATUS, 2
0045   2???           00228         CALL        ARM_OPEN
                      00229 ;       CALL        DEL_1S
                      00230 ;       CALL        DEL_1S
                      00231 ;       CALL        ARM_CLOSE
                      00232 ;       CALL        SHOW_RTC                ; DEBUG
                      00233 ;       CALL        READ_IRS
0046   2???           00234         GOTO        SCAN
                      00235         
                      00236 ;******************************************************************************;
                      00237 ;                          INTERRUPT HANDLER                                   ;
                      00238 ;******************************************************************************;
0047                  00239 INT_HANDLER
0047   00C0           00240         MOVWF       temp_w
0048   0E03           00241         SWAPF       STATUS, W
0049   00C1           00242         MOVWF       temp_status
004A   100B           00243         BCF         INTCON, RBIF
004B   108B           00244         BCF         INTCON, INTF          ; Clear the interrupt flag
                      00245         
004C   2???           00246         CALL        WHL_ENC
                      00247         
004D   0E41           00248         SWAPF       temp_status, W
004E   0083           00249         MOVWF       STATUS
004F   0EC0           00250         SWAPF       temp_w, F
0050   0E40           00251         SWAPF       temp_w, W
0051   0009           00252         RETFIE
                      00253 
                      00254 ;******************************************************************************;
                      00255 ;                       CYCLE INFRARED SENSORS                                 ;
                      00256 ;******************************************************************************;
0052                  00257 READ_IRS
0052   3010           00258         MOVLW       d'16'
0053   00D2           00259         MOVWF       multiplex_count
0054                  00260 MX_LOOP 
Message[305]: Using default destination of 1 (file).
0054   03D2           00261         DECF        multiplex_count
0055   1005           00262         BCF         PORTA, 0
0056   1852           00263         BTFSC       multiplex_count, 0
0057   1405           00264         BSF         PORTA, 0
0058   1085           00265         BCF         PORTA, 1
0059   18D2           00266         BTFSC       multiplex_count, 1
005A   1485           00267         BSF         PORTA, 1
005B   1105           00268         BCF         PORTA, 2
005C   1952           00269         BTFSC       multiplex_count, 2
005D   1505           00270         BSF         PORTA, 2
005E   1185           00271         BCF         PORTA, 3
005F   19D2           00272         BTFSC       multiplex_count, 3
0060   1585           00273         BSF         PORTA, 3
                      00274         
0061   2???           00275         CALL        DEL_10MS
0062   2???           00276         CALL        DEL_10MS
0063   2???           00277         CALL        DEL_10MS
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0064   2???           00278         CALL        DEL_10MS
0065   2???           00279         CALL        DEL_10MS
0066   2???           00280         CALL        DEL_10MS
0067   2???           00281         CALL        DEL_10MS
0068   2???           00282         CALL        DEL_10MS
0069   2???           00283         CALL        DEL_10MS
006A   2???           00284         CALL        DEL_10MS
006B   2???           00285         CALL        DEL_10MS
006C   2???           00286         CALL        DEL_10MS
006D   2???           00287         CALL        DEL_10MS
006E   2???           00288         CALL        DEL_10MS
006F   2???           00289         CALL        DEL_10MS
0070   2???           00290         CALL        DEL_10MS
                      00291         
0071   1C07           00292         BTFSS       PORTC, 0
0072   2???           00293         GOTO        NO_SPOT 
0073   1408           00294         BSF         PORTD, 0                            ; Buzzer start
0074   2???           00295         CALL        DEL_10MS
0075   0854           00296         MOVFW       rob_long_distance                   ; Save spot location
0076   3E30           00297         ADDLW       d'48'                               ; Convert to ASCII
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0077   00B3           00298         MOVWF       spot_base_loc + num_spots
0078   0AD9           00299         INCF        num_spots, f                        ; Increase number of spots
Message[305]: Using default destination of 1 (file).
0079   0AD2           00300         INCF        multiplex_count
007A   0852           00301         MOVFW       multiplex_count
007B   1008           00302         BCF         PORTD, 0                            ; Buzzer stop
Message[305]: Using default destination of 1 (file).
007C   0AD2           00303 NO_SPOT INCF        multiplex_count
Message[305]: Using default destination of 1 (file).
007D   0BD2           00304         DECFSZ      multiplex_count
007E   2???           00305         GOTO        MX_LOOP
007F   0008           00306         RETURN
                      00307 ;******************************************************************************;
                      00308 ;                         WHEEL ENCODER ROUTINE                                ;
                      00309 ;******************************************************************************;
0080                  00310 WHL_ENC
0080   3013           00311         MOVLW       d'19'
Message[305]: Using default destination of 1 (file).
0081   07D4           00312         ADDWF       rob_long_distance
0082   0008           00313         RETURN
                      00314         
                      00315 ;******************************************************************************;
                      00316 ;                       TOGGLE ARM STATE SUBROUTINES                           ;
                      00317 ;******************************************************************************;
0083                  00318 ARM_OPEN
                      00319         ; control servo to control arm
                      00320         ; if degree is set to 180, set to 0
                      00321         ; otherwise set to 0
0083   1685           00322         BSF         PORTA, 5
0084   2???           00323         CALL        DEL_1_5MS
                      00324         ;CALL       DEL_1_5MS
0085   1285           00325         BCF         PORTA, 5
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0086   2???           00326         CALL        DEL_10MS
0087   2???           00327         CALL        DEL_10MS
0088   2???           00328         CALL        DEL_10MS
0089   2???           00329         CALL        DEL_10MS
008A   0008           00330         RETURN      
                      00331         
008B                  00332 ARM_CLOSE
008B   1685           00333         BSF         PORTA, 5
008C   2???           00334         CALL        DEL_2_1MS
008D   2???           00335         CALL        DEL_2_1MS
008E   1285           00336         BCF         PORTA, 5
008F   2???           00337         CALL        DEL_10MS
0090   2???           00338         CALL        DEL_10MS
0091   2???           00339         CALL        DEL_10MS
0092   2???           00340         CALL        DEL_10MS
0093   0008           00341         RETURN
                      00342 ;******************************************************************************;
                      00343 ;                     ULTRASONIC SENSOR SUBROUTINES                            ;
                      00344 ;******************************************************************************;
0094                  00345 USONIC_LAT
0094   1586           00346         BSF         PORTB, 3
0095   2???           00347         CALL        DEL_20US
0096   1186           00348         BCF         PORTB, 3
0097                  00349 USONIC_LAT_ECHO
0097   1E06           00350         BTFSS       PORTB, 4
0098   2???           00351         GOTO        $-1
0099   1410           00352         BSF         T1CON, 0
009A   1A06           00353 USHOLDL BTFSC       PORTB, 4
009B   2???           00354         GOTO        USHOLDL
009C   1010           00355         BCF         T1CON, 0
009D   080F           00356         MOVF        TMR1H, W
009E   00C2           00357         MOVWF       DIV_HI
009F   080E           00358         MOVF        TMR1L, W
00A0   00C3           00359         MOVWF       DIV_LO
00A1   018F           00360         CLRF        TMR1H
00A2   018E           00361         CLRF        TMR1L
00A3   303A           00362         MOVLW       d'58'
00A4   00C4           00363         MOVWF       DIVISOR
00A5   2???           00364         CALL        DIV16X8
00A6   0845           00365         MOVF        Q, W
00A7   00D5           00366         MOVWF       measured_distance_lat
00A8   0008           00367         RETURN
                      00368 
00A9                  00369 USONIC_SUP
00A9   1707           00370         BSF         PORTC, 6
00AA   2???           00371         CALL        DEL_20US
00AB   1307           00372         BCF         PORTC, 6
00AC                  00373 USONIC_SUP_ECHO
00AC   1F87           00374         BTFSS       PORTC, 7
00AD   2???           00375         GOTO        $-1
00AE   1410           00376         BSF         T1CON, 0
00AF   1B87           00377 USHOLDS BTFSC       PORTC, 7
00B0   2???           00378         GOTO        USHOLDS
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B1   1010           00379         BCF         T1CON, 0
00B2   080F           00380         MOVF        TMR1H, W
00B3   00C2           00381         MOVWF       DIV_HI
00B4   080E           00382         MOVF        TMR1L, W
00B5   00C3           00383         MOVWF       DIV_LO
00B6   018F           00384         CLRF        TMR1H
00B7   018E           00385         CLRF        TMR1L
00B8   303A           00386         MOVLW       d'58'
00B9   00C4           00387         MOVWF       DIVISOR
00BA   2???           00388         CALL        DIV16X8
00BB   0845           00389         MOVF        Q, W
00BC   00D6           00390         MOVWF       measured_distance_sup
00BD   0008           00391         RETURN
                      00392 ;******************************************************************************;
                      00393 ;                           RETURN HOME ROUTINE                                ;
                      00394 ;******************************************************************************;
00BE                  00395 RETURN_HOME
00BE   1287           00396         BCF         MOTOR_DIR_CTRL
00BF   2???           00397         CALL        ARM_OPEN
00C0   2???           00398         CALL        USONIC_LAT
00C1   0853           00399         MOVFW       rob_lat_distance
00C2   3C05           00400         SUBLW       crit_dist
00C3   1D03           00401         BTFSS       STATUS, 2
00C4   2???           00402         GOTO        FINAL_BACKUP
00C5   2???           00403         GOTO        RETURN_HOME
                      00404 
00C6                  00405 FINAL_BACKUP
00C6   2???           00406         CALL        DEL_1S
00C7   2???           00407         CALL        DEL_1S
00C8   2???           00408         GOTO        STOP_STDBY
                      00409         
                      00410 ;******************************************************************************;
                      00411 ;                             STOP STANDBY                                     ;
                      00412 ;******************************************************************************;
00C9                  00413 STOP_STDBY
00C9   2???           00414         CALL        GET_STOP_TIME
00CA   2???           00415         CALL        STOP_STDBY_MSG
00CB   1C86           00416         BTFSS       PORTB, 1            ; Wait until data is available from the keypad
00CC   2???           00417         GOTO        STOP_STDBY
                      00418 
00CD   0E06           00419         SWAPF       PORTB, W            ; Read PortB<7:4> into W<3:0>
00CE   390F           00420         ANDLW       0x0F 
00CF   2???           00421         CALL        CLR_LCD
00D0   2???           00422         GOTO        STOP_DATA
                      00423 
                      00424 ;******************************************************************************;
                      00425 ;                               DISPLAY DATA                                   ;
                      00426 ;******************************************************************************;
00D1                  00427 STOP_DATA
                      00428         WRT_LCD     "T"
00D1   3054               M         MOVLW       "T"
00D2   2???               M         CALL        WR_DATA
                      00429         WRT_LCD     "I"
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00D3   3049               M         MOVLW       "I"
00D4   2???               M         CALL        WR_DATA
                      00430         WRT_LCD     "M"
00D5   304D               M         MOVLW       "M"
00D6   2???               M         CALL        WR_DATA
                      00431         WRT_LCD     "E"
00D7   3045               M         MOVLW       "E"
00D8   2???               M         CALL        WR_DATA
                      00432         WRT_LCD     ":"
00D9   303A               M         MOVLW       ":"
00DA   2???               M         CALL        WR_DATA
                      00433         WRT_LCD     " "
00DB   3020               M         MOVLW       " "
00DC   2???               M         CALL        WR_DATA
                      00434         ;Get minute             
                      00435         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
00DD   3001               M         movlw       0x01
00DE   1283 1303          M         banksel     0x73
00E0   00F3               M         movwf       0x73
00E1   2???               M         call        read_rtc
00E2   1283 1303          M         banksel     0x75
00E4   0875               M         movf        0x75,w
00E5   2???               M         call        rtc_convert   
                      00436         WRT_MEM_LCD 0x77
00E6   0877               M         MOVFW       0x77
00E7   2???               M         CALL        WR_DATA
                      00437         WRT_MEM_LCD 0x78
00E8   0878               M         MOVFW       0x78
00E9   2???               M         CALL        WR_DATA
                      00438         WRT_LCD     ":"
00EA   303A               M         MOVLW       ":"
00EB   2???               M         CALL        WR_DATA
                      00439 
                      00440         ;Get seconds
                      00441         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
00EC   3000               M         movlw       0x00
00ED   1283 1303          M         banksel     0x73
00EF   00F3               M         movwf       0x73
00F0   2???               M         call        read_rtc
00F1   1283 1303          M         banksel     0x75
00F3   0875               M         movf        0x75,w
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F4   2???               M         call        rtc_convert   
                      00442         WRT_MEM_LCD 0x77
00F5   0877               M         MOVFW       0x77
00F6   2???               M         CALL        WR_DATA
                      00443         WRT_MEM_LCD 0x78
00F7   0878               M         MOVFW       0x78
00F8   2???               M         CALL        WR_DATA
                      00444 
00F9   30C0           00445         movlw       B'11000000'         ;Next line displays (min):(sec) **:**
00FA   2???           00446         call        WR_INS
                      00447         
00FB   2???           00448         CALL        WRT_DATA
00FC   2???           00449         CALL        LONG_DLY
00FD   2???           00450         CALL        LONG_DLY
00FE   2???           00451         CALL        LONG_DLY
00FF   2???           00452         CALL        LONG_DLY
0100   2???           00453         CALL        LONG_DLY
0101   2???           00454         CALL        LONG_DLY
0102   2???           00455         CALL        LONG_DLY
                      00456         
0103   2???           00457         CALL        CLR_LCD
                      00458         
0104   305A           00459         MOVLW       spot_base_loc
0105   0084           00460         MOVWF       FSR
                      00461         
0106                  00462 DATA_LOOP       
                      00463         WRT_LCD     "S"
0106   3053               M         MOVLW       "S"
0107   2???               M         CALL        WR_DATA
                      00464         WRT_LCD     "P"
0108   3050               M         MOVLW       "P"
0109   2???               M         CALL        WR_DATA
                      00465         WRT_LCD     "O"
010A   304F               M         MOVLW       "O"
010B   2???               M         CALL        WR_DATA
                      00466         WRT_LCD     "T"
010C   3054               M         MOVLW       "T"
010D   2???               M         CALL        WR_DATA
                      00467         WRT_LCD     ":"
010E   303A               M         MOVLW       ":"
010F   2???               M         CALL        WR_DATA
                      00468         WRT_LCD     " "
0110   3020               M         MOVLW       " "
0111   2???               M         CALL        WR_DATA
                      00469         WRT_MEM_LCD INDF
0112   0800               M         MOVFW       INDF
0113   2???               M         CALL        WR_DATA
                      00470         WRT_LCD     "c"
0114   3063               M         MOVLW       "c"
0115   2???               M         CALL        WR_DATA
                      00471         WRT_LCD     "m"
0116   306D               M         MOVLW       "m"
0117   2???               M         CALL        WR_DATA
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00472         
0118   2???           00473         CALL        LONG_DLY
0119   2???           00474         CALL        LONG_DLY
011A   2???           00475         CALL        LONG_DLY
011B   2???           00476         CALL        LONG_DLY
011C   2???           00477         CALL        LONG_DLY
011D   2???           00478         CALL        LONG_DLY
011E   2???           00479         CALL        LONG_DLY
011F   2???           00480         CALL        LONG_DLY
0120   2???           00481         CALL        LONG_DLY
0121   2???           00482         CALL        CLR_LCD
0122   0A84           00483         INCF        FSR, F
                      00484 
0123   0BD8           00485         DECFSZ      spot_count, F
0124   2???           00486         GOTO        DATA_LOOP
                      00487         
                      00488         WRT_LCD     "E"
0125   3045               M         MOVLW       "E"
0126   2???               M         CALL        WR_DATA
                      00489         WRT_LCD     "N"
0127   304E               M         MOVLW       "N"
0128   2???               M         CALL        WR_DATA
                      00490         WRT_LCD     "D"
0129   3044               M         MOVLW       "D"
012A   2???               M         CALL        WR_DATA
                      00491 
012B   2???           00492         GOTO        FINISH
                      00493 
                      00494 ;******************************************************************************;
                      00495 ;                                  HELLO                                       ;
                      00496 ;******************************************************************************;
012C                  00497 START_MSG
                      00498         WRT_LCD     "H"
012C   3048               M         MOVLW       "H"
012D   2???               M         CALL        WR_DATA
                      00499         WRT_LCD     "I"
012E   3049               M         MOVLW       "I"
012F   2???               M         CALL        WR_DATA
                      00500         WRT_LCD     "T"
0130   3054               M         MOVLW       "T"
0131   2???               M         CALL        WR_DATA
                      00501         WRT_LCD     " "
0132   3020               M         MOVLW       " "
0133   2???               M         CALL        WR_DATA
                      00502         WRT_LCD     "*"
0134   302A               M         MOVLW       "*"
0135   2???               M         CALL        WR_DATA
                      00503         WRT_LCD     " "
0136   3020               M         MOVLW       " "
0137   2???               M         CALL        WR_DATA
                      00504         WRT_LCD     "T"
0138   3054               M         MOVLW       "T"
0139   2???               M         CALL        WR_DATA
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00505         WRT_LCD     "O"
013A   304F               M         MOVLW       "O"
013B   2???               M         CALL        WR_DATA
                      00506         WRT_LCD     " "
013C   3020               M         MOVLW       " "
013D   2???               M         CALL        WR_DATA
                      00507         WRT_LCD     "S"
013E   3053               M         MOVLW       "S"
013F   2???               M         CALL        WR_DATA
                      00508         WRT_LCD     "T"
0140   3054               M         MOVLW       "T"
0141   2???               M         CALL        WR_DATA
                      00509         WRT_LCD     "A"
0142   3041               M         MOVLW       "A"
0143   2???               M         CALL        WR_DATA
                      00510         WRT_LCD     "R"
0144   3052               M         MOVLW       "R"
0145   2???               M         CALL        WR_DATA
                      00511         WRT_LCD     "T"
0146   3054               M         MOVLW       "T"
0147   2???               M         CALL        WR_DATA
0148   0008           00512         RETURN
                      00513         
                      00514 ;******************************************************************************;
                      00515 ;                                GOODBYE                                       ;
                      00516 ;******************************************************************************;
0149                  00517 STOP_STDBY_MSG
                      00518         WRT_LCD     "H"
0149   3048               M         MOVLW       "H"
014A   2???               M         CALL        WR_DATA
                      00519         WRT_LCD     "I"
014B   3049               M         MOVLW       "I"
014C   2???               M         CALL        WR_DATA
                      00520         WRT_LCD     "T"
014D   3054               M         MOVLW       "T"
014E   2???               M         CALL        WR_DATA
                      00521         WRT_LCD     " "
014F   3020               M         MOVLW       " "
0150   2???               M         CALL        WR_DATA
                      00522         WRT_LCD     "*"
0151   302A               M         MOVLW       "*"
0152   2???               M         CALL        WR_DATA
                      00523         WRT_LCD     " "
0153   3020               M         MOVLW       " "
0154   2???               M         CALL        WR_DATA
                      00524         WRT_LCD     "F"
0155   3046               M         MOVLW       "F"
0156   2???               M         CALL        WR_DATA
                      00525         WRT_LCD     "O"
0157   304F               M         MOVLW       "O"
0158   2???               M         CALL        WR_DATA
                      00526         WRT_LCD     "R"
0159   3052               M         MOVLW       "R"
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

015A   2???               M         CALL        WR_DATA
                      00527         WRT_LCD     " "
015B   3020               M         MOVLW       " "
015C   2???               M         CALL        WR_DATA
                      00528         WRT_LCD     "D"
015D   3044               M         MOVLW       "D"
015E   2???               M         CALL        WR_DATA
                      00529         WRT_LCD     "A"
015F   3041               M         MOVLW       "A"
0160   2???               M         CALL        WR_DATA
                      00530         WRT_LCD     "T"
0161   3054               M         MOVLW       "T"
0162   2???               M         CALL        WR_DATA
                      00531         WRT_LCD     "A"
0163   3041               M         MOVLW       "A"
0164   2???               M         CALL        WR_DATA
0165   0008           00532         RETURN
                      00533          
                      00534 ;******************************************************************************;
                      00535 ;                                 DATA                                         ;
                      00536 ;******************************************************************************;
0166                  00537 WRT_DATA        
                      00538         WRT_LCD     "N"
0166   304E               M         MOVLW       "N"
0167   2???               M         CALL        WR_DATA
                      00539         WRT_LCD     "U"
0168   3055               M         MOVLW       "U"
0169   2???               M         CALL        WR_DATA
                      00540         WRT_LCD     "M"
016A   304D               M         MOVLW       "M"
016B   2???               M         CALL        WR_DATA
                      00541         WRT_LCD     " "
016C   3020               M         MOVLW       " "
016D   2???               M         CALL        WR_DATA
                      00542         WRT_LCD     "S"
016E   3053               M         MOVLW       "S"
016F   2???               M         CALL        WR_DATA
                      00543         WRT_LCD     "P"
0170   3050               M         MOVLW       "P"
0171   2???               M         CALL        WR_DATA
                      00544         WRT_LCD     "O"
0172   304F               M         MOVLW       "O"
0173   2???               M         CALL        WR_DATA
                      00545         WRT_LCD     "T"
0174   3054               M         MOVLW       "T"
0175   2???               M         CALL        WR_DATA
                      00546         WRT_LCD     "S"
0176   3053               M         MOVLW       "S"
0177   2???               M         CALL        WR_DATA
                      00547         WRT_LCD     ":"
0178   303A               M         MOVLW       ":"
0179   2???               M         CALL        WR_DATA
                      00548         WRT_LCD     " "
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

017A   3020               M         MOVLW       " "
017B   2???               M         CALL        WR_DATA
                      00549         WRT_MEM_LCD num_spots
017C   0859               M         MOVFW       num_spots
017D   2???               M         CALL        WR_DATA
017E   0008           00550         RETURN
                      00551 ;******************************************************************************;
                      00552 ;                           RETREIVE START TIME                                ;
                      00553 ;******************************************************************************;
017F                  00554 GET_START_TIME
                      00555         ;Get minute             
                      00556         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
017F   3001               M         movlw       0x01
0180   1283 1303          M         banksel     0x73
0182   00F3               M         movwf       0x73
0183   2???               M         call        read_rtc
0184   1283 1303          M         banksel     0x75
0186   0875               M         movf        0x75,w
0187   2???               M         call        rtc_convert   
0188   0877           00557         MOVFW       0X77
0189   00CA           00558         MOVWF       start_min10
018A   0878           00559         MOVFW       0X78
018B   00C9           00560         MOVWF       start_min
                      00561 
                      00562         ;Get seconds
                      00563         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
018C   3000               M         movlw       0x00
018D   1283 1303          M         banksel     0x73
018F   00F3               M         movwf       0x73
0190   2???               M         call        read_rtc
0191   1283 1303          M         banksel     0x75
0193   0875               M         movf        0x75,w
0194   2???               M         call        rtc_convert   
0195   0877           00564         MOVFW       0X77
0196   00CC           00565         MOVWF       start_sec10
0197   0878           00566         MOVFW       0X78
0198   00CB           00567         MOVWF       start_sec
0199   0008           00568         RETURN
                      00569 ;******************************************************************************;
                      00570 ;                           RETREIVE STOP TIME                                 ;
                      00571 ;******************************************************************************;
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

019A                  00572 GET_STOP_TIME
                      00573         ;Get minute             
                      00574         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
019A   3001               M         movlw       0x01
019B   1283 1303          M         banksel     0x73
019D   00F3               M         movwf       0x73
019E   2???               M         call        read_rtc
019F   1283 1303          M         banksel     0x75
01A1   0875               M         movf        0x75,w
01A2   2???               M         call        rtc_convert   
01A3   0877           00575         MOVFW       0X77
01A4   00CE           00576         MOVWF       stop_min10
01A5   0878           00577         MOVFW       0X78
01A6   00CD           00578         MOVWF       stop_min
                      00579 
                      00580         ;Get seconds
                      00581         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01A7   3000               M         movlw       0x00
01A8   1283 1303          M         banksel     0x73
01AA   00F3               M         movwf       0x73
01AB   2???               M         call        read_rtc
01AC   1283 1303          M         banksel     0x75
01AE   0875               M         movf        0x75,w
01AF   2???               M         call        rtc_convert   
01B0   0877           00582         MOVFW       0X77
01B1   00D0           00583         MOVWF       stop_sec10
01B2   0878           00584         MOVFW       0X78
01B3   00CF           00585         MOVWF       stop_sec
01B4   0008           00586         RETURN
                      00587 ;******************************************************************************;
                      00588 ;                       DISPLAY RTC TIME TO LCD                                ;
                      00589 ;******************************************************************************;
01B5                  00590 SHOW_RTC
                      00591         ;clear LCD screen
01B5   3001           00592         movlw       b'00000001'
01B6   2???           00593         call        WR_INS
                      00594 
                      00595         ;Get year
                      00596         WRT_LCD     "2"
01B7   3032               M         MOVLW       "2"
01B8   2???               M         CALL        WR_DATA
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00597         WRT_LCD     "0"
01B9   3030               M         MOVLW       "0"
01BA   2???               M         CALL        WR_DATA
                      00598         rtc_read    0x06                ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01BB   3006               M         movlw       0x06
01BC   1283 1303          M         banksel     0x73
01BE   00F3               M         movwf       0x73
01BF   2???               M         call        read_rtc
01C0   1283 1303          M         banksel     0x75
01C2   0875               M         movf        0x75,w
01C3   2???               M         call        rtc_convert   
                      00599         WRT_MEM_LCD 0x77
01C4   0877               M         MOVFW       0x77
01C5   2???               M         CALL        WR_DATA
                      00600         WRT_MEM_LCD 0x78
01C6   0878               M         MOVFW       0x78
01C7   2???               M         CALL        WR_DATA
                      00601 
                      00602         WRT_LCD     "/"
01C8   302F               M         MOVLW       "/"
01C9   2???               M         CALL        WR_DATA
                      00603 
                      00604         ;Get month
                      00605         rtc_read    0x05                ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01CA   3005               M         movlw       0x05
01CB   1283 1303          M         banksel     0x73
01CD   00F3               M         movwf       0x73
01CE   2???               M         call        read_rtc
01CF   1283 1303          M         banksel     0x75
01D1   0875               M         movf        0x75,w
01D2   2???               M         call        rtc_convert   
                      00606         WRT_MEM_LCD 0x77
01D3   0877               M         MOVFW       0x77
01D4   2???               M         CALL        WR_DATA
                      00607         WRT_MEM_LCD 0x78
01D5   0878               M         MOVFW       0x78
01D6   2???               M         CALL        WR_DATA
                      00608 
                      00609         WRT_LCD     "/"
01D7   302F               M         MOVLW       "/"
01D8   2???               M         CALL        WR_DATA
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00610 
                      00611         ;Get day
                      00612         rtc_read    0x04                ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01D9   3004               M         movlw       0x04
01DA   1283 1303          M         banksel     0x73
01DC   00F3               M         movwf       0x73
01DD   2???               M         call        read_rtc
01DE   1283 1303          M         banksel     0x75
01E0   0875               M         movf        0x75,w
01E1   2???               M         call        rtc_convert   
                      00613         WRT_MEM_LCD 0x77
01E2   0877               M         MOVFW       0x77
01E3   2???               M         CALL        WR_DATA
                      00614         WRT_MEM_LCD 0x78
01E4   0878               M         MOVFW       0x78
01E5   2???               M         CALL        WR_DATA
                      00615 
01E6   30C0           00616         movlw       B'11000000'         ;Next line displays (hour):(min):(sec) **:**:**
01E7   2???           00617         call        WR_INS
                      00618         ;Get hour
                      00619         rtc_read    0x02                ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01E8   3002               M         movlw       0x02
01E9   1283 1303          M         banksel     0x73
01EB   00F3               M         movwf       0x73
01EC   2???               M         call        read_rtc
01ED   1283 1303          M         banksel     0x75
01EF   0875               M         movf        0x75,w
01F0   2???               M         call        rtc_convert   
                      00620         WRT_MEM_LCD 0x77
01F1   0877               M         MOVFW       0x77
01F2   2???               M         CALL        WR_DATA
                      00621         WRT_MEM_LCD 0x78
01F3   0878               M         MOVFW       0x78
01F4   2???               M         CALL        WR_DATA
                      00622         WRT_LCD     ":"
01F5   303A               M         MOVLW       ":"
01F6   2???               M         CALL        WR_DATA
                      00623 
                      00624         ;Get minute             
                      00625         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01F7   3001               M         movlw       0x01
01F8   1283 1303          M         banksel     0x73
01FA   00F3               M         movwf       0x73
01FB   2???               M         call        read_rtc
01FC   1283 1303          M         banksel     0x75
01FE   0875               M         movf        0x75,w
01FF   2???               M         call        rtc_convert   
                      00626         WRT_MEM_LCD 0x77
0200   0877               M         MOVFW       0x77
0201   2???               M         CALL        WR_DATA
                      00627         WRT_MEM_LCD 0x78
0202   0878               M         MOVFW       0x78
0203   2???               M         CALL        WR_DATA
                      00628         WRT_LCD     ":"
0204   303A               M         MOVLW       ":"
0205   2???               M         CALL        WR_DATA
                      00629 
                      00630         ;Get seconds
                      00631         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0206   3000               M         movlw       0x00
0207   1283 1303          M         banksel     0x73
0209   00F3               M         movwf       0x73
020A   2???               M         call        read_rtc
020B   1283 1303          M         banksel     0x75
020D   0875               M         movf        0x75,w
020E   2???               M         call        rtc_convert   
                      00632         WRT_MEM_LCD 0x77
020F   0877               M         MOVFW       0x77
0210   2???               M         CALL        WR_DATA
                      00633         WRT_MEM_LCD 0x78
0211   0878               M         MOVFW       0x78
0212   2???               M         CALL        WR_DATA
                      00634 
0213   0008           00635         RETURN
                      00636 ;******************************************************************************;
                      00637 ;                       INITIALIZE RTC TIME                                    ;
                      00638 ;******************************************************************************;                
0214                  00639 SET_RTC_TIME
                      00640         rtc_resetAll    ;reset rtc
                          M ;input:         none
                          M ;output:        none
                          M ;desc:          Resets all the time keeping registers on the RTC to zero
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0214   1283 1303          M         banksel     0x74
0216   01F4               M         clrf        0x74
0217   1283 1303          M         banksel     0x73
0219   01F3               M         clrf        0x73
021A   2???               M         call        write_rtc           ;Write 0 to Seconds
021B   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
021D   0AF3               M         incf        0x73                        ;Set register address to 1
021E   2???               M         call        write_rtc
021F   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0221   0AF3               M         incf        0x73                        ;Set register address to 2
0222   2???               M         call        write_rtc
0223   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0225   0AF3               M         incf        0x73                        ;Set register address to 3
0226   2???               M         call        write_rtc
0227   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0229   0AF3               M         incf        0x73                        ;Set register address to 4
022A   2???               M         call        write_rtc
022B   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
022D   0AF3               M         incf        0x73                        ;Set register address to 5
022E   2???               M         call        write_rtc
022F   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0231   0AF3               M         incf        0x73                        ;Set register address to 6
0232   2???               M         call        write_rtc
                      00641 
                      00642         rtc_set     0x00,       B'10000000'
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0233   1283 1303          M         banksel     0x73
0235   3000               M         movlw       0x00
0236   00F3               M         movwf       0x73
0237   1283 1303          M         banksel     0x74
0239   3080               M         movlw       B'10000000'
023A   00F4               M         movwf       0x74        
023B   2???               M         call        write_rtc
                      00643 
                      00644         ;set time 
                      00645         rtc_set     0x06,       B'00010110'             ; Year
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
023C   1283 1303          M         banksel     0x73
023E   3006               M         movlw       0x06
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

023F   00F3               M         movwf       0x73
0240   1283 1303          M         banksel     0x74
0242   3016               M         movlw       B'00010110'
0243   00F4               M         movwf       0x74        
0244   2???               M         call        write_rtc
                      00646         rtc_set     0x05,       B'00000100'             ; Month
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0245   1283 1303          M         banksel     0x73
0247   3005               M         movlw       0x05
0248   00F3               M         movwf       0x73
0249   1283 1303          M         banksel     0x74
024B   3004               M         movlw       B'00000100'
024C   00F4               M         movwf       0x74        
024D   2???               M         call        write_rtc
                      00647         rtc_set     0x04,       B'00000110'             ; Date
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
024E   1283 1303          M         banksel     0x73
0250   3004               M         movlw       0x04
0251   00F3               M         movwf       0x73
0252   1283 1303          M         banksel     0x74
0254   3006               M         movlw       B'00000110'
0255   00F4               M         movwf       0x74        
0256   2???               M         call        write_rtc
                      00648         rtc_set     0x03,       B'00000010'             ; Day
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0257   1283 1303          M         banksel     0x73
0259   3003               M         movlw       0x03
025A   00F3               M         movwf       0x73
025B   1283 1303          M         banksel     0x74
025D   3002               M         movlw       B'00000010'
025E   00F4               M         movwf       0x74        
025F   2???               M         call        write_rtc
                      00649         rtc_set     0x02,       B'00000000'             ; Hours
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0260   1283 1303          M         banksel     0x73
0262   3002               M         movlw       0x02
0263   00F3               M         movwf       0x73
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0264   1283 1303          M         banksel     0x74
0266   3000               M         movlw       B'00000000'
0267   00F4               M         movwf       0x74        
0268   2???               M         call        write_rtc
                      00650         rtc_set     0x01,       B'00000000'             ; Minutes
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0269   1283 1303          M         banksel     0x73
026B   3001               M         movlw       0x01
026C   00F3               M         movwf       0x73
026D   1283 1303          M         banksel     0x74
026F   3000               M         movlw       B'00000000'
0270   00F4               M         movwf       0x74        
0271   2???               M         call        write_rtc
                      00651         rtc_set     0x00,       B'00000000'             ; Seconds
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0272   1283 1303          M         banksel     0x73
0274   3000               M         movlw       0x00
0275   00F3               M         movwf       0x73
0276   1283 1303          M         banksel     0x74
0278   3000               M         movlw       B'00000000'
0279   00F4               M         movwf       0x74        
027A   2???               M         call        write_rtc
027B   0008           00652         return
                      00653 
                      00654 ;******************************************************************************;                
                      00655 ;******************************************************************************;
                      00656 ;******************************************************************************;
027C                  00657 DIV16X8 ; DIV_HI and DIV_LO / DIVSOR.  result to Q
                      00658                 ; does not deal with divide by 0 case
027C   01C5           00659         CLRF Q
027D                  00660 DIV_1
027D   0844           00661         MOVF DIVISOR, W
027E   02C3           00662         SUBWF DIV_LO, F
027F   1C03           00663         BTFSS STATUS, C ; if positive skip
0280   2???           00664         GOTO BORROW
0281   2???           00665         GOTO DIV_2
0282                  00666 BORROW
0282   3001           00667         MOVLW 0x01
0283   02C2           00668         SUBWF DIV_HI, F ; DIV_HI = DIV_HI - 1
0284   1C03           00669         BTFSS STATUS, C ; if no borrow occurred
0285   2???           00670         GOTO DIV_DONE   
0286                  00671 DIV_2
0286   0AC5           00672         INCF Q, F
0287   2???           00673         GOTO DIV_1
0288                  00674 DIV_DONE
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0288   0008           00675         RETURN
                      00676 
0289                  00677 DEL_1S
0289   3015           00678         movlw   0x15
028A   00C6           00679         movwf   d1
028B   3074           00680         movlw   0x74
028C   00C7           00681         movwf   d2
028D   3006           00682         movlw   0x06
028E   00C8           00683         movwf   d3
028F                  00684 DEL_1S_0
028F   0BC6           00685         decfsz  d1, f
0290   2???           00686         goto    $+2
0291   0BC7           00687         decfsz  d2, f
0292   2???           00688         goto    $+2
0293   0BC8           00689         decfsz  d3, f
0294   2???           00690         goto    DEL_1S_0
0295   2???           00691         goto    $+1
0296   2???           00692         goto    $+1
0297   0008           00693         return
                      00694         
0298                  00695 LONG_DLY
0298   30FF           00696         MOVLW       0xFF
0299   00BF           00697         MOVWF       long_del
029A                  00698 LD_LOOP 
Warning[207]: Found label after column 1. (LCD_DLY)
029A                  00699         LCD_DLY
029A   0BBF           00700         DECFSZ      long_del, f
029B   2???           00701         GOTO        LD_LOOP
029C   0008           00702         RETURN
                      00703         
029D                  00704 DEL_10MS
029D   3086           00705         movlw   0x86
029E   00C6           00706         movwf   d1
029F   3014           00707         movlw   0x14
02A0   00C7           00708         movwf   d2
02A1                  00709 DEL_10MS_0
02A1   0BC6           00710         decfsz  d1, f
02A2   2???           00711         goto    $+2
02A3   0BC7           00712         decfsz  d2, f
02A4   2???           00713         goto    DEL_10MS_0
02A5   2???           00714         goto    $+1
02A6   0000           00715         nop
02A7   0008           00716         return
                      00717 
02A8                  00718 DEL_2_1MS
02A8   3018           00719         movlw   0x18
02A9   00C6           00720         movwf   d1
02AA   3005           00721         movlw   0x05
02AB   00C7           00722         movwf   d2
02AC                  00723 DEL_2_1MS_0
02AC   0BC6           00724         decfsz  d1, f
02AD   2???           00725         goto    $+2
02AE   0BC7           00726         decfsz  d2, f
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02AF   2???           00727         goto    DEL_2_1MS_0
02B0   2???           00728         goto    $+1
02B1   0000           00729         nop
02B2   0008           00730         return
                      00731         
02B3                  00732 DEL_1_5MS
02B3   30EC           00733         movlw   0xEC
02B4   00C6           00734         movwf   d1
02B5   3003           00735         movlw   0x03
02B6   00C7           00736         movwf   d2
02B7                  00737 DEL_1_5MS_0
02B7   0BC6           00738         decfsz  d1, f
02B8   2???           00739         goto    $+2
02B9   0BC7           00740         decfsz  d2, f
02BA   2???           00741         goto    DEL_1_5MS_0
02BB   2???           00742         goto    $+1
02BC   0000           00743         nop
02BD   0008           00744         return
                      00745         
02BE                  00746 DEL_20US
02BE   300F           00747         movlw   0x0F
02BF   00C6           00748         movwf   d1
02C0                  00749 DEL_20US_0
02C0   0BC6           00750         decfsz  d1, f
02C1   2???           00751         goto    DEL_20US_0
02C2   0008           00752         return
                      00753 
Warning[207]: Found label after column 1. (FINISH)
02C3                  00754         FINISH  
02C3   2???           00755         GOTO    FINISH
                      00756         
3F72                  00757         END
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADD                               00000036
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ARM_CLOSE                         0000008B
ARM_OPEN                          00000083
B1                                0000003A
B2                                0000003B
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BORROW                            00000282
BRGH                              00000002
C                                 00000000
CALIBRATE                         0000003C
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

CKE                               00000006
CKP                               00000004
CLR_LCD                           00000000
CONTROL                           00000035
CREN                              00000004
CSRC                              00000007
D                                 00000005
DAT                               00000037
DATA_ADDRESS                      00000005
DATA_LOOP                         00000106
DC                                00000001
DEL_10MS                          0000029D
DEL_10MS_0                        000002A1
DEL_1S                            00000289
DEL_1S_0                          0000028F
DEL_1_5MS                         000002B3
DEL_1_5MS_0                       000002B7
DEL_20US                          000002BE
DEL_20US_0                        000002C0
DEL_2_1MS                         000002A8
DEL_2_1MS_0                       000002AC
DIV16X8                           0000027C
DIVISOR                           00000044
DIV_1                             0000027D
DIV_2                             00000286
DIV_DONE                          00000288
DIV_HI                            00000042
DIV_LO                            00000043
DOUT                              00000039
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FINAL_BACKUP                      000000C6
FINISH                            000002C3
FSR                               00000004
GCEN                              00000007
GET_START_TIME                    0000017F
GET_STOP_TIME                     0000019A
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I2C_DATA                          00000005
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INIT                              00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
INT_HANDLER                       00000047
IRP                               00000007
InitLCD                           00000000
LCD_DLY                           0000029A
LCD_INS                           
LD_LOOP                           0000029A
LONG_DLY                          00000298
MOTOR_DIR_CTRL                    PORTC, 5
MULT                              
MX_LOOP                           00000054
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NO_SPOT                           0000007C
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
Q                                 00000045
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_IRS                          00000052
READ_WRITE                        00000002
RETURN_HOME                       000000BE
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SCAN                              00000045
SEN                               00000000
SET_RTC_TIME                      00000214
SHOW_RTC                          000001B5
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
START_MSG                         0000012C
START_STDBY                       0000002E
STATUS                            00000003
STOP_DATA                         000000D1
STOP_STDBY                        000000C9
STOP_STDBY_MSG                    00000149
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
USHOLDL                           0000009A
USHOLDS                           000000AF
USONIC_LAT                        00000094
USONIC_LAT_ECHO                   00000097
USONIC_SUP                        000000A9
USONIC_SUP_ECHO                   000000AC
W                                 00000000
WCOL                              00000007
WHL_ENC                           00000080
WR                                00000001
WREN                              00000002
WRERR                             00000003
WRT_DATA                          00000166
WRT_LCD                           
WRT_MEM_LCD                       
WR_DATA                           00000000
WR_INS                            00000000
XBUF                              00000033
Z                                 00000002
_.org_1_0034                      00000034
_.org_1_0098                      00000098
_.org_1_00AD                      000000AD
_.org_1_0290                      00000290
_.org_1_0292                      00000292
_.org_1_0295                      00000295
_.org_1_0296                      00000296
_.org_1_02A2                      000002A2
_.org_1_02A5                      000002A5
_.org_1_02AD                      000002AD
_.org_1_02B0                      000002B0
_.org_1_02B8                      000002B8
_.org_1_02BB                      000002BB
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
count                             00000034
crit_dist                         d'5'
d1                                00000046
d2                                00000047
d3                                00000048
dt1                               00000030
dt2                               00000031
dt3                               00000032
flag                              00000038
i2c_common_setup                  00000000
lcd_d1                            0000003D
lcd_d2                            0000003E
lcd_tmp                           0000003C
long_del                          0000003F
measured_distance_lat             00000055
measured_distance_sup             00000056
MPASM 5.65                          MAIN.ASM   3-10-2016  13:21:04         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

multiplex_count                   00000052
num_spots                         00000059
read_rtc                          00000000
rob_lat_distance                  00000053
rob_long_distance                 00000054
rob_return                        00000057
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
spot_base_loc                     0000005A
spot_count                        00000058
spot_detected                     00000051
start_min                         00000049
start_min10                       0000004A
start_sec                         0000004B
start_sec10                       0000004C
stop_min                          0000004D
stop_min10                        0000004E
stop_sec                          0000004F
stop_sec10                        00000050
temp_status                       00000041
temp_w                            00000040
write_rtc                         00000000

Errors   :     0
Warnings :     2 reported,     0 suppressed
Messages :    19 reported,     0 suppressed

