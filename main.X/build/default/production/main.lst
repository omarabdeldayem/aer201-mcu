MPASM 5.65                          MAIN.ASM   2-27-2016  19:35:50         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;******************************************************************************;
                      00002 ;        ____    ___  ______    ___  ____       ____  ____  ____    ___  ____  ;
                      00003 ;       |    \  /  _]|      T  /  _]|    \     |    \l    j|    \  /  _]|    \ ;
                      00004 ;       |  o  )/  [_ |      | /  [_ |  D  )    |  o  )|  T |  o  )/  [_ |  D  );
                      00005 ;       |   _/Y    _]l_j  l_jY    _]|    /     |   _/ |  | |   _/Y    _]|    / ;
                      00006 ;       |  |  |   [_   |  |  |   [_ |    \     |  |   |  | |  |  |   [_ |    \ ;
                      00007 ;       |  |  |     T  |  |  |     T|  .  Y    |  |   j  l |  |  |     T|  .  Y;
                      00008 ;       l__j  l_____j  l__j  l_____jl__j\_j    l__j  |____jl__j  l_____jl__j\_j;
                      00009 ;------------------------------------------------------------------------------;
                      00010 ;               AER201 Team 61 'Peter Piper' Pipe Inspector                    ;
                      00011 ;                        Author: Omar Abdeldayem                               ;
                      00012 ;                           Created: 1/12/2016                                 ;
                      00013 ;------------------------------------------------------------------------------;
                      00014 ; DESCRIPTION:                                                                                          
                                                               ;
                      00015 ; It does shit, yo.                                                                                     
                                                               ;
                      00016 ;******************************************************************************;
                      00017 ;******************************************************************************;
                      00018 ;******************************************************************************;
                      00019 
                      00020         List    p=16f877                    ; list directive to define processor
                      00021         #include        <p16f877.inc>       ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
2007   3F72           00022         __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP
                            _OFF
                      00023 
                      00024         #include        <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel     0x74
                      00011         clrf        0x74
                      00012         banksel     0x73
                      00013         clrf        0x73
                      00014         call        write_rtc           ;Write 0 to Seconds
                      00015         banksel     0x73
                      00016         incf        0x73                        ;Set register address to 1
MPASM 5.65                          MAIN.ASM   2-27-2016  19:35:50         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00017         call        write_rtc
                      00018         banksel     0x73
                      00019         incf        0x73                        ;Set register address to 2
                      00020         call        write_rtc
                      00021         banksel     0x73
                      00022         incf        0x73                        ;Set register address to 3
                      00023         call        write_rtc
                      00024         banksel     0x73
                      00025         incf        0x73                        ;Set register address to 4
                      00026         call        write_rtc
                      00027         banksel     0x73
                      00028         incf        0x73                        ;Set register address to 5
                      00029         call        write_rtc
                      00030         banksel     0x73
                      00031         incf        0x73                        ;Set register address to 6
                      00032         call        write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set macro       addliteral, datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel     0x73
                      00042         movlw       addliteral
                      00043         movwf       0x73
                      00044         banksel     0x74
                      00045         movlw       datliteral
                      00046         movwf       0x74        
                      00047         call        write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read macro      addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw       addliteral
                      00058         banksel     0x73
                      00059         movwf       0x73
                      00060         call        read_rtc
                      00061         banksel     0x75
                      00062         movf        0x75,w
                      00063         call        rtc_convert   
                      00064         endm
                      00065 
                      00066 
                      00067 
                      00068 
                      00069 
MPASM 5.65                          MAIN.ASM   2-27-2016  19:35:50         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00070 
                      00025         #include        <lcd.inc>
Warning[205]: Found directive in column 1. (extern)
  0000                00001 extern  InitLCD,WR_INS,WR_DATA,CLR_LCD
                      00002 
                      00003 
                      00026 ;******************************************************************************;
                      00027 ;                               BANK0 RAM                                      ;
                      00028 ;******************************************************************************;
                      00029         CBLOCK      0x30
                      00030                     ; RTC I2C Mem
  00000030            00031         dt1         ; 0x30          
  00000031            00032         dt2
  00000032            00033         dt3
  00000033            00034         XBUF
  00000034            00035         count
  00000035            00036         CONTROL
  00000036            00037         ADD
  00000037            00038         DAT
  00000038            00039         flag
  00000039            00040         DOUT
  0000003A            00041         B1
  0000003B            00042         B2
                      00043                     ; LCD MEM
  0000003C            00044         lcd_tmp
  0000003D            00045         lcd_d1
  0000003E            00046         lcd_d2
  0000003F            00047         long_del
  00000040            00048         temp_w      ; 0x40
  00000041            00049         temp_status
                      00050                     ; ROBOT VARS
  00000042            00051         start_min
  00000043            00052         start_min10
  00000044            00053         start_sec
  00000045            00054         start_sec10
  00000046            00055         stop_min
  00000047            00056         stop_min10
  00000048            00057         stop_sec
  00000049            00058         stop_sec10
  0000004A            00059         multiplex_count
  0000004B            00060         threshold_distance
  0000004C            00061         rob_distance
  0000004D            00062         measured_distance
  0000004E            00063         rob_return
  0000004F            00064         spot_count
  00000050            00065         num_spots
  00000051            00066         spot_base_loc
                      00067         ENDC
                      00068 
                      00069 ;******************************************************************************;
                      00070 ;                               MACROS                                         ;
                      00071 ;******************************************************************************;
                      00072 MULT    macro       val1, val2, result
MPASM 5.65                          MAIN.ASM   2-27-2016  19:35:50         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00073         MOVF        val1, W
                      00074         ADDWF       val1, W
                      00075         MOVWF       result
                      00076         DECFSZ      val2, f
                      00077         GOTO        $-3
                      00078         endm
                      00079         
                      00080 WRT_LCD macro       val
                      00081         MOVLW       val
                      00082         CALL        WR_DATA
                      00083         endm
                      00084 LCD_INS macro       val
                      00085         MOVLW       val
                      00086         CALL        WR_INS
                      00087         endm
                      00088         
                      00089 WRT_MEM_LCD macro   val
                      00090         MOVFW       val
                      00091         CALL        WR_DATA
                      00092         endm
                      00093 
                      00094 LCD_DLY macro                           ;Delay ~160us
                      00095         MOVLW       0xFF
                      00096         MOVWF       lcd_d1
                      00097         DECFSZ      lcd_d1, f
                      00098         GOTO        $-1
                      00099         endm
                      00100 
                      00101 ;******************************************************************************;
                      00102 ;                          VECTOR TABLE                                        ;
                      00103 ;******************************************************************************;
                      00104         ORG         0x0000              ; RESET vector must always be at 0x00
0000   2???           00105         GOTO        INIT                ; Just jump to the main code section.
                      00106         ORG         0x0004
0004   2???           00107         GOTO        INT_HANDLER
                      00108 
                      00109 ;******************************************************************************;
                      00110 ;                         ROBOT INITIALIZATION                                 ;
                      00111 ;******************************************************************************;
0005                  00112 INIT
0005   1683           00113         BSF         STATUS, RP0         ; Select bank 1
0006   018B           00114         CLRF        INTCON              ; Disable interrupts for now
                      00115                                         
0007   3018           00116         MOVLW       b'00011000'         ; PORT A pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0008   0085           00117         MOVWF       TRISA
0009   30F3           00118         MOVLW       b'11110011'         ; PORT B pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000A   0086           00119         MOVWF       TRISB
000B   3079           00120         MOVLW       b'01111001'         ; PORT C pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000C   0087           00121         MOVWF       TRISC
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
MPASM 5.65                          MAIN.ASM   2-27-2016  19:35:50         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D   0188           00122         CLRF        TRISD               ; PORT D pin mapping
000E   3007           00123         MOVLW       b'00000111'         ; PORT E pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000F   0089           00124         MOVWF       TRISE
                      00125                      
0010   3080           00126         MOVLW       b'10000000'         ; PWM pulsing period (484Hz)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0011   0092           00127         MOVWF       PR2
                      00128        
0012   1283           00129         BCF         STATUS, RP0         ; select bank 0
                      00130         
                      00131 ;       BSF         INTCON, RBIE        ; Enable interrupts
                      00132 ;       BSF         INTCON, INTE
                      00133 ;       BSF         INTCON, GIE
                      00134         
0013   0195           00135         CLRF        CCPR1L              ; Setup PWM pins
0014   019B           00136         CLRF        CCPR2L
0015   300C           00137         MOVLW       B'00001100'
0016   0097           00138         MOVWF       CCP1CON
0017   009D           00139         MOVWF       CCP2CON
                      00140         
0018   3002           00141         MOVLW       B'00000010'         ; Initialize and start timer 2
0019   0092           00142         MOVWF       T2CON
001A   0191           00143         CLRF        TMR2
001B   1512           00144         BSF         T2CON, TMR2ON
                      00145         
001C   0185           00146         clrf        PORTA
001D   0186           00147         clrf        PORTB
001E   0187           00148         clrf        PORTC 
001F   0188           00149         clrf        PORTD
                      00150          
0020   2???           00151         CALL        i2c_common_setup
                      00152                     rtc_resetAll
                          M ;input:         none
                          M ;output:        none
                          M ;desc:          Resets all the time keeping registers on the RTC to zero
0021   1283 1303          M         banksel     0x74
0023   01F4               M         clrf        0x74
0024   1283 1303          M         banksel     0x73
0026   01F3               M         clrf        0x73
0027   2???               M         call        write_rtc           ;Write 0 to Seconds
0028   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
002A   0AF3               M         incf        0x73                        ;Set register address to 1
002B   2???               M         call        write_rtc
002C   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
002E   0AF3               M         incf        0x73                        ;Set register address to 2
002F   2???               M         call        write_rtc
0030   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0032   0AF3               M         incf        0x73                        ;Set register address to 3
0033   2???               M         call        write_rtc
MPASM 5.65                          MAIN.ASM   2-27-2016  19:35:50         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0034   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0036   0AF3               M         incf        0x73                        ;Set register address to 4
0037   2???               M         call        write_rtc
0038   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
003A   0AF3               M         incf        0x73                        ;Set register address to 5
003B   2???               M         call        write_rtc
003C   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
003E   0AF3               M         incf        0x73                        ;Set register address to 6
003F   2???               M         call        write_rtc
0040   2???           00153         CALL        SET_RTC_TIME
0041   2???           00154         CALL        InitLCD
                      00155         
0042   3000           00156         MOVLW       b'0'                ; Initialize variables
0043   00D0           00157         MOVWF       num_spots
0044   00CF           00158         MOVWF       spot_count
                      00159                                         
                      00160                                         
0045   2???           00161         CALL        START_MSG
                      00162 
                      00163 ;******************************************************************************;
                      00164 ;                        ROBOT START AND STANDBY                               ;
                      00165 ;******************************************************************************;
0046                  00166 START_STDBY
0046   1C86           00167         BTFSS       PORTB, 1            ; Wait until data is available from the keypad
0047   2???           00168         GOTO        START_STDBY
                      00169 
0048   0E06           00170         SWAPF       PORTB, W            ; Read PortB<7:4> into W<3:0>
0049   390F           00171         ANDLW       0x0F
004A   2???           00172         CALL        CLR_LCD
                      00173 
004B   1886           00174         BTFSC       PORTB,1             ; Wait until key is released
004C   2???           00175         GOTO        $-1
                      00176         
004D   2???           00177         CALL        CLR_LCD
004E   2???           00178         CALL        GET_START_TIME
004F   2???           00179         GOTO        SCAN
                      00180 
                      00181 ;******************************************************************************;
                      00182 ;                           SENSOR CALIBRATION                                 ;
                      00183 ;******************************************************************************;
0050                  00184 CALIBRATE
0050   2???           00185         GOTO        CALIBRATE
                      00186         
                      00187 ;******************************************************************************;
                      00188 ;                         PIPE SCAN SUPERLOOP                                  ;
                      00189 ;******************************************************************************;
0051                  00190 SCAN
0051   2???           00191         CALL        PWML
0052   2???           00192         CALL        PWMR
                      00193 ;       CALL        USONIC_SEND_PULSE
MPASM 5.65                          MAIN.ASM   2-27-2016  19:35:50         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00194 ;       CALL        USONIC_READ_ECHO
                      00195 ;       CALL        SHOW_RTC                ; DEBUG
0053   2???           00196         CALL        READ_IRS
0054   2???           00197         GOTO        SCAN
                      00198         
                      00199 ;******************************************************************************;
                      00200 ;                          INTERRUPT HANDLER                                   ;
                      00201 ;******************************************************************************;
0055                  00202 INT_HANDLER
0055   00C0           00203         MOVWF       temp_w
0056   0E03           00204         SWAPF       STATUS, W
0057   00C1           00205         MOVWF       temp_status
0058   100B           00206         BCF         INTCON, RBIF
0059   108B           00207         BCF         INTCON, INTF          ; Clear the interrupt flag
005A   0E41           00208         SWAPF       temp_status, W
005B   0083           00209         MOVWF       STATUS
005C   0EC0           00210         SWAPF       temp_w, F
005D   0E40           00211         SWAPF       temp_w, W
005E   2???           00212         GOTO        STOP_STDBY
005F   0009           00213         RETFIE
                      00214         
                      00215 ;******************************************************************************;
                      00216 ;                           PWM CONTROL                                        ;
                      00217 ;******************************************************************************;
0060                  00218 PWML    
Message[305]: Using default destination of 1 (file).
0060   0F95           00219         INCFSZ      CCPR1L
0061   2???           00220         GOTO        PWML
0062                  00221 PWML_DN 
Message[305]: Using default destination of 1 (file).
0062   0B95           00222         DECFSZ      CCPR1L
0063   2???           00223         GOTO        PWML_DN
0064   0008           00224         RETURN
                      00225 
0065                  00226 PWMR    
Message[305]: Using default destination of 1 (file).
0065   0F9B           00227         INCFSZ      CCPR2L
0066   2???           00228         GOTO        PWMR
0067                  00229 PWMR_DN 
Message[305]: Using default destination of 1 (file).
0067   0B9B           00230         DECFSZ      CCPR2L
0068   2???           00231         GOTO        PWMR_DN
0069   0008           00232         RETURN
                      00233 
                      00234 ;******************************************************************************;
                      00235 ;                       CYCLE INFRARED SENSORS                                 ;
                      00236 ;******************************************************************************;
006A                  00237 READ_IRS
006A   3007           00238         MOVLW       d'7'
006B   00CA           00239         MOVWF       multiplex_count
006C                  00240 MX_LOOP 
006C   2???           00241         CALL        LONG_DLY
                      00242         ;BCF        PORTE, 0
MPASM 5.65                          MAIN.ASM   2-27-2016  19:35:50         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00243         ;BTFSC      multiplex_count, 0
                      00244         ;BSF        PORTE, 0
006D   1005           00245         BCF         PORTA, 0
006E   184A           00246         BTFSC       multiplex_count, 0
006F   1405           00247         BSF         PORTA, 0
0070   1085           00248         BCF         PORTA, 1
0071   18CA           00249         BTFSC       multiplex_count, 1
0072   1485           00250         BSF         PORTA, 1
0073   1105           00251         BCF         PORTA, 2
0074   194A           00252         BTFSC       multiplex_count, 2
0075   1505           00253         BSF         PORTA, 2
                      00254         ;BTFSS      PORTC, 0
                      00255         ;GOTO       $+2
                      00256         ;INCF       num_spots, f
Message[305]: Using default destination of 1 (file).
0076   0BCA           00257         DECFSZ      multiplex_count
0077   2???           00258         GOTO        MX_LOOP
0078   0008           00259         RETURN
                      00260         
                      00261 ;******************************************************************************;
                      00262 ;                       TOGGLE ARM STATE ROUTINE                               ;
                      00263 ;******************************************************************************;
0079                  00264 ARM_TOGGLE
                      00265         ; control servo to control arm
                      00266         ; if degree is set to 180, set to 0
                      00267         ; otherwise set to 0
0079   2???           00268         GOTO        ARM_TOGGLE
                      00269 
                      00270 ;******************************************************************************;
                      00271 ;                         ROBOT REALIGNMENT ROUTINE                            ;
                      00272 ;******************************************************************************;
007A                  00273 REALIGN
007A   0008           00274         RETURN
                      00275         
                      00276 ;******************************************************************************;
                      00277 ;                     ULTRASONIC SENSOR SUBROUTINES                            ;
                      00278 ;******************************************************************************;
007B                  00279 USONIC_SEND_PULSE
007B   1586           00280         BSF         PORTB, 3
Warning[225]: Invalid label in operand (LCD_DLY)
007C   2001           00281         CALL        LCD_DLY
007D   1186           00282         BCF         PORTB, 3
Warning[225]: Invalid label in operand (LCD_DLY)
007E   2001           00283         CALL        LCD_DLY
007F   0008           00284         RETURN
                      00285 
0080                  00286 USONIC_READ_ECHO
0080   0008           00287         RETURN
                      00288 
                      00289 ;******************************************************************************;
                      00290 ;                           RETURN HOME ROUTINE                                ;
                      00291 ;******************************************************************************;
0081                  00292 RETURN_HOME
MPASM 5.65                          MAIN.ASM   2-27-2016  19:35:50         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00293         
0081   0008           00294         RETURN
                      00295 
                      00296 
                      00297 ;******************************************************************************;
                      00298 ;                             STOP STANDBY                                     ;
                      00299 ;******************************************************************************;
0082                  00300 STOP_STDBY
0082   2???           00301         CALL        GET_STOP_TIME
                      00302 ;       CALL        STOP_STDBY_MSG
0083   1C86           00303         BTFSS       PORTB, 1            ; Wait until data is available from the keypad
0084   2???           00304         GOTO        STOP_STDBY
                      00305 
0085   0E06           00306         SWAPF       PORTB, W            ; Read PortB<7:4> into W<3:0>
0086   390F           00307         ANDLW       0x0F 
0087   2???           00308         CALL        CLR_LCD
0088   2???           00309         GOTO        STOP_DATA
                      00310 
                      00311 ;******************************************************************************;
                      00312 ;                               DISPLAY DATA                                   ;
                      00313 ;******************************************************************************;
0089                  00314 STOP_DATA       
0089   2???           00315         CALL        WRT_DATA
008A   2???           00316         CALL        LONG_DLY
008B   2???           00317         CALL        LONG_DLY
008C   2???           00318         CALL        LONG_DLY
008D   2???           00319         CALL        LONG_DLY
008E   2???           00320         CALL        LONG_DLY
008F   2???           00321         CALL        LONG_DLY
0090   2???           00322         CALL        LONG_DLY
                      00323         
0091   2???           00324         CALL        CLR_LCD
                      00325         
0092   3051           00326         MOVLW       spot_base_loc
0093   0084           00327         MOVWF       FSR
                      00328         
                      00329         
0094                  00330 DATA_LOOP       
                      00331         WRT_LCD     "S"
0094   3053               M         MOVLW       "S"
0095   2???               M         CALL        WR_DATA
                      00332         WRT_LCD     "P"
0096   3050               M         MOVLW       "P"
0097   2???               M         CALL        WR_DATA
                      00333         WRT_LCD     "O"
0098   304F               M         MOVLW       "O"
0099   2???               M         CALL        WR_DATA
                      00334         WRT_LCD     "T"
009A   3054               M         MOVLW       "T"
009B   2???               M         CALL        WR_DATA
                      00335         WRT_LCD     ":"
009C   303A               M         MOVLW       ":"
009D   2???               M         CALL        WR_DATA
MPASM 5.65                          MAIN.ASM   2-27-2016  19:35:50         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00336         WRT_LCD     " "
009E   3020               M         MOVLW       " "
009F   2???               M         CALL        WR_DATA
                      00337 ;       WRT_MEM_LCD INDF
                      00338         WRT_LCD     "c"
00A0   3063               M         MOVLW       "c"
00A1   2???               M         CALL        WR_DATA
                      00339         WRT_LCD     "m"
00A2   306D               M         MOVLW       "m"
00A3   2???               M         CALL        WR_DATA
                      00340         
00A4   2???           00341         CALL        LONG_DLY
00A5   2???           00342         CALL        LONG_DLY
00A6   2???           00343         CALL        LONG_DLY
00A7   2???           00344         CALL        LONG_DLY
00A8   2???           00345         CALL        LONG_DLY
00A9   2???           00346         CALL        LONG_DLY
00AA   2???           00347         CALL        LONG_DLY
00AB   2???           00348         CALL        LONG_DLY
00AC   2???           00349         CALL        LONG_DLY
00AD   2???           00350         CALL        CLR_LCD
00AE   0A84           00351         INCF        FSR, F
                      00352 
00AF   0BCF           00353         DECFSZ      spot_count, F
00B0   2???           00354         GOTO        DATA_LOOP
                      00355         
                      00356         WRT_LCD     "E"
00B1   3045               M         MOVLW       "E"
00B2   2???               M         CALL        WR_DATA
                      00357         WRT_LCD     "N"
00B3   304E               M         MOVLW       "N"
00B4   2???               M         CALL        WR_DATA
                      00358         WRT_LCD     "D"
00B5   3044               M         MOVLW       "D"
00B6   2???               M         CALL        WR_DATA
                      00359 
00B7   2???           00360         GOTO        FINISH
                      00361 
                      00362 ;******************************************************************************;
                      00363 ;                                  HELLO                                       ;
                      00364 ;******************************************************************************;
00B8                  00365 START_MSG
                      00366         WRT_LCD     "H"
00B8   3048               M         MOVLW       "H"
00B9   2???               M         CALL        WR_DATA
                      00367         WRT_LCD     "I"
00BA   3049               M         MOVLW       "I"
00BB   2???               M         CALL        WR_DATA
                      00368         WRT_LCD     "T"
00BC   3054               M         MOVLW       "T"
00BD   2???               M         CALL        WR_DATA
                      00369         WRT_LCD     " "
00BE   3020               M         MOVLW       " "
MPASM 5.65                          MAIN.ASM   2-27-2016  19:35:50         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00BF   2???               M         CALL        WR_DATA
                      00370         WRT_LCD     "*"
00C0   302A               M         MOVLW       "*"
00C1   2???               M         CALL        WR_DATA
                      00371         WRT_LCD     " "
00C2   3020               M         MOVLW       " "
00C3   2???               M         CALL        WR_DATA
                      00372         WRT_LCD     "T"
00C4   3054               M         MOVLW       "T"
00C5   2???               M         CALL        WR_DATA
                      00373         WRT_LCD     "O"
00C6   304F               M         MOVLW       "O"
00C7   2???               M         CALL        WR_DATA
                      00374         WRT_LCD     " "
00C8   3020               M         MOVLW       " "
00C9   2???               M         CALL        WR_DATA
                      00375         WRT_LCD     "S"
00CA   3053               M         MOVLW       "S"
00CB   2???               M         CALL        WR_DATA
                      00376         WRT_LCD     "T"
00CC   3054               M         MOVLW       "T"
00CD   2???               M         CALL        WR_DATA
                      00377         WRT_LCD     "A"
00CE   3041               M         MOVLW       "A"
00CF   2???               M         CALL        WR_DATA
                      00378         WRT_LCD     "R"
00D0   3052               M         MOVLW       "R"
00D1   2???               M         CALL        WR_DATA
                      00379         WRT_LCD     "T"
00D2   3054               M         MOVLW       "T"
00D3   2???               M         CALL        WR_DATA
00D4   0008           00380         RETURN
                      00381         
                      00382 ;******************************************************************************;
                      00383 ;                                GOODBYE                                       ;
                      00384 ;******************************************************************************;
00D5                  00385 STOP_STDBY_MSG
                      00386         WRT_LCD     "H"
00D5   3048               M         MOVLW       "H"
00D6   2???               M         CALL        WR_DATA
                      00387         WRT_LCD     "I"
00D7   3049               M         MOVLW       "I"
00D8   2???               M         CALL        WR_DATA
                      00388         WRT_LCD     "T"
00D9   3054               M         MOVLW       "T"
00DA   2???               M         CALL        WR_DATA
                      00389         WRT_LCD     " "
00DB   3020               M         MOVLW       " "
00DC   2???               M         CALL        WR_DATA
                      00390         WRT_LCD     "*"
00DD   302A               M         MOVLW       "*"
00DE   2???               M         CALL        WR_DATA
                      00391         WRT_LCD     " "
MPASM 5.65                          MAIN.ASM   2-27-2016  19:35:50         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00DF   3020               M         MOVLW       " "
00E0   2???               M         CALL        WR_DATA
                      00392         WRT_LCD     "F"
00E1   3046               M         MOVLW       "F"
00E2   2???               M         CALL        WR_DATA
                      00393         WRT_LCD     "O"
00E3   304F               M         MOVLW       "O"
00E4   2???               M         CALL        WR_DATA
                      00394         WRT_LCD     "R"
00E5   3052               M         MOVLW       "R"
00E6   2???               M         CALL        WR_DATA
                      00395         WRT_LCD     " "
00E7   3020               M         MOVLW       " "
00E8   2???               M         CALL        WR_DATA
                      00396         WRT_LCD     "D"
00E9   3044               M         MOVLW       "D"
00EA   2???               M         CALL        WR_DATA
                      00397         WRT_LCD     "A"
00EB   3041               M         MOVLW       "A"
00EC   2???               M         CALL        WR_DATA
                      00398         WRT_LCD     "T"
00ED   3054               M         MOVLW       "T"
00EE   2???               M         CALL        WR_DATA
                      00399         WRT_LCD     "A"
00EF   3041               M         MOVLW       "A"
00F0   2???               M         CALL        WR_DATA
00F1   0008           00400         RETURN
                      00401          
                      00402 ;******************************************************************************;
                      00403 ;                                 DATA                                         ;
                      00404 ;******************************************************************************;
00F2                  00405 WRT_DATA        
                      00406         WRT_LCD     "N"
00F2   304E               M         MOVLW       "N"
00F3   2???               M         CALL        WR_DATA
                      00407         WRT_LCD     "U"
00F4   3055               M         MOVLW       "U"
00F5   2???               M         CALL        WR_DATA
                      00408         WRT_LCD     "M"
00F6   304D               M         MOVLW       "M"
00F7   2???               M         CALL        WR_DATA
                      00409         WRT_LCD     " "
00F8   3020               M         MOVLW       " "
00F9   2???               M         CALL        WR_DATA
                      00410         WRT_LCD     "S"
00FA   3053               M         MOVLW       "S"
00FB   2???               M         CALL        WR_DATA
                      00411         WRT_LCD     "P"
00FC   3050               M         MOVLW       "P"
00FD   2???               M         CALL        WR_DATA
                      00412         WRT_LCD     "O"
00FE   304F               M         MOVLW       "O"
00FF   2???               M         CALL        WR_DATA
MPASM 5.65                          MAIN.ASM   2-27-2016  19:35:50         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00413         WRT_LCD     "T"
0100   3054               M         MOVLW       "T"
0101   2???               M         CALL        WR_DATA
                      00414         WRT_LCD     "S"
0102   3053               M         MOVLW       "S"
0103   2???               M         CALL        WR_DATA
                      00415         WRT_LCD     ":"
0104   303A               M         MOVLW       ":"
0105   2???               M         CALL        WR_DATA
                      00416         WRT_LCD     " "
0106   3020               M         MOVLW       " "
0107   2???               M         CALL        WR_DATA
                      00417 ;       WRT_MEM_LCD num_spots
0108   0008           00418         RETURN
                      00419 ;******************************************************************************;                
                      00420 ;******************************************************************************;
0109                  00421 GET_START_TIME
                      00422         ;Get minute             
                      00423         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0109   3001               M         movlw       0x01
010A   1283 1303          M         banksel     0x73
010C   00F3               M         movwf       0x73
010D   2???               M         call        read_rtc
010E   1283 1303          M         banksel     0x75
0110   0875               M         movf        0x75,w
0111   2???               M         call        rtc_convert   
0112   0877           00424         MOVFW       0X77
0113   00C3           00425         MOVWF       start_min10
0114   0878           00426         MOVFW       0X78
0115   00C2           00427         MOVWF       start_min
                      00428 
                      00429         ;Get seconds
                      00430         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0116   3000               M         movlw       0x00
0117   1283 1303          M         banksel     0x73
0119   00F3               M         movwf       0x73
011A   2???               M         call        read_rtc
011B   1283 1303          M         banksel     0x75
011D   0875               M         movf        0x75,w
011E   2???               M         call        rtc_convert   
011F   0877           00431         MOVFW       0X77
MPASM 5.65                          MAIN.ASM   2-27-2016  19:35:50         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0120   00C5           00432         MOVWF       start_sec10
0121   0878           00433         MOVFW       0X78
0122   00C4           00434         MOVWF       start_sec
0123   0008           00435         RETURN
                      00436 ;******************************************************************************;                
                      00437 ;******************************************************************************;
0124                  00438 GET_STOP_TIME
                      00439         ;Get minute             
                      00440         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0124   3001               M         movlw       0x01
0125   1283 1303          M         banksel     0x73
0127   00F3               M         movwf       0x73
0128   2???               M         call        read_rtc
0129   1283 1303          M         banksel     0x75
012B   0875               M         movf        0x75,w
012C   2???               M         call        rtc_convert   
012D   0877           00441         MOVFW       0X77
012E   00C7           00442         MOVWF       stop_min10
012F   0878           00443         MOVFW       0X78
0130   00C6           00444         MOVWF       stop_min
                      00445 
                      00446         ;Get seconds
                      00447         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0131   3000               M         movlw       0x00
0132   1283 1303          M         banksel     0x73
0134   00F3               M         movwf       0x73
0135   2???               M         call        read_rtc
0136   1283 1303          M         banksel     0x75
0138   0875               M         movf        0x75,w
0139   2???               M         call        rtc_convert   
013A   0877           00448         MOVFW       0X77
013B   00C9           00449         MOVWF       stop_sec10
013C   0878           00450         MOVFW       0X78
013D   00C8           00451         MOVWF       stop_sec
013E   0008           00452         RETURN
                      00453 ;******************************************************************************;                
                      00454 ;******************************************************************************;
013F                  00455 SHOW_RTC
                      00456         ;clear LCD screen
013F   3001           00457         movlw       b'00000001'
0140   2???           00458         call        WR_INS
MPASM 5.65                          MAIN.ASM   2-27-2016  19:35:50         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00459 
                      00460         ;Get year
                      00461         WRT_LCD     "2"
0141   3032               M         MOVLW       "2"
0142   2???               M         CALL        WR_DATA
                      00462         WRT_LCD     "0"
0143   3030               M         MOVLW       "0"
0144   2???               M         CALL        WR_DATA
                      00463         rtc_read    0x06                ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0145   3006               M         movlw       0x06
0146   1283 1303          M         banksel     0x73
0148   00F3               M         movwf       0x73
0149   2???               M         call        read_rtc
014A   1283 1303          M         banksel     0x75
014C   0875               M         movf        0x75,w
014D   2???               M         call        rtc_convert   
                      00464         WRT_MEM_LCD 0x77
014E   0877               M         MOVFW       0x77
014F   2???               M         CALL        WR_DATA
                      00465         WRT_MEM_LCD 0x78
0150   0878               M         MOVFW       0x78
0151   2???               M         CALL        WR_DATA
                      00466 
                      00467         WRT_LCD     "/"
0152   302F               M         MOVLW       "/"
0153   2???               M         CALL        WR_DATA
                      00468 
                      00469         ;Get month
                      00470         rtc_read    0x05                ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0154   3005               M         movlw       0x05
0155   1283 1303          M         banksel     0x73
0157   00F3               M         movwf       0x73
0158   2???               M         call        read_rtc
0159   1283 1303          M         banksel     0x75
015B   0875               M         movf        0x75,w
015C   2???               M         call        rtc_convert   
                      00471         WRT_MEM_LCD 0x77
015D   0877               M         MOVFW       0x77
015E   2???               M         CALL        WR_DATA
                      00472         WRT_MEM_LCD 0x78
015F   0878               M         MOVFW       0x78
MPASM 5.65                          MAIN.ASM   2-27-2016  19:35:50         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0160   2???               M         CALL        WR_DATA
                      00473 
                      00474         WRT_LCD     "/"
0161   302F               M         MOVLW       "/"
0162   2???               M         CALL        WR_DATA
                      00475 
                      00476         ;Get day
                      00477         rtc_read    0x04                ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0163   3004               M         movlw       0x04
0164   1283 1303          M         banksel     0x73
0166   00F3               M         movwf       0x73
0167   2???               M         call        read_rtc
0168   1283 1303          M         banksel     0x75
016A   0875               M         movf        0x75,w
016B   2???               M         call        rtc_convert   
                      00478         WRT_MEM_LCD 0x77
016C   0877               M         MOVFW       0x77
016D   2???               M         CALL        WR_DATA
                      00479         WRT_MEM_LCD 0x78
016E   0878               M         MOVFW       0x78
016F   2???               M         CALL        WR_DATA
                      00480 
0170   30C0           00481         movlw       B'11000000'         ;Next line displays (hour):(min):(sec) **:**:**
0171   2???           00482         call        WR_INS
                      00483         ;Get hour
                      00484         rtc_read    0x02                ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0172   3002               M         movlw       0x02
0173   1283 1303          M         banksel     0x73
0175   00F3               M         movwf       0x73
0176   2???               M         call        read_rtc
0177   1283 1303          M         banksel     0x75
0179   0875               M         movf        0x75,w
017A   2???               M         call        rtc_convert   
                      00485         WRT_MEM_LCD 0x77
017B   0877               M         MOVFW       0x77
017C   2???               M         CALL        WR_DATA
                      00486         WRT_MEM_LCD 0x78
017D   0878               M         MOVFW       0x78
017E   2???               M         CALL        WR_DATA
                      00487         WRT_LCD     ":"
017F   303A               M         MOVLW       ":"
MPASM 5.65                          MAIN.ASM   2-27-2016  19:35:50         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0180   2???               M         CALL        WR_DATA
                      00488 
                      00489         ;Get minute             
                      00490         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0181   3001               M         movlw       0x01
0182   1283 1303          M         banksel     0x73
0184   00F3               M         movwf       0x73
0185   2???               M         call        read_rtc
0186   1283 1303          M         banksel     0x75
0188   0875               M         movf        0x75,w
0189   2???               M         call        rtc_convert   
                      00491         WRT_MEM_LCD 0x77
018A   0877               M         MOVFW       0x77
018B   2???               M         CALL        WR_DATA
                      00492         WRT_MEM_LCD 0x78
018C   0878               M         MOVFW       0x78
018D   2???               M         CALL        WR_DATA
                      00493         WRT_LCD     ":"
018E   303A               M         MOVLW       ":"
018F   2???               M         CALL        WR_DATA
                      00494 
                      00495         ;Get seconds
                      00496         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0190   3000               M         movlw       0x00
0191   1283 1303          M         banksel     0x73
0193   00F3               M         movwf       0x73
0194   2???               M         call        read_rtc
0195   1283 1303          M         banksel     0x75
0197   0875               M         movf        0x75,w
0198   2???               M         call        rtc_convert   
                      00497         WRT_MEM_LCD 0x77
0199   0877               M         MOVFW       0x77
019A   2???               M         CALL        WR_DATA
                      00498         WRT_MEM_LCD 0x78
019B   0878               M         MOVFW       0x78
019C   2???               M         CALL        WR_DATA
                      00499 
019D   0008           00500         RETURN
                      00501 ;******************************************************************************;                
                      00502 ;******************************************************************************;                
019E                  00503 SET_RTC_TIME
MPASM 5.65                          MAIN.ASM   2-27-2016  19:35:50         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00504         rtc_resetAll    ;reset rtc
                          M ;input:         none
                          M ;output:        none
                          M ;desc:          Resets all the time keeping registers on the RTC to zero
019E   1283 1303          M         banksel     0x74
01A0   01F4               M         clrf        0x74
01A1   1283 1303          M         banksel     0x73
01A3   01F3               M         clrf        0x73
01A4   2???               M         call        write_rtc           ;Write 0 to Seconds
01A5   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
01A7   0AF3               M         incf        0x73                        ;Set register address to 1
01A8   2???               M         call        write_rtc
01A9   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
01AB   0AF3               M         incf        0x73                        ;Set register address to 2
01AC   2???               M         call        write_rtc
01AD   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
01AF   0AF3               M         incf        0x73                        ;Set register address to 3
01B0   2???               M         call        write_rtc
01B1   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
01B3   0AF3               M         incf        0x73                        ;Set register address to 4
01B4   2???               M         call        write_rtc
01B5   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
01B7   0AF3               M         incf        0x73                        ;Set register address to 5
01B8   2???               M         call        write_rtc
01B9   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
01BB   0AF3               M         incf        0x73                        ;Set register address to 6
01BC   2???               M         call        write_rtc
                      00505 
                      00506         rtc_set     0x00,       B'10000000'
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
01BD   1283 1303          M         banksel     0x73
01BF   3000               M         movlw       0x00
01C0   00F3               M         movwf       0x73
01C1   1283 1303          M         banksel     0x74
01C3   3080               M         movlw       B'10000000'
01C4   00F4               M         movwf       0x74        
01C5   2???               M         call        write_rtc
                      00507 
                      00508         ;set time 
                      00509         rtc_set     0x06,       B'00010110'             ; Year
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
MPASM 5.65                          MAIN.ASM   2-27-2016  19:35:50         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
01C6   1283 1303          M         banksel     0x73
01C8   3006               M         movlw       0x06
01C9   00F3               M         movwf       0x73
01CA   1283 1303          M         banksel     0x74
01CC   3016               M         movlw       B'00010110'
01CD   00F4               M         movwf       0x74        
01CE   2???               M         call        write_rtc
                      00510         rtc_set     0x05,       B'00000100'             ; Month
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
01CF   1283 1303          M         banksel     0x73
01D1   3005               M         movlw       0x05
01D2   00F3               M         movwf       0x73
01D3   1283 1303          M         banksel     0x74
01D5   3004               M         movlw       B'00000100'
01D6   00F4               M         movwf       0x74        
01D7   2???               M         call        write_rtc
                      00511         rtc_set     0x04,       B'00000110'             ; Date
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
01D8   1283 1303          M         banksel     0x73
01DA   3004               M         movlw       0x04
01DB   00F3               M         movwf       0x73
01DC   1283 1303          M         banksel     0x74
01DE   3006               M         movlw       B'00000110'
01DF   00F4               M         movwf       0x74        
01E0   2???               M         call        write_rtc
                      00512         rtc_set     0x03,       B'00000010'             ; Day
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
01E1   1283 1303          M         banksel     0x73
01E3   3003               M         movlw       0x03
01E4   00F3               M         movwf       0x73
01E5   1283 1303          M         banksel     0x74
01E7   3002               M         movlw       B'00000010'
01E8   00F4               M         movwf       0x74        
01E9   2???               M         call        write_rtc
                      00513         rtc_set     0x02,       B'00000000'             ; Hours
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
MPASM 5.65                          MAIN.ASM   2-27-2016  19:35:50         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       address specified by addliteral in the RTC
01EA   1283 1303          M         banksel     0x73
01EC   3002               M         movlw       0x02
01ED   00F3               M         movwf       0x73
01EE   1283 1303          M         banksel     0x74
01F0   3000               M         movlw       B'00000000'
01F1   00F4               M         movwf       0x74        
01F2   2???               M         call        write_rtc
                      00514         rtc_set     0x01,       B'00000000'             ; Minutes
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
01F3   1283 1303          M         banksel     0x73
01F5   3001               M         movlw       0x01
01F6   00F3               M         movwf       0x73
01F7   1283 1303          M         banksel     0x74
01F9   3000               M         movlw       B'00000000'
01FA   00F4               M         movwf       0x74        
01FB   2???               M         call        write_rtc
                      00515         rtc_set     0x00,       B'00000000'             ; Seconds
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
01FC   1283 1303          M         banksel     0x73
01FE   3000               M         movlw       0x00
01FF   00F3               M         movwf       0x73
0200   1283 1303          M         banksel     0x74
0202   3000               M         movlw       B'00000000'
0203   00F4               M         movwf       0x74        
0204   2???               M         call        write_rtc
0205   0008           00516         return
                      00517 
                      00518 ;******************************************************************************;                
                      00519 ;******************************************************************************;
                      00520 ;******************************************************************************;
0206                  00521 LONG_DLY
Warning[202]: Argument out of range.  Least significant bits used.
0206   30FF           00522         MOVLW       0xFFFF
0207   00BF           00523         MOVWF       long_del
0208                  00524 LD_LOOP 
                      00525         LCD_DLY
0208   30FF               M         MOVLW       0xFF
0209   00BD               M         MOVWF       lcd_d1
020A   0BBD               M         DECFSZ      lcd_d1, f
020B   2???               M         GOTO        $-1
020C   0BBF           00526         DECFSZ      long_del, f
020D   2???           00527         GOTO        LD_LOOP
020E   0008           00528         RETURN
                      00529         
MPASM 5.65                          MAIN.ASM   2-27-2016  19:35:50         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00530     ;Delay: ~5ms
020F                  00531 LCD_LONG_DELAY
020F   3014           00532         MOVLW       d'20'
0210   00BE           00533         MOVWF       lcd_d2
0211                  00534 LLD_LOOP
                      00535         LCD_DLY
0211   30FF               M         MOVLW       0xFF
0212   00BD               M         MOVWF       lcd_d1
0213   0BBD               M         DECFSZ      lcd_d1, f
0214   2???               M         GOTO        $-1
0215   0BBE           00536         DECFSZ      lcd_d2, f
0216   2???           00537         GOTO        LLD_LOOP
0217   0008           00538         RETURN
0218                  00539 FINISH  
0218   2???           00540         GOTO    FINISH
                      00541         
3F72                  00542         END
MPASM 5.65                          MAIN.ASM   2-27-2016  19:35:50         PAGE 22


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADD                               00000036
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ARM_TOGGLE                        00000079
B1                                0000003A
B2                                0000003B
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
C                                 00000000
CALIBRATE                         00000050
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
MPASM 5.65                          MAIN.ASM   2-27-2016  19:35:50         PAGE 23


SYMBOL TABLE
  LABEL                             VALUE 

CLR_LCD                           00000000
CONTROL                           00000035
CREN                              00000004
CSRC                              00000007
D                                 00000005
DAT                               00000037
DATA_ADDRESS                      00000005
DATA_LOOP                         00000094
DC                                00000001
DOUT                              00000039
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FINISH                            00000218
FSR                               00000004
GCEN                              00000007
GET_START_TIME                    00000109
GET_STOP_TIME                     00000124
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INIT                              00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
INT_HANDLER                       00000055
IRP                               00000007
InitLCD                           00000000
LCD_DLY                           
LCD_INS                           
LCD_LONG_DELAY                    0000020F
LD_LOOP                           00000208
LLD_LOOP                          00000211
LONG_DLY                          00000206
MPASM 5.65                          MAIN.ASM   2-27-2016  19:35:50         PAGE 24


SYMBOL TABLE
  LABEL                             VALUE 

MULT                              
MX_LOOP                           0000006C
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
PWML                              00000060
PWML_DN                           00000062
PWMR                              00000065
PWMR_DN                           00000067
R                                 00000002
RA0                               00000000
RA1                               00000001
MPASM 5.65                          MAIN.ASM   2-27-2016  19:35:50         PAGE 25


SYMBOL TABLE
  LABEL                             VALUE 

RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_IRS                          0000006A
READ_WRITE                        00000002
REALIGN                           0000007A
RETURN_HOME                       00000081
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
MPASM 5.65                          MAIN.ASM   2-27-2016  19:35:50         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

S                                 00000003
SCAN                              00000051
SEN                               00000000
SET_RTC_TIME                      0000019E
SHOW_RTC                          0000013F
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
START_MSG                         000000B8
START_STDBY                       00000046
STATUS                            00000003
STOP_DATA                         00000089
STOP_STDBY                        00000082
STOP_STDBY_MSG                    000000D5
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
MPASM 5.65                          MAIN.ASM   2-27-2016  19:35:50         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
MPASM 5.65                          MAIN.ASM   2-27-2016  19:35:50         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

TXREG                             00000019
TXSTA                             00000098
UA                                00000001
USONIC_READ_ECHO                  00000080
USONIC_SEND_PULSE                 0000007B
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WRT_DATA                          000000F2
WRT_LCD                           
WRT_MEM_LCD                       
WR_DATA                           00000000
WR_INS                            00000000
XBUF                              00000033
Z                                 00000002
_.org_1_004C                      0000004C
_.org_1_020B                      0000020B
_.org_1_0214                      00000214
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
MPASM 5.65                          MAIN.ASM   2-27-2016  19:35:50         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
count                             00000034
dt1                               00000030
dt2                               00000031
dt3                               00000032
flag                              00000038
i2c_common_setup                  00000000
lcd_d1                            0000003D
lcd_d2                            0000003E
lcd_tmp                           0000003C
long_del                          0000003F
measured_distance                 0000004D
multiplex_count                   0000004A
num_spots                         00000050
read_rtc                          00000000
rob_distance                      0000004C
rob_return                        0000004E
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
spot_base_loc                     00000051
spot_count                        0000004F
start_min                         00000042
start_min10                       00000043
start_sec                         00000044
start_sec10                       00000045
stop_min                          00000046
stop_min10                        00000047
stop_sec                          00000048
stop_sec10                        00000049
temp_status                       00000041
temp_w                            00000040
threshold_distance                0000004B
write_rtc                         00000000

Errors   :     0
Warnings :     4 reported,     0 suppressed
Messages :    23 reported,     0 suppressed

