MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;******************************************************************************;
                      00002 ;        ____    ___  ______    ___  ____       ____  ____  ____    ___  ____  ;
                      00003 ;       |    \  /  _]|      T  /  _]|    \     |    \l    j|    \  /  _]|    \ ;
                      00004 ;       |  o  )/  [_ |      | /  [_ |  D  )    |  o  )|  T |  o  )/  [_ |  D  );
                      00005 ;       |   _/Y    _]l_j  l_jY    _]|    /     |   _/ |  | |   _/Y    _]|    / ;
                      00006 ;       |  |  |   [_   |  |  |   [_ |    \     |  |   |  | |  |  |   [_ |    \ ;
                      00007 ;       |  |  |     T  |  |  |     T|  .  Y    |  |   j  l |  |  |     T|  .  Y;
                      00008 ;       l__j  l_____j  l__j  l_____jl__j\_j    l__j  |____jl__j  l_____jl__j\_j;
                      00009 ;------------------------------------------------------------------------------;
                      00010 ;               AER201 Team 61 'Peter Piper' Pipe Inspector                    ;
                      00011 ;                        Author: Omar Abdeldayem                               ;
                      00012 ;                           Created: 1/12/2016                                 ;
                      00013 ;------------------------------------------------------------------------------;
                      00014 ; DESCRIPTION:                                                                                          
                                                               ;
                      00015 ; It does shit, yo.                                                                                     
                                                               ;
                      00016 ;******************************************************************************;
                      00017 ;******************************************************************************;
                      00018 ;******************************************************************************;
                      00019 
                      00020         List    p=16f877                    ; list directive to define processor
                      00021         #include        <p16f877.inc>       ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
2007   3F72           00022         __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP
                            _OFF
                      00023 
                      00024         #include        <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel     0x74
                      00011         clrf        0x74
                      00012         banksel     0x73
                      00013         clrf        0x73
                      00014         call        write_rtc           ;Write 0 to Seconds
                      00015         banksel     0x73
                      00016         incf        0x73                        ;Set register address to 1
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00017         call        write_rtc
                      00018         banksel     0x73
                      00019         incf        0x73                        ;Set register address to 2
                      00020         call        write_rtc
                      00021         banksel     0x73
                      00022         incf        0x73                        ;Set register address to 3
                      00023         call        write_rtc
                      00024         banksel     0x73
                      00025         incf        0x73                        ;Set register address to 4
                      00026         call        write_rtc
                      00027         banksel     0x73
                      00028         incf        0x73                        ;Set register address to 5
                      00029         call        write_rtc
                      00030         banksel     0x73
                      00031         incf        0x73                        ;Set register address to 6
                      00032         call        write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set macro       addliteral, datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel     0x73
                      00042         movlw       addliteral
                      00043         movwf       0x73
                      00044         banksel     0x74
                      00045         movlw       datliteral
                      00046         movwf       0x74        
                      00047         call        write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read macro      addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw       addliteral
                      00058         banksel     0x73
                      00059         movwf       0x73
                      00060         call        read_rtc
                      00061         banksel     0x75
                      00062         movf        0x75,w
                      00063         call        rtc_convert   
                      00064         endm
                      00025         #include        <lcd.inc>
  0000                00001     extern      InitLCD,WR_INS,WR_DATA,CLR_LCD
                      00026 ;******************************************************************************;
                      00027 ;                               BANK0 RAM                                      ;
                      00028 ;******************************************************************************;
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00029         CBLOCK      0x30
  00000030            00030         long_del    ; 0x30
  00000031            00031         temp_w      ; 0x31
  00000032            00032         temp_status ; 0x32
                      00033                     ; DIVISION Registers
  00000033            00034         DIV_HI      ; 0X33
  00000034            00035         DIV_LO      ; 0X34
  00000035            00036         DIVISOR     ; 0X35
  00000036            00037         Q           ; 0X36
  00000037            00038         d1
  00000038            00039         d2
  00000039            00040         d3          ; 0X39
                      00041                     ; ROBOT VARS
  0000003A            00042         start_min   ; 0X3A
  0000003B            00043         start_min10 ; 0X3B
  0000003C            00044         start_sec
  0000003D            00045         start_sec10
  0000003E            00046         stop_min
  0000003F            00047         stop_min10
  00000040            00048         stop_sec    ; 0X40
  00000041            00049         stop_sec10  ; 0x41
  00000042            00050         spot_detected
  00000043            00051         multiplex_count
  00000044            00052         rob_lat_distance
  00000045            00053         rob_long_distance_count ; 0X45
  00000046            00054         rob_long_distance       ; 0X46
  00000047            00055         measured_distance_lat
  00000048            00056         measured_distance_sup
  00000049            00057         rob_return
  0000004A            00058         spot_count  ; 0X4A
  0000004B            00059         num_spots
  0000004C            00060         spot_base_loc
                      00061         ENDC
                      00062 
                      00063 ;******************************************************************************;
                      00064 ;                               EQUATES                                        ;
                      00065 ;******************************************************************************;
                      00066         #define     crit_dist           0X0A
                      00067         #define     crit_dist_l         0x03
                      00068         #define     crit_dist_r         0x0A
                      00069         #define     MUX_IN              PORTA, 0
                      00070         #define     MUX_CTRL_0          PORTA, 1
                      00071         #define     MUX_CTRL_1          PORTA, 2
                      00072         #define     MUX_CTRL_2          PORTA, 3
                      00073         #define     MUX_CTRL_3          PORTA, 5
                      00074         #define     SERVO_CTRL          PORTC, 0
                      00075         #define     US_SUP_TRIG         PORTB, 3
                      00076         #define     US_SUP_ECHO         PORTB, 4
                      00077         ;#define            MUX_IN              PORTC, 0
                      00078         #define     MOTOR_DIR_CTRL      PORTC, 5
                      00079         #define     BUZZER              PORTC, 7
                      00080         #define     US_LAT_TRIG         PORTD, 0
                      00081         #define     US_LAT_ECHO         PORTD, 1
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00082         #define     L_MOTOR_SPD         B'11111001'
                      00083         #define     R_MOTOR_SPD         B'11111001'
                      00084 ;******************************************************************************;
                      00085 ;                               MACROS                                         ;
                      00086 ;******************************************************************************;
                      00087 WRT_LCD macro       val
                      00088         MOVLW       val
                      00089         CALL        WR_DATA
                      00090         endm
                      00091 LCD_INS macro       val
                      00092         MOVLW       val
                      00093         CALL        WR_INS
                      00094         endm
                      00095         
                      00096 WRT_MEM_LCD macro   val
                      00097         MOVFW       val
                      00098         CALL        WR_DATA
                      00099         endm
                      00100 
                      00101 CWRT_MEM_LCD macro   val
                      00102         MOVFW       val
                      00103         ADDLW       D'48'
                      00104         CALL        WR_DATA
                      00105         endm
                      00106 ;******************************************************************************;
                      00107 ;                          VECTOR TABLE                                        ;
                      00108 ;******************************************************************************;
                      00109         ORG         0x0000              ; RESET vector must always be at 0x00
0000   2???           00110         GOTO        INIT                ; Just jump to the main code section.
                      00111         ORG         0x0004
0004   2???           00112         GOTO        INT_HANDLER
                      00113 
                      00114 ;******************************************************************************;
                      00115 ;                         ROBOT INITIALIZATION                                 ;
                      00116 ;******************************************************************************;
0005                  00117 INIT
0005   1683           00118         BSF         STATUS, RP0         ; Select bank 1
0006   018B           00119         CLRF        INTCON              ; Disable interrupts for now
                      00120         
                      00121         ;MOVLW      0x06                ; Turn PORT A to digital
                      00122         ;MOVWF      ADCON1
0007   300E           00123         movlw       b'00001110'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0008   009F           00124         movwf       ADCON1
                      00125         
0009   3011           00126         MOVLW       b'00010001'         ; PORT A pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000A   0085           00127         MOVWF       TRISA
000B   30F3           00128         MOVLW       b'11110011'         ; PORT B pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000C   0086           00129         MOVWF       TRISB
000D   3018           00130         MOVLW       b'00011000'         ; PORT C pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000E   0087           00131         MOVWF       TRISC
000F   3002           00132         MOVLW       B'00000010'         ; PORT D pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0010   0088           00133         MOVWF       TRISD               
0011   3001           00134         MOVLW       b'00000001'         ; PORT E pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0012   0089           00135         MOVWF       TRISE
                      00136         
0013   30FF           00137         MOVLW       B'11111111'         ; PWM pulsing period (484Hz)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0014   0092           00138         MOVWF       PR2
                      00139        
0015   1283           00140         BCF         STATUS, RP0         ; select bank 0
                      00141 
0016   30C5           00142         MOVLW       b'11000101'         ;clock selected, ADC module turned on
0017   009F           00143         MOVWF       ADCON0
                      00144                 
0018   30F9           00145         MOVLW       L_MOTOR_SPD         ; 100% DUTY CYCLE
0019   0095           00146         MOVWF       CCPR1L              
001A   30F9           00147         MOVLW       R_MOTOR_SPD         ; '01100100' 100% DUTY CYCLE
001B   009B           00148         MOVWF       CCPR2L
001C   30FF           00149         MOVLW       B'11111111'
001D   0097           00150         MOVWF       CCP1CON
001E   30FF           00151         MOVLW       B'11111111'
001F   009D           00152         MOVWF       CCP2CON
                      00153         
0020   3005           00154         MOVLW       B'00000101'         ; Initialize and hold timer 2
0021   0092           00155         MOVWF       T2CON
0022   0191           00156         CLRF        TMR2
0023   1112           00157         BCF         T2CON, TMR2ON
                      00158         
0024   3010           00159         MOVLW       0X10                ; TMR1 for Ultrasonic Sensors
0025   0090           00160         MOVWF       T1CON
0026   018F           00161         CLRF        TMR1H
0027   018E           00162         CLRF        TMR1L
                      00163         
                      00164         ;CALL       i2c_common_setup
0028   2???           00165         CALL        InitLCD
                      00166         
0029   01CB           00167         CLRF        num_spots
002A   01CA           00168         CLRF        spot_count
002B   01C2           00169         CLRF        spot_detected
002C   01C7           00170         CLRF        measured_distance_lat
002D   1387           00171         BCF         BUZZER
                      00172         
002E   2???           00173         CALL        START_MSG
                      00174 ;******************************************************************************;
                      00175 ;                        ROBOT START AND STANDBY                               ;
                      00176 ;******************************************************************************;
002F                  00177 START_STDBY
002F   1C86           00178         BTFSS       PORTB, 1            ; Wait until data is available from the keypad
0030   2???           00179         GOTO        START_STDBY
                      00180 
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0031   0E06           00181         SWAPF       PORTB, W            ; Read PortB<7:4> into W<3:0>
0032   390F           00182         ANDLW       0x0F
0033   2???           00183         CALL        CLR_LCD
                      00184 
0034   1886           00185         BTFSC       PORTB,1             ; Wait until key is released
0035   2???           00186         GOTO        $-1
                      00187 
0036   2???           00188         CALL        CLR_LCD
0037   2???           00189         CALL        DEL_1S
0038   2???           00190         CALL        DEL_1S
0039   1287           00191         BCF         MOTOR_DIR_CTRL
003A   1512           00192         BSF         T2CON, TMR2ON
                      00193         
                      00194         ;CALL       SET_RTC_TIME
                      00195         ;CALL       GET_START_TIME
003B   2???           00196         GOTO        CALIBRATE
                      00197         ;GOTO       SCAN
                      00198 
                      00199 ;******************************************************************************;
                      00200 ;                           SENSOR CALIBRATION                                 ;
                      00201 ;******************************************************************************;
003C                  00202 CALIBRATE
003C   2???           00203         CALL        DEL_10MS
003D   2???           00204         CALL        DEL_10MS
003E   2???           00205         CALL        DEL_10MS
003F   2???           00206         CALL        DEL_10MS
0040   2???           00207         CALL        DEL_10MS
0041   2???           00208         CALL        USONIC_LAT
0042   300A           00209         MOVLW       crit_dist
0043   0247           00210         SUBWF       measured_distance_lat, W
0044   1803           00211         BTFSC       STATUS, 0
0045   2???           00212         GOTO        CALIBRATE
0046   1787           00213         BSF         BUZZER
                      00214         ;MOVLW      0XA
                      00215         ;MOVWF      measured_distance_lat
0047   2???           00216         CALL        DEL_1S
0048   1008           00217         BCF         US_LAT_TRIG
0049   1088           00218         BCF         US_LAT_ECHO
004A   01C7           00219         CLRF        measured_distance_lat
004B   01B6           00220         CLRF        Q
004C   158B           00221         BSF         INTCON, RBIE            ; Enable interrupts
004D   160B           00222         BSF         INTCON, INTE
004E   178B           00223         BSF         INTCON, GIE
004F   1387           00224         BCF         BUZZER
0050   304C           00225         MOVLW       spot_base_loc
0051   0084           00226         MOVWF       FSR
0052   2???           00227         GOTO        SCAN
                      00228         
                      00229 ;******************************************************************************;
                      00230 ;                         PIPE SCAN SUPERLOOP                                  ;
                      00231 ;******************************************************************************;
0053                  00232 SCAN
                      00233         ;CALL       USONIC_SUP
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00234         ;CALL       ARM_CTRL
0053   2???           00235         CALL        DEL_10MS
0054   2???           00236         CALL        DEL_10MS
0055   2???           00237         CALL        DEL_10MS
0056   2???           00238         CALL        DEL_10MS
0057   2???           00239         CALL        DEL_10MS
0058   2???           00240         CALL        DEL_10MS
0059   2???           00241         CALL        DEL_10MS
005A   2???           00242         CALL        DEL_10MS
                      00243         ;CALL       USONIC_LAT
                      00244         ;CALL       MOTOR_CTRL_R
                      00245         ;CALL       MOTOR_CTRL_L
                      00246         
005B   2???           00247         CALL        USONIC_LAT
005C   300A           00248         MOVLW       crit_dist
005D   0247           00249         SUBWF       measured_distance_lat, W
005E   1C03           00250         BTFSS       STATUS, 0
005F   2???           00251         GOTO        RETURN_HOME
                      00252 ;       CALL        SHOW_RTC                ; DEBUG
                      00253         ;CALL       READ_IRS
                      00254         
0060   2???           00255         GOTO        SCAN
                      00256 
                      00257 ;******************************************************************************;
                      00258 ;                           RETURN HOME ROUTINE                                ;
                      00259 ;******************************************************************************;
0061                  00260 RETURN_HOME
0061   2???           00261         CALL        DEL_10MS
0062   2???           00262         CALL        DEL_10MS
0063   2???           00263         CALL        DEL_10MS
0064   2???           00264         CALL        DEL_10MS
0065   2???           00265         CALL        DEL_10MS
0066   1787           00266         BSF         BUZZER 
0067   018B           00267         CLRF        INTCON
0068   1687           00268         BSF         MOTOR_DIR_CTRL
0069   2???           00269         CALL        USONIC_LAT
006A   300A           00270         MOVLW       crit_dist
006B   0247           00271         SUBWF       measured_distance_lat, W
006C   1803           00272         BTFSC       STATUS, 0
006D   2???           00273         GOTO        RETURN_HOME
006E   1387           00274         BCF         BUZZER
006F   2???           00275         GOTO        FINAL_BACKUP
                      00276 
0070                  00277 FINAL_BACKUP
0070   2???           00278         CALL        DEL_1S
0071   2???           00279         GOTO        STOP_STDBY
                      00280         
                      00281 ;******************************************************************************;
                      00282 ;                             STOP STANDBY                                     ;
                      00283 ;******************************************************************************;
0072                  00284 STOP_STDBY
0072   1112           00285         BCF         T2CON, TMR2ON       ; Turn off motors
0073   0197           00286         CLRF        CCP1CON
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0074   019D           00287         CLRF        CCP2CON
0075   0195           00288         CLRF        CCPR1L
0076   019B           00289         CLRF        CCPR2L
                      00290 
                      00291         ;CALL       GET_STOP_TIME       ; Get stop time
0077   2???           00292         CALL        STOP_STDBY_MSG      ; Display standby message
0078   1C86           00293         BTFSS       PORTB, 1            ; Wait until data is available from the keypad
0079   2???           00294         GOTO        $-1
007A   0E06           00295         SWAPF       PORTB, W            ; Read PortB<7:4> into W<3:0>
007B   390F           00296         ANDLW       0x0F 
007C   2???           00297         CALL        CLR_LCD
007D   2???           00298         GOTO        STOP_DATA           ; Display run data
                      00299 
                      00300 ;******************************************************************************;
                      00301 ;                          INTERRUPT HANDLER                                   ;
                      00302 ;******************************************************************************;
007E                  00303 INT_HANDLER
007E   00B1           00304         MOVWF       temp_w
007F   0E03           00305         SWAPF       STATUS, W
0080   00B2           00306         MOVWF       temp_status
0081   100B           00307         BCF         INTCON, RBIF
0082   108B           00308         BCF         INTCON, INTF          ; Clear the interrupt flag
                      00309         
0083   2???           00310         CALL        WHL_ENC
                      00311         
0084   0E32           00312         SWAPF       temp_status, W
0085   0083           00313         MOVWF       STATUS
0086   0EB1           00314         SWAPF       temp_w, F
0087   0E31           00315         SWAPF       temp_w, W
0088   0009           00316         RETFIE
                      00317 
                      00318 ;******************************************************************************;
                      00319 ;                       CYCLE INFRARED SENSORS                                 ;
                      00320 ;******************************************************************************;
0089                  00321 READ_IRS
0089   3010           00322         MOVLW       d'16'
008A   00C3           00323         MOVWF       multiplex_count
008B                  00324 MX_LOOP 
008B   1085           00325         BCF         MUX_CTRL_0
008C   1505           00326         BSF         MUX_CTRL_1
008D   1185           00327         BCF         MUX_CTRL_2
008E   1285           00328         BCF         MUX_CTRL_3
                      00329 
008F   2???           00330         CALL        DEL_1S
                      00331         
0090   081E           00332         MOVFW       ADRESH 
0091   3CC8           00333         SUBLW       D'200'
0092   1C03           00334         BTFSS       STATUS, 0
0093   2???           00335         GOTO        MX_LOOP
0094   1787           00336         BSF         BUZZER
0095   2???           00337         CALL        DEL_1S
0096   1387           00338         BCF         BUZZER
0097   2???           00339         GOTO        MX_LOOP
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00340         
                      00341 ;       DECF        multiplex_count
                      00342 ;       BCF         MUX_CTRL_0
                      00343 ;       BTFSC       multiplex_count, 0
                      00344 ;       BSF         MUX_CTRL_0
                      00345 ;       BCF         MUX_CTRL_1
                      00346 ;       BTFSC       multiplex_count, 1
                      00347 ;       BSF         MUX_CTRL_1
                      00348 ;       BCF         MUX_CTRL_2
                      00349 ;       BTFSC       multiplex_count, 2
                      00350 ;       BSF         MUX_CTRL_2
                      00351 ;       BCF         MUX_CTRL_3
                      00352 ;       BTFSC       multiplex_count, 3
                      00353 ;       BSF         MUX_CTRL_3
                      00354         
                      00355 ;       
                      00356 ;       BTFSC       MUX_IN
                      00357 ;       RETURN
                      00358 ;       GOTO        MX_LOOP;NO_SPOT 
                      00359 ;       BSF         BUZZER                              ; Buzzer start
                      00360 ;       CALL        DEL_1S
                      00361 ;       MOVFW       rob_long_distance                   ; Save spot location
                      00362 ;       MOVWF       INDF
                      00363 ;       INCF        num_spots, f                        ; Increase number of spots
                      00364 ;       INCF        FSR, F
                      00365 ;       BCF         BUZZER                              ; Buzzer stop
                      00366 ;;NO_SPOT       INCF        multiplex_count
                      00367 ;;      DECFSZ      multiplex_count
                      00368 ;       GOTO        MX_LOOP
0098   0008           00369         RETURN
                      00370         
                      00371 ;******************************************************************************;
                      00372 ;                         WHEEL ENCODER ROUTINE                                ;
                      00373 ;******************************************************************************;
0099                  00374 WHL_ENC
Message[305]: Using default destination of 1 (file).
0099   0AC5           00375         INCF        rob_long_distance_count ; Increment number of changes
009A   3006           00376         MOVLW       0x06                    ; Every six changes is approx 1in
009B   02C5           00377         SUBWF       rob_long_distance_count, F
009C   1D03           00378         BTFSS       STATUS, 2
Message[305]: Using default destination of 1 (file).
009D   0AC6           00379         INCF        rob_long_distance       ; One inch was covered
009E   01C5           00380         CLRF        rob_long_distance_count
009F   0008           00381         RETURN
                      00382         
                      00383 ;******************************************************************************;
                      00384 ;                       TOGGLE ARM STATE SUBROUTINES                           ;
                      00385 ;******************************************************************************;
00A0                  00386 ARM_CTRL
00A0   300A           00387         MOVLW       crit_dist
00A1   0248           00388         SUBWF       measured_distance_sup, W
00A2   1803           00389         BTFSC       STATUS, 0               ; C==0 if measured_distance_sup < crit_dist
00A3   2???           00390         GOTO        ARM_CLOSE
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A4   2???           00391         GOTO        ARM_OPEN
00A5                  00392 ARM_CLOSE                                   ; Close arm for full scan
00A5   1407           00393         BSF         SERVO_CTRL
00A6   2???           00394         CALL        DEL_1_5MS
00A7   1007           00395         BCF         SERVO_CTRL
00A8   2???           00396         CALL        DEL_10MS
00A9   2???           00397         CALL        DEL_10MS
00AA   2???           00398         CALL        DEL_10MS
00AB   2???           00399         CALL        DEL_10MS
00AC   0008           00400         RETURN      
                      00401         
00AD                  00402 ARM_OPEN                                    ; Open arm to clear support
00AD   1407           00403         BSF         SERVO_CTRL
00AE   2???           00404         CALL        DEL_2_1MS
00AF   2???           00405         CALL        DEL_2_1MS
00B0   1007           00406         BCF         SERVO_CTRL
00B1   2???           00407         CALL        DEL_10MS
00B2   2???           00408         CALL        DEL_10MS
00B3   2???           00409         CALL        DEL_10MS
00B4   2???           00410         CALL        DEL_10MS
00B5   0008           00411         RETURN
                      00412 ;******************************************************************************;
                      00413 ;                     ULTRASONIC SENSOR SUBROUTINES                            ;
                      00414 ;******************************************************************************;
00B6                  00415 USONIC_SUP
00B6   1586           00416         BSF         US_SUP_TRIG
00B7   2???           00417         CALL        DEL_20US
00B8   1186           00418         BCF         US_SUP_TRIG
00B9                  00419 USONIC_SUP_ECHO
00B9   1E06           00420         BTFSS       US_SUP_ECHO
00BA   2???           00421         GOTO        $-1
00BB   1410           00422         BSF         T1CON, 0
00BC   1A06           00423 USHOLDS BTFSC       US_SUP_ECHO
00BD   2???           00424         GOTO        USHOLDS
00BE   1010           00425         BCF         T1CON, 0
00BF   080F           00426         MOVF        TMR1H, W
00C0   00B3           00427         MOVWF       DIV_HI
00C1   080E           00428         MOVF        TMR1L, W
00C2   00B4           00429         MOVWF       DIV_LO
00C3   018F           00430         CLRF        TMR1H
00C4   018E           00431         CLRF        TMR1L
00C5   303A           00432         MOVLW       d'58'
00C6   00B5           00433         MOVWF       DIVISOR
00C7   2???           00434         CALL        DIV16X8
00C8   0836           00435         MOVF        Q, W
00C9   00C8           00436         MOVWF       measured_distance_sup
00CA   2???           00437         CALL        rtc_convert
00CB   2???           00438         CALL        CLR_LCD             ; DEBUG!
                      00439         WRT_MEM_LCD 0x77
00CC   0877               M         MOVFW       0x77
00CD   2???               M         CALL        WR_DATA
                      00440         WRT_MEM_LCD 0x78
00CE   0878               M         MOVFW       0x78
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CF   2???               M         CALL        WR_DATA
00D0   0008           00441         RETURN
                      00442 
00D1                  00443 USONIC_LAT
00D1   1408           00444         BSF         US_LAT_TRIG
00D2   2???           00445         CALL        DEL_20US
00D3   1008           00446         BCF         US_LAT_TRIG
00D4                  00447 USONIC_LAT_ECHO
00D4   1C88           00448         BTFSS       US_LAT_ECHO
00D5   2???           00449         GOTO        $-1
00D6   1410           00450         BSF         T1CON, 0
00D7   1888           00451 USHOLDL BTFSC       US_LAT_ECHO
00D8   2???           00452         GOTO        USHOLDL
00D9   1010           00453         BCF         T1CON, 0
00DA   080F           00454         MOVF        TMR1H, W
00DB   00B3           00455         MOVWF       DIV_HI
00DC   080E           00456         MOVF        TMR1L, W
00DD   00B4           00457         MOVWF       DIV_LO
00DE   018F           00458         CLRF        TMR1H
00DF   018E           00459         CLRF        TMR1L
00E0   303A           00460         MOVLW       d'58'
00E1   00B5           00461         MOVWF       DIVISOR
00E2   2???           00462         CALL        DIV16X8
00E3   0836           00463         MOVF        Q, W
00E4   00C7           00464         MOVWF       measured_distance_lat
                      00465         
00E5   0008           00466         RETURN
                      00467         
                      00468 ;******************************************************************************;
                      00469 ;                              ACTIVE CONTROL                                  ;
                      00470 ;******************************************************************************;
00E6                  00471 MOTOR_CTRL_R                                ; Turn right - robot is too close
00E6   3003           00472         MOVLW       crit_dist_l
00E7   0247           00473         SUBWF       measured_distance_lat, W
00E8   1803           00474         BTFSC       STATUS, 0               ; C==0 if measured_distance_lat < crit_dist
00E9   0008           00475         RETURN
00EA   1A87           00476         BTFSC       MOTOR_DIR_CTRL
00EB   2???           00477         GOTO        STOP_L
00EC   1112           00478 STOP_R  BCF         T2CON, TMR2ON
00ED   0197           00479         CLRF        CCP1CON
                      00480         ;CLRF       CCPR1L
00EE   2???           00481         CALL        DEL_10MS
00EF   2???           00482         CALL        DEL_10MS
00F0   2???           00483         CALL        DEL_10MS
00F1   2???           00484         CALL        DEL_10MS
00F2   2???           00485         CALL        DEL_10MS
00F3   30F9           00486         MOVLW       R_MOTOR_SPD
                      00487         ;MOVWF      CCP1CON
00F4   1512           00488         BSF         T2CON, TMR2ON
00F5   0008           00489         RETURN
                      00490 
00F6                  00491 MOTOR_CTRL_L                                ; Turn left - robot is too far
00F6   300A           00492         MOVLW       crit_dist_r
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F7   0247           00493         SUBWF       measured_distance_lat, W
00F8   1C03           00494         BTFSS       STATUS, 0               ; C==0 if measured_distance_lat >= crit_dist
00F9   0008           00495         RETURN
00FA   1A87           00496         BTFSC       MOTOR_DIR_CTRL
00FB   2???           00497         GOTO        STOP_R
00FC   1112           00498 STOP_L  BCF         T2CON, TMR2ON
00FD   019D           00499         CLRF        CCP2CON
                      00500         ;CLRF       CCPR2L
00FE   2???           00501         CALL        DEL_10MS
00FF   2???           00502         CALL        DEL_10MS
0100   2???           00503         CALL        DEL_10MS
0101   2???           00504         CALL        DEL_10MS
0102   2???           00505         CALL        DEL_10MS
0103   30F9           00506         MOVLW       L_MOTOR_SPD
                      00507         ;MOVWF      CCP2CON
0104   1512           00508         BSF         T2CON, TMR2ON
0105   0008           00509         RETURN
                      00510         
                      00511 ;******************************************************************************;
                      00512 ;                               DISPLAY DATA                                   ;
                      00513 ;******************************************************************************;
0106                  00514 STOP_DATA
                      00515         WRT_LCD     "T"
0106   3054               M         MOVLW       "T"
0107   2???               M         CALL        WR_DATA
                      00516         WRT_LCD     "I"
0108   3049               M         MOVLW       "I"
0109   2???               M         CALL        WR_DATA
                      00517         WRT_LCD     "M"
010A   304D               M         MOVLW       "M"
010B   2???               M         CALL        WR_DATA
                      00518         WRT_LCD     "E"
010C   3045               M         MOVLW       "E"
010D   2???               M         CALL        WR_DATA
                      00519         WRT_LCD     ":"
010E   303A               M         MOVLW       ":"
010F   2???               M         CALL        WR_DATA
                      00520         WRT_LCD     " "
0110   3020               M         MOVLW       " "
0111   2???               M         CALL        WR_DATA
                      00521         ;Get minute             
                      00522 ;       rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                      00523         ;WRT_MEM_LCD 0x77
                      00524 ;       .WRT_MEM_LCD 0x78
                      00525 ;       WRT_LCD     ":"
                      00526 
                      00527         ;Get seconds
                      00528         ;rtc_read    0x00               ;Read Address 0x00 from DS1307---seconds
                      00529 ;       WRT_MEM_LCD 0x77
                      00530 ;       WRT_MEM_LCD 0x78
                      00531 
0112   30C0           00532         movlw       B'11000000'         ;Next line displays (min):(sec) **:**
0113   2???           00533         call        WR_INS
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0114   2???           00534         CALL        WRT_DATA
0115   2???           00535         CALL        DEL_1S
0116   2???           00536         CALL        DEL_1S
0117   2???           00537         CALL        CLR_LCD
                      00538         
0118   304C           00539         MOVLW       spot_base_loc
0119   0084           00540         MOVWF       FSR
                      00541         
011A                  00542 DATA_LOOP       
                      00543         WRT_LCD     "S"
011A   3053               M         MOVLW       "S"
011B   2???               M         CALL        WR_DATA
                      00544         WRT_LCD     "P"
011C   3050               M         MOVLW       "P"
011D   2???               M         CALL        WR_DATA
                      00545         WRT_LCD     "O"
011E   304F               M         MOVLW       "O"
011F   2???               M         CALL        WR_DATA
                      00546         WRT_LCD     "T"
0120   3054               M         MOVLW       "T"
0121   2???               M         CALL        WR_DATA
                      00547         WRT_LCD     ":"
0122   303A               M         MOVLW       ":"
0123   2???               M         CALL        WR_DATA
                      00548         WRT_LCD     " "
0124   3020               M         MOVLW       " "
0125   2???               M         CALL        WR_DATA
                      00549         WRT_MEM_LCD INDF
0126   0800               M         MOVFW       INDF
0127   2???               M         CALL        WR_DATA
                      00550         WRT_LCD     "c"
0128   3063               M         MOVLW       "c"
0129   2???               M         CALL        WR_DATA
                      00551         WRT_LCD     "m"
012A   306D               M         MOVLW       "m"
012B   2???               M         CALL        WR_DATA
                      00552         
012C   2???           00553         CALL        DEL_1S
                      00554         
012D   2???           00555         CALL        CLR_LCD
012E   0A84           00556         INCF        FSR, F
                      00557 
012F   0BCA           00558         DECFSZ      spot_count, F
0130   2???           00559         GOTO        DATA_LOOP
                      00560         
                      00561         WRT_LCD     "E"
0131   3045               M         MOVLW       "E"
0132   2???               M         CALL        WR_DATA
                      00562         WRT_LCD     "N"
0133   304E               M         MOVLW       "N"
0134   2???               M         CALL        WR_DATA
                      00563         WRT_LCD     "D"
0135   3044               M         MOVLW       "D"
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0136   2???               M         CALL        WR_DATA
                      00564 
0137   2???           00565         GOTO        FINISH
                      00566 
                      00567 ;******************************************************************************;
                      00568 ;                                  HELLO                                       ;
                      00569 ;******************************************************************************;
0138                  00570 START_MSG
                      00571         WRT_LCD     "H"
0138   3048               M         MOVLW       "H"
0139   2???               M         CALL        WR_DATA
                      00572         WRT_LCD     "I"
013A   3049               M         MOVLW       "I"
013B   2???               M         CALL        WR_DATA
                      00573         WRT_LCD     "T"
013C   3054               M         MOVLW       "T"
013D   2???               M         CALL        WR_DATA
                      00574         WRT_LCD     " "
013E   3020               M         MOVLW       " "
013F   2???               M         CALL        WR_DATA
                      00575         WRT_LCD     "*"
0140   302A               M         MOVLW       "*"
0141   2???               M         CALL        WR_DATA
                      00576         WRT_LCD     " "
0142   3020               M         MOVLW       " "
0143   2???               M         CALL        WR_DATA
                      00577         WRT_LCD     "T"
0144   3054               M         MOVLW       "T"
0145   2???               M         CALL        WR_DATA
                      00578         WRT_LCD     "O"
0146   304F               M         MOVLW       "O"
0147   2???               M         CALL        WR_DATA
                      00579         WRT_LCD     " "
0148   3020               M         MOVLW       " "
0149   2???               M         CALL        WR_DATA
                      00580         WRT_LCD     "S"
014A   3053               M         MOVLW       "S"
014B   2???               M         CALL        WR_DATA
                      00581         WRT_LCD     "T"
014C   3054               M         MOVLW       "T"
014D   2???               M         CALL        WR_DATA
                      00582         WRT_LCD     "A"
014E   3041               M         MOVLW       "A"
014F   2???               M         CALL        WR_DATA
                      00583         WRT_LCD     "R"
0150   3052               M         MOVLW       "R"
0151   2???               M         CALL        WR_DATA
                      00584         WRT_LCD     "T"
0152   3054               M         MOVLW       "T"
0153   2???               M         CALL        WR_DATA
0154   0008           00585         RETURN
                      00586         
                      00587 ;******************************************************************************;
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00588 ;                                GOODBYE                                       ;
                      00589 ;******************************************************************************;
0155                  00590 STOP_STDBY_MSG
                      00591         WRT_LCD     "H"
0155   3048               M         MOVLW       "H"
0156   2???               M         CALL        WR_DATA
                      00592         WRT_LCD     "I"
0157   3049               M         MOVLW       "I"
0158   2???               M         CALL        WR_DATA
                      00593         WRT_LCD     "T"
0159   3054               M         MOVLW       "T"
015A   2???               M         CALL        WR_DATA
                      00594         WRT_LCD     " "
015B   3020               M         MOVLW       " "
015C   2???               M         CALL        WR_DATA
                      00595         WRT_LCD     "*"
015D   302A               M         MOVLW       "*"
015E   2???               M         CALL        WR_DATA
                      00596         WRT_LCD     " "
015F   3020               M         MOVLW       " "
0160   2???               M         CALL        WR_DATA
                      00597         WRT_LCD     "F"
0161   3046               M         MOVLW       "F"
0162   2???               M         CALL        WR_DATA
                      00598         WRT_LCD     "O"
0163   304F               M         MOVLW       "O"
0164   2???               M         CALL        WR_DATA
                      00599         WRT_LCD     "R"
0165   3052               M         MOVLW       "R"
0166   2???               M         CALL        WR_DATA
                      00600         WRT_LCD     " "
0167   3020               M         MOVLW       " "
0168   2???               M         CALL        WR_DATA
                      00601         WRT_LCD     "D"
0169   3044               M         MOVLW       "D"
016A   2???               M         CALL        WR_DATA
                      00602         WRT_LCD     "A"
016B   3041               M         MOVLW       "A"
016C   2???               M         CALL        WR_DATA
                      00603         WRT_LCD     "T"
016D   3054               M         MOVLW       "T"
016E   2???               M         CALL        WR_DATA
                      00604         WRT_LCD     "A"
016F   3041               M         MOVLW       "A"
0170   2???               M         CALL        WR_DATA
0171   0008           00605         RETURN
                      00606          
                      00607 ;******************************************************************************;
                      00608 ;                                 DATA                                         ;
                      00609 ;******************************************************************************;
0172                  00610 WRT_DATA        
                      00611         WRT_LCD     "N"
0172   304E               M         MOVLW       "N"
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0173   2???               M         CALL        WR_DATA
                      00612         WRT_LCD     "U"
0174   3055               M         MOVLW       "U"
0175   2???               M         CALL        WR_DATA
                      00613         WRT_LCD     "M"
0176   304D               M         MOVLW       "M"
0177   2???               M         CALL        WR_DATA
                      00614         WRT_LCD     " "
0178   3020               M         MOVLW       " "
0179   2???               M         CALL        WR_DATA
                      00615         WRT_LCD     "S"
017A   3053               M         MOVLW       "S"
017B   2???               M         CALL        WR_DATA
                      00616         WRT_LCD     "P"
017C   3050               M         MOVLW       "P"
017D   2???               M         CALL        WR_DATA
                      00617         WRT_LCD     "O"
017E   304F               M         MOVLW       "O"
017F   2???               M         CALL        WR_DATA
                      00618         WRT_LCD     "T"
0180   3054               M         MOVLW       "T"
0181   2???               M         CALL        WR_DATA
                      00619         WRT_LCD     "S"
0182   3053               M         MOVLW       "S"
0183   2???               M         CALL        WR_DATA
                      00620         WRT_LCD     ":"
0184   303A               M         MOVLW       ":"
0185   2???               M         CALL        WR_DATA
                      00621         WRT_LCD     " "
0186   3020               M         MOVLW       " "
0187   2???               M         CALL        WR_DATA
                      00622         CWRT_MEM_LCD num_spots
0188   084B               M         MOVFW       num_spots
0189   3E30               M         ADDLW       D'48'
018A   2???               M         CALL        WR_DATA
018B   0008           00623         RETURN
                      00624 ;******************************************************************************;
                      00625 ;                           RETREIVE START TIME                                ;
                      00626 ;******************************************************************************;
018C                  00627 GET_START_TIME
                      00628         ;Get minute             
                      00629         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
018C   3001               M         movlw       0x01
018D   1283 1303          M         banksel     0x73
018F   00F3               M         movwf       0x73
0190   2???               M         call        read_rtc
0191   1283 1303          M         banksel     0x75
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0193   0875               M         movf        0x75,w
0194   2???               M         call        rtc_convert   
0195   0877           00630         MOVFW       0X77
0196   00BB           00631         MOVWF       start_min10
0197   0878           00632         MOVFW       0X78
0198   00BA           00633         MOVWF       start_min
                      00634 
                      00635         ;Get seconds
                      00636         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0199   3000               M         movlw       0x00
019A   1283 1303          M         banksel     0x73
019C   00F3               M         movwf       0x73
019D   2???               M         call        read_rtc
019E   1283 1303          M         banksel     0x75
01A0   0875               M         movf        0x75,w
01A1   2???               M         call        rtc_convert   
01A2   0877           00637         MOVFW       0X77
01A3   00BD           00638         MOVWF       start_sec10
01A4   0878           00639         MOVFW       0X78
01A5   00BC           00640         MOVWF       start_sec
01A6   0008           00641         RETURN
                      00642 ;******************************************************************************;
                      00643 ;                           RETREIVE STOP TIME                                 ;
                      00644 ;******************************************************************************;
01A7                  00645 GET_STOP_TIME
                      00646         ;Get minute             
                      00647         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01A7   3001               M         movlw       0x01
01A8   1283 1303          M         banksel     0x73
01AA   00F3               M         movwf       0x73
01AB   2???               M         call        read_rtc
01AC   1283 1303          M         banksel     0x75
01AE   0875               M         movf        0x75,w
01AF   2???               M         call        rtc_convert   
01B0   0877           00648         MOVFW       0X77
01B1   00BF           00649         MOVWF       stop_min10
01B2   0878           00650         MOVFW       0X78
01B3   00BE           00651         MOVWF       stop_min
                      00652 
                      00653         ;Get seconds
                      00654         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01B4   3000               M         movlw       0x00
01B5   1283 1303          M         banksel     0x73
01B7   00F3               M         movwf       0x73
01B8   2???               M         call        read_rtc
01B9   1283 1303          M         banksel     0x75
01BB   0875               M         movf        0x75,w
01BC   2???               M         call        rtc_convert   
01BD   0877           00655         MOVFW       0X77
01BE   00C1           00656         MOVWF       stop_sec10
01BF   0878           00657         MOVFW       0X78
01C0   00C0           00658         MOVWF       stop_sec
01C1   0008           00659         RETURN
                      00660 ;******************************************************************************;
                      00661 ;                       DISPLAY RTC TIME TO LCD                                ;
                      00662 ;******************************************************************************;
01C2                  00663 SHOW_RTC
                      00664         ;clear LCD screen
01C2   3001           00665         movlw       b'00000001'
01C3   2???           00666         call        WR_INS
                      00667 
                      00668         ;Get year
                      00669         WRT_LCD     "2"
01C4   3032               M         MOVLW       "2"
01C5   2???               M         CALL        WR_DATA
                      00670         WRT_LCD     "0"
01C6   3030               M         MOVLW       "0"
01C7   2???               M         CALL        WR_DATA
                      00671         rtc_read    0x06                ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01C8   3006               M         movlw       0x06
01C9   1283 1303          M         banksel     0x73
01CB   00F3               M         movwf       0x73
01CC   2???               M         call        read_rtc
01CD   1283 1303          M         banksel     0x75
01CF   0875               M         movf        0x75,w
01D0   2???               M         call        rtc_convert   
                      00672         WRT_MEM_LCD 0x77
01D1   0877               M         MOVFW       0x77
01D2   2???               M         CALL        WR_DATA
                      00673         WRT_MEM_LCD 0x78
01D3   0878               M         MOVFW       0x78
01D4   2???               M         CALL        WR_DATA
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00674 
                      00675         WRT_LCD     "/"
01D5   302F               M         MOVLW       "/"
01D6   2???               M         CALL        WR_DATA
                      00676 
                      00677         ;Get month
                      00678         rtc_read    0x05                ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01D7   3005               M         movlw       0x05
01D8   1283 1303          M         banksel     0x73
01DA   00F3               M         movwf       0x73
01DB   2???               M         call        read_rtc
01DC   1283 1303          M         banksel     0x75
01DE   0875               M         movf        0x75,w
01DF   2???               M         call        rtc_convert   
                      00679         WRT_MEM_LCD 0x77
01E0   0877               M         MOVFW       0x77
01E1   2???               M         CALL        WR_DATA
                      00680         WRT_MEM_LCD 0x78
01E2   0878               M         MOVFW       0x78
01E3   2???               M         CALL        WR_DATA
                      00681 
                      00682         WRT_LCD     "/"
01E4   302F               M         MOVLW       "/"
01E5   2???               M         CALL        WR_DATA
                      00683 
                      00684         ;Get day
                      00685         rtc_read    0x04                ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01E6   3004               M         movlw       0x04
01E7   1283 1303          M         banksel     0x73
01E9   00F3               M         movwf       0x73
01EA   2???               M         call        read_rtc
01EB   1283 1303          M         banksel     0x75
01ED   0875               M         movf        0x75,w
01EE   2???               M         call        rtc_convert   
                      00686         WRT_MEM_LCD 0x77
01EF   0877               M         MOVFW       0x77
01F0   2???               M         CALL        WR_DATA
                      00687         WRT_MEM_LCD 0x78
01F1   0878               M         MOVFW       0x78
01F2   2???               M         CALL        WR_DATA
                      00688 
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01F3   30C0           00689         movlw       B'11000000'         ;Next line displays (hour):(min):(sec) **:**:**
01F4   2???           00690         call        WR_INS
                      00691         ;Get hour
                      00692         rtc_read    0x02                ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01F5   3002               M         movlw       0x02
01F6   1283 1303          M         banksel     0x73
01F8   00F3               M         movwf       0x73
01F9   2???               M         call        read_rtc
01FA   1283 1303          M         banksel     0x75
01FC   0875               M         movf        0x75,w
01FD   2???               M         call        rtc_convert   
                      00693         WRT_MEM_LCD 0x77
01FE   0877               M         MOVFW       0x77
01FF   2???               M         CALL        WR_DATA
                      00694         WRT_MEM_LCD 0x78
0200   0878               M         MOVFW       0x78
0201   2???               M         CALL        WR_DATA
                      00695         WRT_LCD     ":"
0202   303A               M         MOVLW       ":"
0203   2???               M         CALL        WR_DATA
                      00696 
                      00697         ;Get minute             
                      00698         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0204   3001               M         movlw       0x01
0205   1283 1303          M         banksel     0x73
0207   00F3               M         movwf       0x73
0208   2???               M         call        read_rtc
0209   1283 1303          M         banksel     0x75
020B   0875               M         movf        0x75,w
020C   2???               M         call        rtc_convert   
                      00699         WRT_MEM_LCD 0x77
020D   0877               M         MOVFW       0x77
020E   2???               M         CALL        WR_DATA
                      00700         WRT_MEM_LCD 0x78
020F   0878               M         MOVFW       0x78
0210   2???               M         CALL        WR_DATA
                      00701         WRT_LCD     ":"
0211   303A               M         MOVLW       ":"
0212   2???               M         CALL        WR_DATA
                      00702 
                      00703         ;Get seconds
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00704         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0213   3000               M         movlw       0x00
0214   1283 1303          M         banksel     0x73
0216   00F3               M         movwf       0x73
0217   2???               M         call        read_rtc
0218   1283 1303          M         banksel     0x75
021A   0875               M         movf        0x75,w
021B   2???               M         call        rtc_convert   
                      00705         WRT_MEM_LCD 0x77
021C   0877               M         MOVFW       0x77
021D   2???               M         CALL        WR_DATA
                      00706         WRT_MEM_LCD 0x78
021E   0878               M         MOVFW       0x78
021F   2???               M         CALL        WR_DATA
                      00707 
0220   0008           00708         RETURN
                      00709 ;******************************************************************************;
                      00710 ;                       INITIALIZE RTC TIME                                    ;
                      00711 ;******************************************************************************;                
0221                  00712 SET_RTC_TIME
                      00713         rtc_resetAll    ;reset rtc
                          M ;input:         none
                          M ;output:        none
                          M ;desc:          Resets all the time keeping registers on the RTC to zero
0221   1283 1303          M         banksel     0x74
0223   01F4               M         clrf        0x74
0224   1283 1303          M         banksel     0x73
0226   01F3               M         clrf        0x73
0227   2???               M         call        write_rtc           ;Write 0 to Seconds
0228   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
022A   0AF3               M         incf        0x73                        ;Set register address to 1
022B   2???               M         call        write_rtc
022C   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
022E   0AF3               M         incf        0x73                        ;Set register address to 2
022F   2???               M         call        write_rtc
0230   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0232   0AF3               M         incf        0x73                        ;Set register address to 3
0233   2???               M         call        write_rtc
0234   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0236   0AF3               M         incf        0x73                        ;Set register address to 4
0237   2???               M         call        write_rtc
0238   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

023A   0AF3               M         incf        0x73                        ;Set register address to 5
023B   2???               M         call        write_rtc
023C   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
023E   0AF3               M         incf        0x73                        ;Set register address to 6
023F   2???               M         call        write_rtc
                      00714 
                      00715         rtc_set     0x00,       B'10000000'
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0240   1283 1303          M         banksel     0x73
0242   3000               M         movlw       0x00
0243   00F3               M         movwf       0x73
0244   1283 1303          M         banksel     0x74
0246   3080               M         movlw       B'10000000'
0247   00F4               M         movwf       0x74        
0248   2???               M         call        write_rtc
                      00716 
                      00717         ;set time 
                      00718         rtc_set     0x06,       B'00010110'             ; Year
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0249   1283 1303          M         banksel     0x73
024B   3006               M         movlw       0x06
024C   00F3               M         movwf       0x73
024D   1283 1303          M         banksel     0x74
024F   3016               M         movlw       B'00010110'
0250   00F4               M         movwf       0x74        
0251   2???               M         call        write_rtc
                      00719         rtc_set     0x05,       B'00000100'             ; Month
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0252   1283 1303          M         banksel     0x73
0254   3005               M         movlw       0x05
0255   00F3               M         movwf       0x73
0256   1283 1303          M         banksel     0x74
0258   3004               M         movlw       B'00000100'
0259   00F4               M         movwf       0x74        
025A   2???               M         call        write_rtc
                      00720         rtc_set     0x04,       B'00000110'             ; Date
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       address specified by addliteral in the RTC
025B   1283 1303          M         banksel     0x73
025D   3004               M         movlw       0x04
025E   00F3               M         movwf       0x73
025F   1283 1303          M         banksel     0x74
0261   3006               M         movlw       B'00000110'
0262   00F4               M         movwf       0x74        
0263   2???               M         call        write_rtc
                      00721         rtc_set     0x03,       B'00000010'             ; Day
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0264   1283 1303          M         banksel     0x73
0266   3003               M         movlw       0x03
0267   00F3               M         movwf       0x73
0268   1283 1303          M         banksel     0x74
026A   3002               M         movlw       B'00000010'
026B   00F4               M         movwf       0x74        
026C   2???               M         call        write_rtc
                      00722         rtc_set     0x02,       B'00000000'             ; Hours
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
026D   1283 1303          M         banksel     0x73
026F   3002               M         movlw       0x02
0270   00F3               M         movwf       0x73
0271   1283 1303          M         banksel     0x74
0273   3000               M         movlw       B'00000000'
0274   00F4               M         movwf       0x74        
0275   2???               M         call        write_rtc
                      00723         rtc_set     0x01,       B'00000000'             ; Minutes
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0276   1283 1303          M         banksel     0x73
0278   3001               M         movlw       0x01
0279   00F3               M         movwf       0x73
027A   1283 1303          M         banksel     0x74
027C   3000               M         movlw       B'00000000'
027D   00F4               M         movwf       0x74        
027E   2???               M         call        write_rtc
                      00724         rtc_set     0x00,       B'00000000'             ; Seconds
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

027F   1283 1303          M         banksel     0x73
0281   3000               M         movlw       0x00
0282   00F3               M         movwf       0x73
0283   1283 1303          M         banksel     0x74
0285   3000               M         movlw       B'00000000'
0286   00F4               M         movwf       0x74        
0287   2???               M         call        write_rtc
0288   0008           00725         return
                      00726 
                      00727 ;******************************************************************************;                
                      00728 ;******************************************************************************;
                      00729 ;******************************************************************************;
0289                  00730 DIV16X8 ; DIV_HI and DIV_LO / DIVSOR.  result to Q
                      00731                 ; does not deal with divide by 0 case
0289   01B6           00732         CLRF Q
028A                  00733 DIV_1
028A   0835           00734         MOVF DIVISOR, W
028B   02B4           00735         SUBWF DIV_LO, F
028C   1C03           00736         BTFSS STATUS, C ; if positive skip
028D   2???           00737         GOTO BORROW
028E   2???           00738         GOTO DIV_2
028F                  00739 BORROW
028F   3001           00740         MOVLW 0x01
0290   02B3           00741         SUBWF DIV_HI, F ; DIV_HI = DIV_HI - 1
0291   1C03           00742         BTFSS STATUS, C ; if no borrow occurred
0292   2???           00743         GOTO DIV_DONE   
0293                  00744 DIV_2
0293   0AB6           00745         INCF Q, F
0294   2???           00746         GOTO DIV_1
0295                  00747 DIV_DONE
0295   0008           00748         RETURN
                      00749 
0296                  00750 DEL_1S
0296   3015           00751         movlw   0x15
0297   00B7           00752         movwf   d1
0298   3074           00753         movlw   0x74
0299   00B8           00754         movwf   d2
029A   3006           00755         movlw   0x06
029B   00B9           00756         movwf   d3
029C                  00757 DEL_1S_0
029C   0BB7           00758         decfsz  d1, f
029D   2???           00759         goto    $+2
029E   0BB8           00760         decfsz  d2, f
029F   2???           00761         goto    $+2
02A0   0BB9           00762         decfsz  d3, f
02A1   2???           00763         goto    DEL_1S_0
02A2   2???           00764         goto    $+1
02A3   2???           00765         goto    $+1
02A4   0008           00766         return
                      00767         
02A5                  00768 DEL_10MS
02A5   3086           00769         movlw   0x86
02A6   00B7           00770         movwf   d1
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02A7   3014           00771         movlw   0x14
02A8   00B8           00772         movwf   d2
02A9                  00773 DEL_10MS_0
02A9   0BB7           00774         decfsz  d1, f
02AA   2???           00775         goto    $+2
02AB   0BB8           00776         decfsz  d2, f
02AC   2???           00777         goto    DEL_10MS_0
02AD   2???           00778         goto    $+1
02AE   0000           00779         nop
02AF   0008           00780         return
                      00781 
02B0                  00782 DEL_2_1MS
02B0   3018           00783         movlw   0x18
02B1   00B7           00784         movwf   d1
02B2   3005           00785         movlw   0x05
02B3   00B8           00786         movwf   d2
02B4                  00787 DEL_2_1MS_0
02B4   0BB7           00788         decfsz  d1, f
02B5   2???           00789         goto    $+2
02B6   0BB8           00790         decfsz  d2, f
02B7   2???           00791         goto    DEL_2_1MS_0
02B8   2???           00792         goto    $+1
02B9   0000           00793         nop
02BA   0008           00794         return
                      00795         
02BB                  00796 DEL_1_5MS
02BB   30EC           00797         movlw   0xEC
02BC   00B7           00798         movwf   d1
02BD   3003           00799         movlw   0x03
02BE   00B8           00800         movwf   d2
02BF                  00801 DEL_1_5MS_0
02BF   0BB7           00802         decfsz  d1, f
02C0   2???           00803         goto    $+2
02C1   0BB8           00804         decfsz  d2, f
02C2   2???           00805         goto    DEL_1_5MS_0
02C3   2???           00806         goto    $+1
02C4   0000           00807         nop
02C5   0008           00808         return
                      00809         
02C6                  00810 DEL_20US
02C6   300F           00811         movlw   0x0F
02C7   00B7           00812         movwf   d1
02C8                  00813 DEL_20US_0
02C8   0BB7           00814         decfsz  d1, f
02C9   2???           00815         goto    DEL_20US_0
02CA   0008           00816         return
                      00817 
02CB                  00818 FINISH  
02CB   2???           00819         GOTO    FINISH
                      00820         
3F72                  00821         END
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ARM_CLOSE                         000000A5
ARM_CTRL                          000000A0
ARM_OPEN                          000000AD
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BORROW                            0000028F
BRGH                              00000002
BUZZER                            PORTC, 7
C                                 00000000
CALIBRATE                         0000003C
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

CKP                               00000004
CLR_LCD                           00000000
CREN                              00000004
CSRC                              00000007
CWRT_MEM_LCD                      
D                                 00000005
DATA_ADDRESS                      00000005
DATA_LOOP                         0000011A
DC                                00000001
DEL_10MS                          000002A5
DEL_10MS_0                        000002A9
DEL_1S                            00000296
DEL_1S_0                          0000029C
DEL_1_5MS                         000002BB
DEL_1_5MS_0                       000002BF
DEL_20US                          000002C6
DEL_20US_0                        000002C8
DEL_2_1MS                         000002B0
DEL_2_1MS_0                       000002B4
DIV16X8                           00000289
DIVISOR                           00000035
DIV_1                             0000028A
DIV_2                             00000293
DIV_DONE                          00000295
DIV_HI                            00000033
DIV_LO                            00000034
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FINAL_BACKUP                      00000070
FINISH                            000002CB
FSR                               00000004
GCEN                              00000007
GET_START_TIME                    0000018C
GET_STOP_TIME                     000001A7
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

IBF                               00000007
IBOV                              00000005
INDF                              00000000
INIT                              00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
INT_HANDLER                       0000007E
IRP                               00000007
InitLCD                           00000000
LCD_INS                           
L_MOTOR_SPD                       B'11111001'
MOTOR_CTRL_L                      000000F6
MOTOR_CTRL_R                      000000E6
MOTOR_DIR_CTRL                    PORTC, 5
MUX_CTRL_0                        PORTA, 1
MUX_CTRL_1                        PORTA, 2
MUX_CTRL_2                        PORTA, 3
MUX_CTRL_3                        PORTA, 5
MUX_IN                            PORTA, 0
MX_LOOP                           0000008B
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
Q                                 00000036
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_IRS                          00000089
READ_WRITE                        00000002
RETURN_HOME                       00000061
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_MOTOR_SPD                       B'11111001'
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SCAN                              00000053
SEN                               00000000
SERVO_CTRL                        PORTC, 0
SET_RTC_TIME                      00000221
SHOW_RTC                          000001C2
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
START_MSG                         00000138
START_STDBY                       0000002F
STATUS                            00000003
STOP_DATA                         00000106
STOP_L                            000000FC
STOP_R                            000000EC
STOP_STDBY                        00000072
STOP_STDBY_MSG                    00000155
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
USHOLDL                           000000D7
USHOLDS                           000000BC
USONIC_LAT                        000000D1
USONIC_LAT_ECHO                   000000D4
USONIC_SUP                        000000B6
USONIC_SUP_ECHO                   000000B9
US_LAT_ECHO                       PORTD, 1
US_LAT_TRIG                       PORTD, 0
US_SUP_ECHO                       PORTB, 4
US_SUP_TRIG                       PORTB, 3
W                                 00000000
WCOL                              00000007
WHL_ENC                           00000099
WR                                00000001
WREN                              00000002
WRERR                             00000003
WRT_DATA                          00000172
WRT_LCD                           
WRT_MEM_LCD                       
WR_DATA                           00000000
WR_INS                            00000000
Z                                 00000002
_.org_1_0035                      00000035
_.org_1_0079                      00000079
_.org_1_00BA                      000000BA
_.org_1_00D5                      000000D5
_.org_1_029D                      0000029D
_.org_1_029F                      0000029F
_.org_1_02A2                      000002A2
_.org_1_02A3                      000002A3
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

_.org_1_02AA                      000002AA
_.org_1_02AD                      000002AD
_.org_1_02B5                      000002B5
_.org_1_02B8                      000002B8
_.org_1_02C0                      000002C0
_.org_1_02C3                      000002C3
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
__DEBUG                           
__MPLAB_DEBUGGER_PICKIT2          1
crit_dist                         0X0A
crit_dist_l                       0x03
crit_dist_r                       0x0A
d1                                00000037
d2                                00000038
d3                                00000039
MPASM 5.65                          MAIN.ASM   4-1-2016  17:13:05         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

i2c_common_setup                  00000000
long_del                          00000030
measured_distance_lat             00000047
measured_distance_sup             00000048
multiplex_count                   00000043
num_spots                         0000004B
read_rtc                          00000000
rob_lat_distance                  00000044
rob_long_distance                 00000046
rob_long_distance_count           00000045
rob_return                        00000049
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
spot_base_loc                     0000004C
spot_count                        0000004A
spot_detected                     00000042
start_min                         0000003A
start_min10                       0000003B
start_sec                         0000003C
start_sec10                       0000003D
stop_min                          0000003E
stop_min10                        0000003F
stop_sec                          00000040
stop_sec10                        00000041
temp_status                       00000032
temp_w                            00000031
write_rtc                         00000000

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :    15 reported,     0 suppressed

