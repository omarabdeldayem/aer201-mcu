MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;******************************************************************************;
                      00002 ;        ____    ___  ______    ___  ____       ____  ____  ____    ___  ____  ;
                      00003 ;       |    \  /  _]|      T  /  _]|    \     |    \l    j|    \  /  _]|    \ ;
                      00004 ;       |  o  )/  [_ |      | /  [_ |  D  )    |  o  )|  T |  o  )/  [_ |  D  );
                      00005 ;       |   _/Y    _]l_j  l_jY    _]|    /     |   _/ |  | |   _/Y    _]|    / ;
                      00006 ;       |  |  |   [_   |  |  |   [_ |    \     |  |   |  | |  |  |   [_ |    \ ;
                      00007 ;       |  |  |     T  |  |  |     T|  .  Y    |  |   j  l |  |  |     T|  .  Y;
                      00008 ;       l__j  l_____j  l__j  l_____jl__j\_j    l__j  |____jl__j  l_____jl__j\_j;
                      00009 ;------------------------------------------------------------------------------;
                      00010 ;               AER201 Team 61 'Peter Piper' Pipe Inspector                    ;
                      00011 ;                        Author: Omar Abdeldayem                               ;
                      00012 ;                           Created: 1/12/2016                                 ;
                      00013 ;------------------------------------------------------------------------------;
                      00014 ; DESCRIPTION:                                                                                          
                                                               ;
                      00015 ; It does shit, yo.                                                                                     
                                                               ;
                      00016 ;******************************************************************************;
                      00017 ;******************************************************************************;
                      00018 ;******************************************************************************;
                      00019 
                      00020         List    p=16f877                    ; list directive to define processor
                      00021         #include        <p16f877.inc>       ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
2007   3F72           00022         __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP
                            _OFF
                      00023 
                      00024         #include        <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel     0x74
                      00011         clrf        0x74
                      00012         banksel     0x73
                      00013         clrf        0x73
                      00014         call        write_rtc           ;Write 0 to Seconds
                      00015         banksel     0x73
                      00016         incf        0x73                        ;Set register address to 1
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00017         call        write_rtc
                      00018         banksel     0x73
                      00019         incf        0x73                        ;Set register address to 2
                      00020         call        write_rtc
                      00021         banksel     0x73
                      00022         incf        0x73                        ;Set register address to 3
                      00023         call        write_rtc
                      00024         banksel     0x73
                      00025         incf        0x73                        ;Set register address to 4
                      00026         call        write_rtc
                      00027         banksel     0x73
                      00028         incf        0x73                        ;Set register address to 5
                      00029         call        write_rtc
                      00030         banksel     0x73
                      00031         incf        0x73                        ;Set register address to 6
                      00032         call        write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set macro       addliteral, datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel     0x73
                      00042         movlw       addliteral
                      00043         movwf       0x73
                      00044         banksel     0x74
                      00045         movlw       datliteral
                      00046         movwf       0x74        
                      00047         call        write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read macro      addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw       addliteral
                      00058         banksel     0x73
                      00059         movwf       0x73
                      00060         call        read_rtc
                      00061         banksel     0x75
                      00062         movf        0x75,w
                      00063         call        rtc_convert   
                      00064         endm
                      00025         #include        <lcd.inc>
  0000                00001     extern      InitLCD,WR_INS,WR_DATA,CLR_LCD
                      00026 ;******************************************************************************;
                      00027 ;                               BANK0 RAM                                      ;
                      00028 ;******************************************************************************;
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00029         CBLOCK      0x30
  00000030            00030         long_del    ; 0x30
  00000031            00031         temp_w      ; 0x31
  00000032            00032         temp_status ; 0x32
                      00033                     ; DIVISION Registers
  00000033            00034         DIV_HI      ; 0X33
  00000034            00035         DIV_LO      ; 0X34
  00000035            00036         DIVISOR     ; 0X35
  00000036            00037         Q           ; 0X36
  00000037            00038         d1
  00000038            00039         d2
  00000039            00040         d3          ; 0X39
                      00041                     ; ROBOT VARS
  0000003A            00042         start_min   ; 0X3A
  0000003B            00043         start_min10 ; 0X3B
  0000003C            00044         start_sec
  0000003D            00045         start_sec10
  0000003E            00046         stop_min
  0000003F            00047         stop_min10
  00000040            00048         stop_sec    ; 0X40
  00000041            00049         stop_sec10  ; 0x41
  00000042            00050         spot_detected
  00000043            00051         multiplex_count
  00000044            00052         rob_lat_distance
  00000045            00053         rob_long_distance_count
  00000046            00054         rob_long_distance
  00000047            00055         measured_distance_lat
  00000048            00056         measured_distance_sup
  00000049            00057         rob_return
  0000004A            00058         spot_count  ; 0X4A
  0000004B            00059         num_spots
  0000004C            00060         spot_base_loc
                      00061         ENDC
                      00062 
                      00063 ;******************************************************************************;
                      00064 ;                               EQUATES                                        ;
                      00065 ;******************************************************************************;
                      00066         #define     crit_dist           0X08
                      00067         #define     crit_dist_r         0x02
                      00068         #define     crit_dist_l         0x05
                      00069         #define     MUX_CTRL_0          PORTA, 0
                      00070         #define     MUX_CTRL_1          PORTA, 1
                      00071         #define     MUX_CTRL_2          PORTA, 2
                      00072         #define     MUX_CTRL_3          PORTA, 3
                      00073         #define     SERVO_CTRL          PORTA, 5
                      00074         #define     US_SUP_TRIG         PORTD, 1
                      00075         #define     US_SUP_ECHO         PORTD, 2
                      00076         #define     MUX_IN              PORTC, 0
                      00077         #define     MOTOR_DIR_CTRL      PORTC, 5
                      00078         #define     US_LAT_TRIG         PORTB, 3
                      00079         #define     US_LAT_ECHO         PORTB, 4
                      00080         #define     BUZZER              PORTD, 0
                      00081         #define     L_MOTOR_SPD         B'11111111'
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00082         #define     R_MOTOR_SPD         B'11111111'
                      00083 ;******************************************************************************;
                      00084 ;                               MACROS                                         ;
                      00085 ;******************************************************************************;
                      00086 MULT    macro       val1, val2, result
                      00087         MOVF        val1, W
                      00088         ADDWF       val1, W
                      00089         MOVWF       result
                      00090         DECFSZ      val2, f
                      00091         GOTO        $-3
                      00092         endm
                      00093         
                      00094 WRT_LCD macro       val
                      00095         MOVLW       val
                      00096         CALL        WR_DATA
                      00097         endm
                      00098 LCD_INS macro       val
                      00099         MOVLW       val
                      00100         CALL        WR_INS
                      00101         endm
                      00102         
                      00103 WRT_MEM_LCD macro   val
                      00104         MOVFW       val
                      00105         CALL        WR_DATA
                      00106         endm
                      00107 
                      00108 CWRT_MEM_LCD macro   val
                      00109         MOVFW       val
                      00110         ADDLW       D'48'
                      00111         CALL        WR_DATA
                      00112         endm
                      00113 ;******************************************************************************;
                      00114 ;                          VECTOR TABLE                                        ;
                      00115 ;******************************************************************************;
                      00116         ORG         0x0000              ; RESET vector must always be at 0x00
0000   2???           00117         GOTO        INIT                ; Just jump to the main code section.
                      00118         ORG         0x0004
0004   2???           00119         GOTO        INT_HANDLER
                      00120 
                      00121 ;******************************************************************************;
                      00122 ;                         ROBOT INITIALIZATION                                 ;
                      00123 ;******************************************************************************;
0005                  00124 INIT
0005   1683           00125         BSF         STATUS, RP0         ; Select bank 1
0006   018B           00126         CLRF        INTCON              ; Disable interrupts for now
                      00127         
0007   3006           00128         MOVLW       0x06                ; Turn PORT A to digital
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0008   009F           00129         MOVWF       ADCON1
                      00130         
0009   3010           00131         MOVLW       b'00010000'         ; PORT A pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000A   0085           00132         MOVWF       TRISA
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B   30F3           00133         MOVLW       b'11110011'         ; PORT B pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000C   0086           00134         MOVWF       TRISB
000D   3099           00135         MOVLW       b'10011001'         ; PORT C pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000E   0087           00136         MOVWF       TRISC
000F   3000           00137         MOVLW       B'00000000'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0010   0088           00138         MOVWF       TRISD               ; PORT D pin mapping
0011   3001           00139         MOVLW       b'00000001'         ; PORT E pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0012   0089           00140         MOVWF       TRISE
                      00141         
0013   30FF           00142         MOVLW       B'11111111'         ; PWM pulsing period (484Hz)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0014   0092           00143         MOVWF       PR2
                      00144        
0015   1283           00145         BCF         STATUS, RP0         ; select bank 0
0016   0185           00146         CLRF        PORTA
0017   0186           00147         CLRF        PORTB
0018   0187           00148         CLRF        PORTC
0019   0188           00149         CLRF        PORTD
001A   30FF           00150         MOVLW       L_MOTOR_SPD         ; 100% DUTY CYCLE
001B   0095           00151         MOVWF       CCPR1L              
001C   30FF           00152         MOVLW       R_MOTOR_SPD         ; '01100100' 100% DUTY CYCLE
001D   009B           00153         MOVWF       CCPR2L
001E   30FF           00154         MOVLW       B'11111111'
001F   0097           00155         MOVWF       CCP1CON
0020   30FF           00156         MOVLW       B'11111111'
0021   009D           00157         MOVWF       CCP2CON
                      00158         
0022   3005           00159         MOVLW       B'00000101'         ; Initialize and hold timer 2
0023   0092           00160         MOVWF       T2CON
0024   0191           00161         CLRF        TMR2
0025   1112           00162         BCF         T2CON, TMR2ON
                      00163         
0026   3010           00164         MOVLW       0X10                ; TMR1 for Ultrasonic Sensors
0027   0090           00165         MOVWF       T1CON
0028   018F           00166         CLRF        TMR1H
0029   018E           00167         CLRF        TMR1L
                      00168         
                      00169         ;CALL       i2c_common_setup
002A   2???           00170         CALL        InitLCD
                      00171         
002B   01CB           00172         CLRF        num_spots
002C   01CA           00173         CLRF        spot_count
002D   01C2           00174         CLRF        spot_detected
002E   01C7           00175         CLRF        measured_distance_lat
002F   01C8           00176         CLRF        measured_distance_sup
                      00177                                                 
0030   2???           00178         CALL        START_MSG
                      00179 ;******************************************************************************;
                      00180 ;                        ROBOT START AND STANDBY                               ;
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00181 ;******************************************************************************;
0031                  00182 START_STDBY
0031   1C86           00183         BTFSS       PORTB, 1            ; Wait until data is available from the keypad
0032   2???           00184         GOTO        START_STDBY
                      00185 
0033   0E06           00186         SWAPF       PORTB, W            ; Read PortB<7:4> into W<3:0>
0034   390F           00187         ANDLW       0x0F
0035   2???           00188         CALL        CLR_LCD
                      00189 
0036   1886           00190         BTFSC       PORTB,1             ; Wait until key is released
0037   2???           00191         GOTO        $-1
                      00192         
0038   2???           00193         CALL        CLR_LCD
0039   1408           00194         BSF         BUZZER
003A   2???           00195         CALL        DEL_1S
003B   1008           00196         BCF         BUZZER
003C   1287           00197         BCF         MOTOR_DIR_CTRL
003D   1512           00198         BSF         T2CON, TMR2ON
                      00199         ;CALL       SET_RTC_TIME
                      00200         ;CALL       GET_START_TIME
003E   2???           00201         GOTO        CALIBRATE
                      00202 
                      00203 ;******************************************************************************;
                      00204 ;                           SENSOR CALIBRATION                                 ;
                      00205 ;******************************************************************************;
003F                  00206 CALIBRATE
                      00207 ;       CALL        USONIC_LAT
                      00208 ;       CALL        ARM_CTRL
                      00209 ;       CALL        DEL_10MS
                      00210 ;       CALL        DEL_10MS
                      00211 ;       CALL        DEL_1S
003F   2???           00212         CALL        USONIC_LAT 
0040   3008           00213         MOVLW       crit_dist
0041   0247           00214         SUBWF       measured_distance_lat, W
0042   1803           00215         BTFSC       STATUS, 0
0043   2???           00216         GOTO        CALIBRATE
0044   1408           00217         BSF         BUZZER
0045   2???           00218         CALL        DEL_1S
0046   2???           00219         CALL        DEL_1S
0047   158B           00220         BSF         INTCON, RBIE            ; Enable interrupts
0048   160B           00221         BSF         INTCON, INTE
0049   178B           00222         BSF         INTCON, GIE
004A   1008           00223         BCF         BUZZER
004B   2???           00224         GOTO        SCAN
                      00225         
                      00226 ;******************************************************************************;
                      00227 ;                         PIPE SCAN SUPERLOOP                                  ;
                      00228 ;******************************************************************************;
004C                  00229 SCAN
                      00230 ;       CALL        USONIC_SUP
                      00231 ;       CALL        ARM_CTRL
                      00232 ;       CALL        USONIC_LAT
                      00233 ;       CALL        MOTOR_CTRL_R
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00234 ;       CALL        MOTOR_CTRL_L
                      00235 ;       MOVLW       crit_dist
                      00236 ;       SUBWF       measured_distance_lat, W
                      00237 ;       BTFSC       STATUS, 0
                      00238 ;       GOTO        RETURN_HOME
                      00239 ;       CALL        SHOW_RTC                ; DEBUG
                      00240 ;       CALL        READ_IRS
004C   2???           00241         GOTO        SCAN
                      00242 
                      00243 ;******************************************************************************;
                      00244 ;                           RETURN HOME ROUTINE                                ;
                      00245 ;******************************************************************************;
004D                  00246 RETURN_HOME
004D   018B           00247         CLRF        INTCON
004E   1687           00248         BSF         MOTOR_DIR_CTRL
004F   2???           00249         CALL        ARM_OPEN
0050   2???           00250         CALL        USONIC_LAT
0051   3008           00251         MOVLW       crit_dist
0052   0247           00252         SUBWF       measured_distance_lat, W
0053   1803           00253         BTFSC       STATUS, 0
0054   2???           00254         GOTO        RETURN_HOME
0055   2???           00255         GOTO        FINAL_BACKUP
                      00256 
0056                  00257 FINAL_BACKUP
0056   2???           00258         CALL        DEL_1S
0057   2???           00259         CALL        DEL_1S
0058   2???           00260         CALL        DEL_1S
0059   2???           00261         GOTO        STOP_STDBY
                      00262         
                      00263 ;******************************************************************************;
                      00264 ;                             STOP STANDBY                                     ;
                      00265 ;******************************************************************************;
005A                  00266 STOP_STDBY
005A   1112           00267         BCF         T2CON, TMR2ON       ; Turn off motors
005B   0197           00268         CLRF        CCP1CON
005C   019D           00269         CLRF        CCP2CON
                      00270 
                      00271         ;CALL       GET_STOP_TIME       ; Get stop time
005D   2???           00272         CALL        STOP_STDBY_MSG      ; Display standby message
005E   1C86           00273         BTFSS       PORTB, 1            ; Wait until data is available from the keypad
005F   2???           00274         GOTO        $-1
0060   0E06           00275         SWAPF       PORTB, W            ; Read PortB<7:4> into W<3:0>
0061   390F           00276         ANDLW       0x0F 
0062   2???           00277         CALL        CLR_LCD
0063   2???           00278         GOTO        STOP_DATA           ; Display run data
                      00279 
                      00280 ;******************************************************************************;
                      00281 ;                          INTERRUPT HANDLER                                   ;
                      00282 ;******************************************************************************;
0064                  00283 INT_HANDLER
0064   00B1           00284         MOVWF       temp_w
0065   0E03           00285         SWAPF       STATUS, W
0066   00B2           00286         MOVWF       temp_status
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0067   100B           00287         BCF         INTCON, RBIF
0068   108B           00288         BCF         INTCON, INTF          ; Clear the interrupt flag
                      00289         
0069   2???           00290         CALL        WHL_ENC
                      00291         
006A   0E32           00292         SWAPF       temp_status, W
006B   0083           00293         MOVWF       STATUS
006C   0EB1           00294         SWAPF       temp_w, F
006D   0E31           00295         SWAPF       temp_w, W
006E   0009           00296         RETFIE
                      00297 
                      00298 ;******************************************************************************;
                      00299 ;                       CYCLE INFRARED SENSORS                                 ;
                      00300 ;******************************************************************************;
006F                  00301 READ_IRS
006F   3010           00302         MOVLW       d'16'
0070   00C3           00303         MOVWF       multiplex_count
0071                  00304 MX_LOOP 
Message[305]: Using default destination of 1 (file).
0071   03C3           00305         DECF        multiplex_count
0072   1005           00306         BCF         MUX_CTRL_0
0073   1843           00307         BTFSC       multiplex_count, 0
0074   1405           00308         BSF         MUX_CTRL_0
0075   1085           00309         BCF         MUX_CTRL_1
0076   18C3           00310         BTFSC       multiplex_count, 1
0077   1485           00311         BSF         MUX_CTRL_1
0078   1105           00312         BCF         MUX_CTRL_2
0079   1943           00313         BTFSC       multiplex_count, 2
007A   1505           00314         BSF         MUX_CTRL_2
007B   1185           00315         BCF         MUX_CTRL_3
007C   19C3           00316         BTFSC       multiplex_count, 3
007D   1585           00317         BSF         MUX_CTRL_3
                      00318         
007E   2???           00319         CALL        DEL_10MS
007F   2???           00320         CALL        DEL_10MS
0080   2???           00321         CALL        DEL_10MS
0081   2???           00322         CALL        DEL_10MS
0082   2???           00323         CALL        DEL_10MS
0083   2???           00324         CALL        DEL_10MS
0084   2???           00325         CALL        DEL_10MS
0085   2???           00326         CALL        DEL_10MS
0086   2???           00327         CALL        DEL_10MS
0087   2???           00328         CALL        DEL_10MS
                      00329         
0088   1807           00330         BTFSC       MUX_IN
0089   2???           00331         GOTO        NO_SPOT 
008A   1408           00332         BSF         BUZZER                              ; Buzzer start
008B   2???           00333         CALL        DEL_1S
008C   0846           00334         MOVFW       rob_long_distance                   ; Save spot location
Warning[219]: Invalid RAM location specified.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
008D   0097           00335         MOVWF       spot_base_loc + num_spots
008E   0ACB           00336         INCF        num_spots, f                        ; Increase number of spots
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

008F   1008           00337         BCF         BUZZER                              ; Buzzer stop
Message[305]: Using default destination of 1 (file).
0090   0AC3           00338 NO_SPOT INCF        multiplex_count
Message[305]: Using default destination of 1 (file).
0091   0BC3           00339         DECFSZ      multiplex_count
0092   2???           00340         GOTO        MX_LOOP
0093   0008           00341         RETURN
                      00342         
                      00343 ;******************************************************************************;
                      00344 ;                         WHEEL ENCODER ROUTINE                                ;
                      00345 ;******************************************************************************;
0094                  00346 WHL_ENC
Message[305]: Using default destination of 1 (file).
0094   0AC5           00347         INCF        rob_long_distance_count ; Increment number of changes
0095   3006           00348         MOVLW       0x06                    ; Every six changes is approx 1in
0096   02C5           00349         SUBWF       rob_long_distance_count, F
0097   1803           00350         BTFSC       STATUS, 0
Message[305]: Using default destination of 1 (file).
0098   0AC6           00351         INCF        rob_long_distance       ; One inch was covered
0099   01C5           00352         CLRF        rob_long_distance_count
009A   0008           00353         RETURN
                      00354         
                      00355 ;******************************************************************************;
                      00356 ;                       TOGGLE ARM STATE SUBROUTINES                           ;
                      00357 ;******************************************************************************;
009B                  00358 ARM_CTRL
009B   3008           00359         MOVLW       crit_dist
009C   0248           00360         SUBWF       measured_distance_sup, W
009D   1803           00361         BTFSC       STATUS, 0               ; C==0 if measured_distance_sup < crit_dist
009E   2???           00362         GOTO        ARM_CLOSE
009F   2???           00363         GOTO        ARM_OPEN
00A0                  00364 ARM_CLOSE                                   ; Close arm for full scan
00A0   1685           00365         BSF         SERVO_CTRL
00A1   2???           00366         CALL        DEL_1_5MS
00A2   1285           00367         BCF         SERVO_CTRL
00A3   2???           00368         CALL        DEL_10MS
00A4   2???           00369         CALL        DEL_10MS
00A5   2???           00370         CALL        DEL_10MS
00A6   2???           00371         CALL        DEL_10MS
00A7   0008           00372         RETURN      
                      00373         
00A8                  00374 ARM_OPEN                                    ; Open arm to clear support
00A8   1685           00375         BSF         SERVO_CTRL
00A9   2???           00376         CALL        DEL_2_1MS
00AA   2???           00377         CALL        DEL_2_1MS
00AB   1285           00378         BCF         SERVO_CTRL
00AC   2???           00379         CALL        DEL_10MS
00AD   2???           00380         CALL        DEL_10MS
00AE   2???           00381         CALL        DEL_10MS
00AF   2???           00382         CALL        DEL_10MS
00B0   0008           00383         RETURN
                      00384 ;******************************************************************************;
                      00385 ;                     ULTRASONIC SENSOR SUBROUTINES                            ;
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00386 ;******************************************************************************;
00B1                  00387 USONIC_SUP
00B1   1488           00388         BSF         US_SUP_TRIG
00B2   2???           00389         CALL        DEL_20US
00B3   1088           00390         BCF         US_SUP_TRIG
00B4                  00391 USONIC_SUP_ECHO
00B4   1D08           00392         BTFSS       US_SUP_ECHO
00B5   2???           00393         GOTO        $-1
00B6   1410           00394         BSF         T1CON, 0
00B7   1908           00395 USHOLDL BTFSC       US_SUP_ECHO
00B8   2???           00396         GOTO        USHOLDL
00B9   1010           00397         BCF         T1CON, 0
00BA   080F           00398         MOVF        TMR1H, W
00BB   00B3           00399         MOVWF       DIV_HI
00BC   080E           00400         MOVF        TMR1L, W
00BD   00B4           00401         MOVWF       DIV_LO
00BE   018F           00402         CLRF        TMR1H
00BF   018E           00403         CLRF        TMR1L
00C0   303A           00404         MOVLW       d'58'
00C1   00B5           00405         MOVWF       DIVISOR
00C2   2???           00406         CALL        DIV16X8
00C3   0836           00407         MOVF        Q, W
00C4   00C8           00408         MOVWF       measured_distance_sup
00C5   0008           00409         RETURN
                      00410 
00C6                  00411 USONIC_LAT
00C6   1586           00412         BSF         US_LAT_TRIG
00C7   2???           00413         CALL        DEL_20US
00C8   1206           00414         BCF         US_LAT_ECHO
00C9                  00415 USONIC_LAT_ECHO
00C9   1E06           00416         BTFSS       US_LAT_ECHO
00CA   2???           00417         GOTO        $-1
00CB   1410           00418         BSF         T1CON, 0
00CC   1A06           00419 USHOLDS BTFSC       US_LAT_ECHO
00CD   2???           00420         GOTO        USHOLDS
00CE   1010           00421         BCF         T1CON, 0
00CF   080F           00422         MOVF        TMR1H, W
00D0   00B3           00423         MOVWF       DIV_HI
00D1   080E           00424         MOVF        TMR1L, W
00D2   00B4           00425         MOVWF       DIV_LO
00D3   018F           00426         CLRF        TMR1H
00D4   018E           00427         CLRF        TMR1L
00D5   303A           00428         MOVLW       d'58'
00D6   00B5           00429         MOVWF       DIVISOR
00D7   2???           00430         CALL        DIV16X8
00D8   0836           00431         MOVF        Q, W
00D9   00C7           00432         MOVWF       measured_distance_lat
00DA   2???           00433         CALL        rtc_convert
00DB   2???           00434         CALL        CLR_LCD             ; DEBUG!
                      00435         WRT_MEM_LCD 0x77
00DC   0877               M         MOVFW       0x77
00DD   2???               M         CALL        WR_DATA
                      00436         WRT_MEM_LCD 0x78
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00DE   0878               M         MOVFW       0x78
00DF   2???               M         CALL        WR_DATA
00E0   0008           00437         RETURN
                      00438         
                      00439 ;******************************************************************************;
                      00440 ;                              ACTIVE CONTROL                                  ;
                      00441 ;******************************************************************************;
00E1                  00442 MOTOR_CTRL_R                                ; Turn right - robot is too far
00E1   3005           00443         MOVLW       crit_dist_l
00E2   0247           00444         SUBWF       measured_distance_lat, W
00E3   1C03           00445         BTFSS       STATUS, 0               ; C==0 if measured_distance_lat >= crit_dist
00E4   0008           00446         RETURN
00E5   1408           00447         BSF         BUZZER
00E6   0195           00448         CLRF        CCPR1L
00E7   0197           00449         CLRF        CCP1CON
00E8   2???           00450         CALL        DEL_10MS
00E9   2???           00451         CALL        DEL_10MS
00EA   2???           00452         CALL        DEL_10MS
00EB   2???           00453         CALL        DEL_10MS
00EC   2???           00454         CALL        DEL_10MS
00ED   2???           00455         CALL        DEL_10MS
00EE   30FF           00456         MOVLW       R_MOTOR_SPD
00EF   0095           00457         MOVWF       CCPR1L
00F0   1008           00458         BCF         BUZZER
00F1   0008           00459         RETURN
                      00460 
00F2                  00461 MOTOR_CTRL_L                                ; Turn left - robot is too close
00F2   3002           00462         MOVLW       crit_dist_r
00F3   0247           00463         SUBWF       measured_distance_lat, W
00F4   1803           00464         BTFSC       STATUS, 0
00F5   0008           00465         RETURN
00F6   019B           00466         CLRF        CCPR2L
00F7   019D           00467         CLRF        CCP2CON
00F8   2???           00468         CALL        DEL_10MS
00F9   2???           00469         CALL        DEL_10MS
00FA   2???           00470         CALL        DEL_10MS
00FB   2???           00471         CALL        DEL_10MS
00FC   2???           00472         CALL        DEL_10MS
00FD   2???           00473         CALL        DEL_10MS
00FE   30FF           00474         MOVLW       R_MOTOR_SPD
00FF   009B           00475         MOVWF       CCPR2L
0100   0008           00476         RETURN
                      00477         
                      00478 ;******************************************************************************;
                      00479 ;                               DISPLAY DATA                                   ;
                      00480 ;******************************************************************************;
0101                  00481 STOP_DATA
                      00482         WRT_LCD     "T"
0101   3054               M         MOVLW       "T"
0102   2???               M         CALL        WR_DATA
                      00483         WRT_LCD     "I"
0103   3049               M         MOVLW       "I"
0104   2???               M         CALL        WR_DATA
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00484         WRT_LCD     "M"
0105   304D               M         MOVLW       "M"
0106   2???               M         CALL        WR_DATA
                      00485         WRT_LCD     "E"
0107   3045               M         MOVLW       "E"
0108   2???               M         CALL        WR_DATA
                      00486         WRT_LCD     ":"
0109   303A               M         MOVLW       ":"
010A   2???               M         CALL        WR_DATA
                      00487         WRT_LCD     " "
010B   3020               M         MOVLW       " "
010C   2???               M         CALL        WR_DATA
                      00488         ;Get minute             
                      00489 ;       rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                      00490         ;WRT_MEM_LCD 0x77
                      00491 ;       .WRT_MEM_LCD 0x78
                      00492 ;       WRT_LCD     ":"
                      00493 
                      00494         ;Get seconds
                      00495         ;rtc_read    0x00               ;Read Address 0x00 from DS1307---seconds
                      00496 ;       WRT_MEM_LCD 0x77
                      00497 ;       WRT_MEM_LCD 0x78
                      00498 
010D   30C0           00499         movlw       B'11000000'         ;Next line displays (min):(sec) **:**
010E   2???           00500         call        WR_INS
010F   2???           00501         CALL        WRT_DATA
0110   2???           00502         CALL        DEL_1S
0111   2???           00503         CALL        DEL_1S
0112   2???           00504         CALL        CLR_LCD
                      00505         
0113   304C           00506         MOVLW       spot_base_loc
0114   0084           00507         MOVWF       FSR
                      00508         
0115                  00509 DATA_LOOP       
                      00510         WRT_LCD     "S"
0115   3053               M         MOVLW       "S"
0116   2???               M         CALL        WR_DATA
                      00511         WRT_LCD     "P"
0117   3050               M         MOVLW       "P"
0118   2???               M         CALL        WR_DATA
                      00512         WRT_LCD     "O"
0119   304F               M         MOVLW       "O"
011A   2???               M         CALL        WR_DATA
                      00513         WRT_LCD     "T"
011B   3054               M         MOVLW       "T"
011C   2???               M         CALL        WR_DATA
                      00514         WRT_LCD     ":"
011D   303A               M         MOVLW       ":"
011E   2???               M         CALL        WR_DATA
                      00515         WRT_LCD     " "
011F   3020               M         MOVLW       " "
0120   2???               M         CALL        WR_DATA
                      00516         WRT_MEM_LCD INDF
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0121   0800               M         MOVFW       INDF
0122   2???               M         CALL        WR_DATA
                      00517         WRT_LCD     "c"
0123   3063               M         MOVLW       "c"
0124   2???               M         CALL        WR_DATA
                      00518         WRT_LCD     "m"
0125   306D               M         MOVLW       "m"
0126   2???               M         CALL        WR_DATA
                      00519         
0127   2???           00520         CALL        DEL_1S
                      00521         
0128   2???           00522         CALL        CLR_LCD
0129   0A84           00523         INCF        FSR, F
                      00524 
012A   0BCA           00525         DECFSZ      spot_count, F
012B   2???           00526         GOTO        DATA_LOOP
                      00527         
                      00528         WRT_LCD     "E"
012C   3045               M         MOVLW       "E"
012D   2???               M         CALL        WR_DATA
                      00529         WRT_LCD     "N"
012E   304E               M         MOVLW       "N"
012F   2???               M         CALL        WR_DATA
                      00530         WRT_LCD     "D"
0130   3044               M         MOVLW       "D"
0131   2???               M         CALL        WR_DATA
                      00531 
0132   2???           00532         GOTO        FINISH
                      00533 
                      00534 ;******************************************************************************;
                      00535 ;                                  HELLO                                       ;
                      00536 ;******************************************************************************;
0133                  00537 START_MSG
                      00538         WRT_LCD     "H"
0133   3048               M         MOVLW       "H"
0134   2???               M         CALL        WR_DATA
                      00539         WRT_LCD     "I"
0135   3049               M         MOVLW       "I"
0136   2???               M         CALL        WR_DATA
                      00540         WRT_LCD     "T"
0137   3054               M         MOVLW       "T"
0138   2???               M         CALL        WR_DATA
                      00541         WRT_LCD     " "
0139   3020               M         MOVLW       " "
013A   2???               M         CALL        WR_DATA
                      00542         WRT_LCD     "*"
013B   302A               M         MOVLW       "*"
013C   2???               M         CALL        WR_DATA
                      00543         WRT_LCD     " "
013D   3020               M         MOVLW       " "
013E   2???               M         CALL        WR_DATA
                      00544         WRT_LCD     "T"
013F   3054               M         MOVLW       "T"
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0140   2???               M         CALL        WR_DATA
                      00545         WRT_LCD     "O"
0141   304F               M         MOVLW       "O"
0142   2???               M         CALL        WR_DATA
                      00546         WRT_LCD     " "
0143   3020               M         MOVLW       " "
0144   2???               M         CALL        WR_DATA
                      00547         WRT_LCD     "S"
0145   3053               M         MOVLW       "S"
0146   2???               M         CALL        WR_DATA
                      00548         WRT_LCD     "T"
0147   3054               M         MOVLW       "T"
0148   2???               M         CALL        WR_DATA
                      00549         WRT_LCD     "A"
0149   3041               M         MOVLW       "A"
014A   2???               M         CALL        WR_DATA
                      00550         WRT_LCD     "R"
014B   3052               M         MOVLW       "R"
014C   2???               M         CALL        WR_DATA
                      00551         WRT_LCD     "T"
014D   3054               M         MOVLW       "T"
014E   2???               M         CALL        WR_DATA
014F   0008           00552         RETURN
                      00553         
                      00554 ;******************************************************************************;
                      00555 ;                                GOODBYE                                       ;
                      00556 ;******************************************************************************;
0150                  00557 STOP_STDBY_MSG
                      00558         WRT_LCD     "H"
0150   3048               M         MOVLW       "H"
0151   2???               M         CALL        WR_DATA
                      00559         WRT_LCD     "I"
0152   3049               M         MOVLW       "I"
0153   2???               M         CALL        WR_DATA
                      00560         WRT_LCD     "T"
0154   3054               M         MOVLW       "T"
0155   2???               M         CALL        WR_DATA
                      00561         WRT_LCD     " "
0156   3020               M         MOVLW       " "
0157   2???               M         CALL        WR_DATA
                      00562         WRT_LCD     "*"
0158   302A               M         MOVLW       "*"
0159   2???               M         CALL        WR_DATA
                      00563         WRT_LCD     " "
015A   3020               M         MOVLW       " "
015B   2???               M         CALL        WR_DATA
                      00564         WRT_LCD     "F"
015C   3046               M         MOVLW       "F"
015D   2???               M         CALL        WR_DATA
                      00565         WRT_LCD     "O"
015E   304F               M         MOVLW       "O"
015F   2???               M         CALL        WR_DATA
                      00566         WRT_LCD     "R"
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0160   3052               M         MOVLW       "R"
0161   2???               M         CALL        WR_DATA
                      00567         WRT_LCD     " "
0162   3020               M         MOVLW       " "
0163   2???               M         CALL        WR_DATA
                      00568         WRT_LCD     "D"
0164   3044               M         MOVLW       "D"
0165   2???               M         CALL        WR_DATA
                      00569         WRT_LCD     "A"
0166   3041               M         MOVLW       "A"
0167   2???               M         CALL        WR_DATA
                      00570         WRT_LCD     "T"
0168   3054               M         MOVLW       "T"
0169   2???               M         CALL        WR_DATA
                      00571         WRT_LCD     "A"
016A   3041               M         MOVLW       "A"
016B   2???               M         CALL        WR_DATA
016C   0008           00572         RETURN
                      00573          
                      00574 ;******************************************************************************;
                      00575 ;                                 DATA                                         ;
                      00576 ;******************************************************************************;
016D                  00577 WRT_DATA        
                      00578         WRT_LCD     "N"
016D   304E               M         MOVLW       "N"
016E   2???               M         CALL        WR_DATA
                      00579         WRT_LCD     "U"
016F   3055               M         MOVLW       "U"
0170   2???               M         CALL        WR_DATA
                      00580         WRT_LCD     "M"
0171   304D               M         MOVLW       "M"
0172   2???               M         CALL        WR_DATA
                      00581         WRT_LCD     " "
0173   3020               M         MOVLW       " "
0174   2???               M         CALL        WR_DATA
                      00582         WRT_LCD     "S"
0175   3053               M         MOVLW       "S"
0176   2???               M         CALL        WR_DATA
                      00583         WRT_LCD     "P"
0177   3050               M         MOVLW       "P"
0178   2???               M         CALL        WR_DATA
                      00584         WRT_LCD     "O"
0179   304F               M         MOVLW       "O"
017A   2???               M         CALL        WR_DATA
                      00585         WRT_LCD     "T"
017B   3054               M         MOVLW       "T"
017C   2???               M         CALL        WR_DATA
                      00586         WRT_LCD     "S"
017D   3053               M         MOVLW       "S"
017E   2???               M         CALL        WR_DATA
                      00587         WRT_LCD     ":"
017F   303A               M         MOVLW       ":"
0180   2???               M         CALL        WR_DATA
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00588         WRT_LCD     " "
0181   3020               M         MOVLW       " "
0182   2???               M         CALL        WR_DATA
                      00589         CWRT_MEM_LCD num_spots
0183   084B               M         MOVFW       num_spots
0184   3E30               M         ADDLW       D'48'
0185   2???               M         CALL        WR_DATA
0186   0008           00590         RETURN
                      00591 ;******************************************************************************;
                      00592 ;                           RETREIVE START TIME                                ;
                      00593 ;******************************************************************************;
0187                  00594 GET_START_TIME
                      00595         ;Get minute             
                      00596         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0187   3001               M         movlw       0x01
0188   1283 1303          M         banksel     0x73
018A   00F3               M         movwf       0x73
018B   2???               M         call        read_rtc
018C   1283 1303          M         banksel     0x75
018E   0875               M         movf        0x75,w
018F   2???               M         call        rtc_convert   
0190   0877           00597         MOVFW       0X77
0191   00BB           00598         MOVWF       start_min10
0192   0878           00599         MOVFW       0X78
0193   00BA           00600         MOVWF       start_min
                      00601 
                      00602         ;Get seconds
                      00603         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0194   3000               M         movlw       0x00
0195   1283 1303          M         banksel     0x73
0197   00F3               M         movwf       0x73
0198   2???               M         call        read_rtc
0199   1283 1303          M         banksel     0x75
019B   0875               M         movf        0x75,w
019C   2???               M         call        rtc_convert   
019D   0877           00604         MOVFW       0X77
019E   00BD           00605         MOVWF       start_sec10
019F   0878           00606         MOVFW       0X78
01A0   00BC           00607         MOVWF       start_sec
01A1   0008           00608         RETURN
                      00609 ;******************************************************************************;
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00610 ;                           RETREIVE STOP TIME                                 ;
                      00611 ;******************************************************************************;
01A2                  00612 GET_STOP_TIME
                      00613         ;Get minute             
                      00614         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01A2   3001               M         movlw       0x01
01A3   1283 1303          M         banksel     0x73
01A5   00F3               M         movwf       0x73
01A6   2???               M         call        read_rtc
01A7   1283 1303          M         banksel     0x75
01A9   0875               M         movf        0x75,w
01AA   2???               M         call        rtc_convert   
01AB   0877           00615         MOVFW       0X77
01AC   00BF           00616         MOVWF       stop_min10
01AD   0878           00617         MOVFW       0X78
01AE   00BE           00618         MOVWF       stop_min
                      00619 
                      00620         ;Get seconds
                      00621         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01AF   3000               M         movlw       0x00
01B0   1283 1303          M         banksel     0x73
01B2   00F3               M         movwf       0x73
01B3   2???               M         call        read_rtc
01B4   1283 1303          M         banksel     0x75
01B6   0875               M         movf        0x75,w
01B7   2???               M         call        rtc_convert   
01B8   0877           00622         MOVFW       0X77
01B9   00C1           00623         MOVWF       stop_sec10
01BA   0878           00624         MOVFW       0X78
01BB   00C0           00625         MOVWF       stop_sec
01BC   0008           00626         RETURN
                      00627 ;******************************************************************************;
                      00628 ;                       DISPLAY RTC TIME TO LCD                                ;
                      00629 ;******************************************************************************;
01BD                  00630 SHOW_RTC
                      00631         ;clear LCD screen
01BD   3001           00632         movlw       b'00000001'
01BE   2???           00633         call        WR_INS
                      00634 
                      00635         ;Get year
                      00636         WRT_LCD     "2"
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01BF   3032               M         MOVLW       "2"
01C0   2???               M         CALL        WR_DATA
                      00637         WRT_LCD     "0"
01C1   3030               M         MOVLW       "0"
01C2   2???               M         CALL        WR_DATA
                      00638         rtc_read    0x06                ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01C3   3006               M         movlw       0x06
01C4   1283 1303          M         banksel     0x73
01C6   00F3               M         movwf       0x73
01C7   2???               M         call        read_rtc
01C8   1283 1303          M         banksel     0x75
01CA   0875               M         movf        0x75,w
01CB   2???               M         call        rtc_convert   
                      00639         WRT_MEM_LCD 0x77
01CC   0877               M         MOVFW       0x77
01CD   2???               M         CALL        WR_DATA
                      00640         WRT_MEM_LCD 0x78
01CE   0878               M         MOVFW       0x78
01CF   2???               M         CALL        WR_DATA
                      00641 
                      00642         WRT_LCD     "/"
01D0   302F               M         MOVLW       "/"
01D1   2???               M         CALL        WR_DATA
                      00643 
                      00644         ;Get month
                      00645         rtc_read    0x05                ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01D2   3005               M         movlw       0x05
01D3   1283 1303          M         banksel     0x73
01D5   00F3               M         movwf       0x73
01D6   2???               M         call        read_rtc
01D7   1283 1303          M         banksel     0x75
01D9   0875               M         movf        0x75,w
01DA   2???               M         call        rtc_convert   
                      00646         WRT_MEM_LCD 0x77
01DB   0877               M         MOVFW       0x77
01DC   2???               M         CALL        WR_DATA
                      00647         WRT_MEM_LCD 0x78
01DD   0878               M         MOVFW       0x78
01DE   2???               M         CALL        WR_DATA
                      00648 
                      00649         WRT_LCD     "/"
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01DF   302F               M         MOVLW       "/"
01E0   2???               M         CALL        WR_DATA
                      00650 
                      00651         ;Get day
                      00652         rtc_read    0x04                ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01E1   3004               M         movlw       0x04
01E2   1283 1303          M         banksel     0x73
01E4   00F3               M         movwf       0x73
01E5   2???               M         call        read_rtc
01E6   1283 1303          M         banksel     0x75
01E8   0875               M         movf        0x75,w
01E9   2???               M         call        rtc_convert   
                      00653         WRT_MEM_LCD 0x77
01EA   0877               M         MOVFW       0x77
01EB   2???               M         CALL        WR_DATA
                      00654         WRT_MEM_LCD 0x78
01EC   0878               M         MOVFW       0x78
01ED   2???               M         CALL        WR_DATA
                      00655 
01EE   30C0           00656         movlw       B'11000000'         ;Next line displays (hour):(min):(sec) **:**:**
01EF   2???           00657         call        WR_INS
                      00658         ;Get hour
                      00659         rtc_read    0x02                ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01F0   3002               M         movlw       0x02
01F1   1283 1303          M         banksel     0x73
01F3   00F3               M         movwf       0x73
01F4   2???               M         call        read_rtc
01F5   1283 1303          M         banksel     0x75
01F7   0875               M         movf        0x75,w
01F8   2???               M         call        rtc_convert   
                      00660         WRT_MEM_LCD 0x77
01F9   0877               M         MOVFW       0x77
01FA   2???               M         CALL        WR_DATA
                      00661         WRT_MEM_LCD 0x78
01FB   0878               M         MOVFW       0x78
01FC   2???               M         CALL        WR_DATA
                      00662         WRT_LCD     ":"
01FD   303A               M         MOVLW       ":"
01FE   2???               M         CALL        WR_DATA
                      00663 
                      00664         ;Get minute             
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00665         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
01FF   3001               M         movlw       0x01
0200   1283 1303          M         banksel     0x73
0202   00F3               M         movwf       0x73
0203   2???               M         call        read_rtc
0204   1283 1303          M         banksel     0x75
0206   0875               M         movf        0x75,w
0207   2???               M         call        rtc_convert   
                      00666         WRT_MEM_LCD 0x77
0208   0877               M         MOVFW       0x77
0209   2???               M         CALL        WR_DATA
                      00667         WRT_MEM_LCD 0x78
020A   0878               M         MOVFW       0x78
020B   2???               M         CALL        WR_DATA
                      00668         WRT_LCD     ":"
020C   303A               M         MOVLW       ":"
020D   2???               M         CALL        WR_DATA
                      00669 
                      00670         ;Get seconds
                      00671         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
020E   3000               M         movlw       0x00
020F   1283 1303          M         banksel     0x73
0211   00F3               M         movwf       0x73
0212   2???               M         call        read_rtc
0213   1283 1303          M         banksel     0x75
0215   0875               M         movf        0x75,w
0216   2???               M         call        rtc_convert   
                      00672         WRT_MEM_LCD 0x77
0217   0877               M         MOVFW       0x77
0218   2???               M         CALL        WR_DATA
                      00673         WRT_MEM_LCD 0x78
0219   0878               M         MOVFW       0x78
021A   2???               M         CALL        WR_DATA
                      00674 
021B   0008           00675         RETURN
                      00676 ;******************************************************************************;
                      00677 ;                       INITIALIZE RTC TIME                                    ;
                      00678 ;******************************************************************************;                
021C                  00679 SET_RTC_TIME
                      00680         rtc_resetAll    ;reset rtc
                          M ;input:         none
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;output:        none
                          M ;desc:          Resets all the time keeping registers on the RTC to zero
021C   1283 1303          M         banksel     0x74
021E   01F4               M         clrf        0x74
021F   1283 1303          M         banksel     0x73
0221   01F3               M         clrf        0x73
0222   2???               M         call        write_rtc           ;Write 0 to Seconds
0223   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0225   0AF3               M         incf        0x73                        ;Set register address to 1
0226   2???               M         call        write_rtc
0227   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0229   0AF3               M         incf        0x73                        ;Set register address to 2
022A   2???               M         call        write_rtc
022B   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
022D   0AF3               M         incf        0x73                        ;Set register address to 3
022E   2???               M         call        write_rtc
022F   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0231   0AF3               M         incf        0x73                        ;Set register address to 4
0232   2???               M         call        write_rtc
0233   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0235   0AF3               M         incf        0x73                        ;Set register address to 5
0236   2???               M         call        write_rtc
0237   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
0239   0AF3               M         incf        0x73                        ;Set register address to 6
023A   2???               M         call        write_rtc
                      00681 
                      00682         rtc_set     0x00,       B'10000000'
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
023B   1283 1303          M         banksel     0x73
023D   3000               M         movlw       0x00
023E   00F3               M         movwf       0x73
023F   1283 1303          M         banksel     0x74
0241   3080               M         movlw       B'10000000'
0242   00F4               M         movwf       0x74        
0243   2???               M         call        write_rtc
                      00683 
                      00684         ;set time 
                      00685         rtc_set     0x06,       B'00010110'             ; Year
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0244   1283 1303          M         banksel     0x73
0246   3006               M         movlw       0x06
0247   00F3               M         movwf       0x73
0248   1283 1303          M         banksel     0x74
024A   3016               M         movlw       B'00010110'
024B   00F4               M         movwf       0x74        
024C   2???               M         call        write_rtc
                      00686         rtc_set     0x05,       B'00000100'             ; Month
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
024D   1283 1303          M         banksel     0x73
024F   3005               M         movlw       0x05
0250   00F3               M         movwf       0x73
0251   1283 1303          M         banksel     0x74
0253   3004               M         movlw       B'00000100'
0254   00F4               M         movwf       0x74        
0255   2???               M         call        write_rtc
                      00687         rtc_set     0x04,       B'00000110'             ; Date
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0256   1283 1303          M         banksel     0x73
0258   3004               M         movlw       0x04
0259   00F3               M         movwf       0x73
025A   1283 1303          M         banksel     0x74
025C   3006               M         movlw       B'00000110'
025D   00F4               M         movwf       0x74        
025E   2???               M         call        write_rtc
                      00688         rtc_set     0x03,       B'00000010'             ; Day
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
025F   1283 1303          M         banksel     0x73
0261   3003               M         movlw       0x03
0262   00F3               M         movwf       0x73
0263   1283 1303          M         banksel     0x74
0265   3002               M         movlw       B'00000010'
0266   00F4               M         movwf       0x74        
0267   2???               M         call        write_rtc
                      00689         rtc_set     0x02,       B'00000000'             ; Hours
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0268   1283 1303          M         banksel     0x73
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

026A   3002               M         movlw       0x02
026B   00F3               M         movwf       0x73
026C   1283 1303          M         banksel     0x74
026E   3000               M         movlw       B'00000000'
026F   00F4               M         movwf       0x74        
0270   2???               M         call        write_rtc
                      00690         rtc_set     0x01,       B'00000000'             ; Minutes
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0271   1283 1303          M         banksel     0x73
0273   3001               M         movlw       0x01
0274   00F3               M         movwf       0x73
0275   1283 1303          M         banksel     0x74
0277   3000               M         movlw       B'00000000'
0278   00F4               M         movwf       0x74        
0279   2???               M         call        write_rtc
                      00691         rtc_set     0x00,       B'00000000'             ; Seconds
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
027A   1283 1303          M         banksel     0x73
027C   3000               M         movlw       0x00
027D   00F3               M         movwf       0x73
027E   1283 1303          M         banksel     0x74
0280   3000               M         movlw       B'00000000'
0281   00F4               M         movwf       0x74        
0282   2???               M         call        write_rtc
0283   0008           00692         return
                      00693 
                      00694 ;******************************************************************************;                
                      00695 ;******************************************************************************;
                      00696 ;******************************************************************************;
0284                  00697 DIV16X8 ; DIV_HI and DIV_LO / DIVSOR.  result to Q
                      00698                 ; does not deal with divide by 0 case
0284   01B6           00699         CLRF Q
0285                  00700 DIV_1
0285   0835           00701         MOVF DIVISOR, W
0286   02B4           00702         SUBWF DIV_LO, F
0287   1C03           00703         BTFSS STATUS, C ; if positive skip
0288   2???           00704         GOTO BORROW
0289   2???           00705         GOTO DIV_2
028A                  00706 BORROW
028A   3001           00707         MOVLW 0x01
028B   02B3           00708         SUBWF DIV_HI, F ; DIV_HI = DIV_HI - 1
028C   1C03           00709         BTFSS STATUS, C ; if no borrow occurred
028D   2???           00710         GOTO DIV_DONE   
028E                  00711 DIV_2
028E   0AB6           00712         INCF Q, F
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

028F   2???           00713         GOTO DIV_1
0290                  00714 DIV_DONE
0290   0008           00715         RETURN
                      00716 
0291                  00717 DEL_1S
0291   3015           00718         movlw   0x15
0292   00B7           00719         movwf   d1
0293   3074           00720         movlw   0x74
0294   00B8           00721         movwf   d2
0295   3006           00722         movlw   0x06
0296   00B9           00723         movwf   d3
0297                  00724 DEL_1S_0
0297   0BB7           00725         decfsz  d1, f
0298   2???           00726         goto    $+2
0299   0BB8           00727         decfsz  d2, f
029A   2???           00728         goto    $+2
029B   0BB9           00729         decfsz  d3, f
029C   2???           00730         goto    DEL_1S_0
029D   2???           00731         goto    $+1
029E   2???           00732         goto    $+1
029F   0008           00733         return
                      00734         
02A0                  00735 DEL_10MS
02A0   3086           00736         movlw   0x86
02A1   00B7           00737         movwf   d1
02A2   3014           00738         movlw   0x14
02A3   00B8           00739         movwf   d2
02A4                  00740 DEL_10MS_0
02A4   0BB7           00741         decfsz  d1, f
02A5   2???           00742         goto    $+2
02A6   0BB8           00743         decfsz  d2, f
02A7   2???           00744         goto    DEL_10MS_0
02A8   2???           00745         goto    $+1
02A9   0000           00746         nop
02AA   0008           00747         return
                      00748 
02AB                  00749 DEL_2_1MS
02AB   3018           00750         movlw   0x18
02AC   00B7           00751         movwf   d1
02AD   3005           00752         movlw   0x05
02AE   00B8           00753         movwf   d2
02AF                  00754 DEL_2_1MS_0
02AF   0BB7           00755         decfsz  d1, f
02B0   2???           00756         goto    $+2
02B1   0BB8           00757         decfsz  d2, f
02B2   2???           00758         goto    DEL_2_1MS_0
02B3   2???           00759         goto    $+1
02B4   0000           00760         nop
02B5   0008           00761         return
                      00762         
02B6                  00763 DEL_1_5MS
02B6   30EC           00764         movlw   0xEC
02B7   00B7           00765         movwf   d1
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02B8   3003           00766         movlw   0x03
02B9   00B8           00767         movwf   d2
02BA                  00768 DEL_1_5MS_0
02BA   0BB7           00769         decfsz  d1, f
02BB   2???           00770         goto    $+2
02BC   0BB8           00771         decfsz  d2, f
02BD   2???           00772         goto    DEL_1_5MS_0
02BE   2???           00773         goto    $+1
02BF   0000           00774         nop
02C0   0008           00775         return
                      00776         
02C1                  00777 DEL_20US
02C1   300F           00778         movlw   0x0F
02C2   00B7           00779         movwf   d1
02C3                  00780 DEL_20US_0
02C3   0BB7           00781         decfsz  d1, f
02C4   2???           00782         goto    DEL_20US_0
02C5   0008           00783         return
                      00784 
Warning[207]: Found label after column 1. (FINISH)
02C6                  00785         FINISH  
02C6   2???           00786         GOTO    FINISH
                      00787         
3F72                  00788         END
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ARM_CLOSE                         000000A0
ARM_CTRL                          0000009B
ARM_OPEN                          000000A8
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BORROW                            0000028A
BRGH                              00000002
BUZZER                            PORTD, 0
C                                 00000000
CALIBRATE                         0000003F
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

CKP                               00000004
CLR_LCD                           00000000
CREN                              00000004
CSRC                              00000007
CWRT_MEM_LCD                      
D                                 00000005
DATA_ADDRESS                      00000005
DATA_LOOP                         00000115
DC                                00000001
DEL_10MS                          000002A0
DEL_10MS_0                        000002A4
DEL_1S                            00000291
DEL_1S_0                          00000297
DEL_1_5MS                         000002B6
DEL_1_5MS_0                       000002BA
DEL_20US                          000002C1
DEL_20US_0                        000002C3
DEL_2_1MS                         000002AB
DEL_2_1MS_0                       000002AF
DIV16X8                           00000284
DIVISOR                           00000035
DIV_1                             00000285
DIV_2                             0000028E
DIV_DONE                          00000290
DIV_HI                            00000033
DIV_LO                            00000034
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FINAL_BACKUP                      00000056
FINISH                            000002C6
FSR                               00000004
GCEN                              00000007
GET_START_TIME                    00000187
GET_STOP_TIME                     000001A2
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

IBF                               00000007
IBOV                              00000005
INDF                              00000000
INIT                              00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
INT_HANDLER                       00000064
IRP                               00000007
InitLCD                           00000000
LCD_INS                           
L_MOTOR_SPD                       B'11111111'
MOTOR_CTRL_L                      000000F2
MOTOR_CTRL_R                      000000E1
MOTOR_DIR_CTRL                    PORTC, 5
MULT                              
MUX_CTRL_0                        PORTA, 0
MUX_CTRL_1                        PORTA, 1
MUX_CTRL_2                        PORTA, 2
MUX_CTRL_3                        PORTA, 3
MUX_IN                            PORTC, 0
MX_LOOP                           00000071
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NO_SPOT                           00000090
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
Q                                 00000036
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_IRS                          0000006F
READ_WRITE                        00000002
RETURN_HOME                       0000004D
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_MOTOR_SPD                       B'11111111'
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SCAN                              0000004C
SEN                               00000000
SERVO_CTRL                        PORTA, 5
SET_RTC_TIME                      0000021C
SHOW_RTC                          000001BD
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
START_MSG                         00000133
START_STDBY                       00000031
STATUS                            00000003
STOP_DATA                         00000101
STOP_STDBY                        0000005A
STOP_STDBY_MSG                    00000150
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
USHOLDL                           000000B7
USHOLDS                           000000CC
USONIC_LAT                        000000C6
USONIC_LAT_ECHO                   000000C9
USONIC_SUP                        000000B1
USONIC_SUP_ECHO                   000000B4
US_LAT_ECHO                       PORTB, 4
US_LAT_TRIG                       PORTB, 3
US_SUP_ECHO                       PORTD, 2
US_SUP_TRIG                       PORTD, 1
W                                 00000000
WCOL                              00000007
WHL_ENC                           00000094
WR                                00000001
WREN                              00000002
WRERR                             00000003
WRT_DATA                          0000016D
WRT_LCD                           
WRT_MEM_LCD                       
WR_DATA                           00000000
WR_INS                            00000000
Z                                 00000002
_.org_1_0037                      00000037
_.org_1_005F                      0000005F
_.org_1_00B5                      000000B5
_.org_1_00CA                      000000CA
_.org_1_0298                      00000298
_.org_1_029A                      0000029A
_.org_1_029D                      0000029D
_.org_1_029E                      0000029E
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

_.org_1_02A5                      000002A5
_.org_1_02A8                      000002A8
_.org_1_02B0                      000002B0
_.org_1_02B3                      000002B3
_.org_1_02BB                      000002BB
_.org_1_02BE                      000002BE
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
__DEBUG                           
__MPLAB_DEBUGGER_PICKIT2          1
crit_dist                         0X08
crit_dist_l                       0x05
crit_dist_r                       0x02
d1                                00000037
d2                                00000038
d3                                00000039
MPASM 5.65                          MAIN.ASM   3-25-2016  17:54:09         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

i2c_common_setup                  00000000
long_del                          00000030
measured_distance_lat             00000047
measured_distance_sup             00000048
multiplex_count                   00000043
num_spots                         0000004B
read_rtc                          00000000
rob_lat_distance                  00000044
rob_long_distance                 00000046
rob_long_distance_count           00000045
rob_return                        00000049
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
spot_base_loc                     0000004C
spot_count                        0000004A
spot_detected                     00000042
start_min                         0000003A
start_min10                       0000003B
start_sec                         0000003C
start_sec10                       0000003D
stop_min                          0000003E
stop_min10                        0000003F
stop_sec                          00000040
stop_sec10                        00000041
temp_status                       00000032
temp_w                            00000031
write_rtc                         00000000

Errors   :     0
Warnings :     2 reported,     0 suppressed
Messages :    19 reported,     0 suppressed

