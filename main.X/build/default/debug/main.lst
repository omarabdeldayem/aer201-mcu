MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;******************************************************************************;
                      00002 ;        ____    ___  ______    ___  ____       ____  ____  ____    ___  ____  ;
                      00003 ;       |    \  /  _]|      T  /  _]|    \     |    \l    j|    \  /  _]|    \ ;
                      00004 ;       |  o  )/  [_ |      | /  [_ |  D  )    |  o  )|  T |  o  )/  [_ |  D  );
                      00005 ;       |   _/Y    _]l_j  l_jY    _]|    /     |   _/ |  | |   _/Y    _]|    / ;
                      00006 ;       |  |  |   [_   |  |  |   [_ |    \     |  |   |  | |  |  |   [_ |    \ ;
                      00007 ;       |  |  |     T  |  |  |     T|  .  Y    |  |   j  l |  |  |     T|  .  Y;
                      00008 ;       l__j  l_____j  l__j  l_____jl__j\_j    l__j  |____jl__j  l_____jl__j\_j;
                      00009 ;------------------------------------------------------------------------------;
                      00010 ;               AER201 Team 61 'Peter Piper' Pipe Inspector                    ;
                      00011 ;                        Author: Omar Abdeldayem                               ;
                      00012 ;                           Created: 1/12/2016                                 ;
                      00013 ;------------------------------------------------------------------------------;
                      00014 ; DESCRIPTION:                                                                                          
                                                               ;
                      00015 ; It does shit, yo.                                                                                     
                                                               ;
                      00016 ;******************************************************************************;
                      00017 ;******************************************************************************;
                      00018 ;******************************************************************************;
                      00019 
                      00020         List    p=16f877                    ; list directive to define processor
                      00021         #include        <p16f877.inc>       ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
2007   3F72           00022         __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP
                            _OFF
                      00023 
                      00024         #include        <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel     0x74
                      00011         clrf        0x74
                      00012         banksel     0x73
                      00013         clrf        0x73
                      00014         call        write_rtc           ;Write 0 to Seconds
                      00015         banksel     0x73
                      00016         incf        0x73                        ;Set register address to 1
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00017         call        write_rtc
                      00018         banksel     0x73
                      00019         incf        0x73                        ;Set register address to 2
                      00020         call        write_rtc
                      00021         banksel     0x73
                      00022         incf        0x73                        ;Set register address to 3
                      00023         call        write_rtc
                      00024         banksel     0x73
                      00025         incf        0x73                        ;Set register address to 4
                      00026         call        write_rtc
                      00027         banksel     0x73
                      00028         incf        0x73                        ;Set register address to 5
                      00029         call        write_rtc
                      00030         banksel     0x73
                      00031         incf        0x73                        ;Set register address to 6
                      00032         call        write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set macro       addliteral, datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel     0x73
                      00042         movlw       addliteral
                      00043         movwf       0x73
                      00044         banksel     0x74
                      00045         movlw       datliteral
                      00046         movwf       0x74        
                      00047         call        write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read macro      addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw       addliteral
                      00058         banksel     0x73
                      00059         movwf       0x73
                      00060         call        read_rtc
                      00061         banksel     0x75
                      00062         movf        0x75,w
                      00063         call        rtc_convert   
                      00064         endm
                      00065 
                      00066 
                      00067 
                      00068 
                      00069 
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00070 
                      00025         #include        <lcd.inc>
  0000                00001     extern      InitLCD,WR_INS,WR_DATA,CLR_LCD
                      00002 
                      00003 
                      00026 ;******************************************************************************;
                      00027 ;                               BANK0 RAM                                      ;
                      00028 ;******************************************************************************;
                      00029         CBLOCK      0x30
                      00030                     ; RTC I2C Mem
  00000030            00031         dt1         ; 0x30          
  00000031            00032         dt2
  00000032            00033         dt3
  00000033            00034         XBUF
  00000034            00035         count
  00000035            00036         CONTROL
  00000036            00037         ADD
  00000037            00038         DAT
  00000038            00039         flag
  00000039            00040         DOUT
  0000003A            00041         B1
  0000003B            00042         B2
                      00043                     ; LCD MEM
  0000003C            00044         lcd_tmp
  0000003D            00045         lcd_d1
  0000003E            00046         lcd_d2
  0000003F            00047         long_del
  00000040            00048         temp_w      ; 0x40
  00000041            00049         temp_status ; 0x41
                      00050                     ; DIVISION Registers
  00000042            00051         DIV_HI      ; 0X42
  00000043            00052         DIV_LO      ; 0X43
  00000044            00053         DIVISOR     ; 0X44
  00000045            00054         Q
  00000046            00055         d1
  00000047            00056         d2
  00000048            00057         d3
                      00058                     ; ROBOT VARS
  00000049            00059         start_min
  0000004A            00060         start_min10
  0000004B            00061         start_sec
  0000004C            00062         start_sec10
  0000004D            00063         stop_min
  0000004E            00064         stop_min10
  0000004F            00065         stop_sec
  00000050            00066         stop_sec10
  00000051            00067         spot_detected
  00000052            00068         multiplex_count
  00000053            00069         rob_lat_distance
  00000054            00070         rob_long_distance
  00000055            00071         measured_distance
  00000056            00072         rob_return
  00000057            00073         spot_count
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000058            00074         num_spots
  00000059            00075         spot_base_loc
                      00076         ENDC
                      00077 
                      00078 ;******************************************************************************;
                      00079 ;                               BANK0 RAM                                      ;
                      00080 ;******************************************************************************;
                      00081         #define     crit_dist       d'5'
                      00082 ;******************************************************************************;
                      00083 ;                               MACROS                                         ;
                      00084 ;******************************************************************************;
                      00085 MULT    macro       val1, val2, result
                      00086         MOVF        val1, W
                      00087         ADDWF       val1, W
                      00088         MOVWF       result
                      00089         DECFSZ      val2, f
                      00090         GOTO        $-3
                      00091         endm
                      00092         
                      00093 WRT_LCD macro       val
                      00094         MOVLW       val
                      00095         CALL        WR_DATA
                      00096         endm
                      00097 LCD_INS macro       val
                      00098         MOVLW       val
                      00099         CALL        WR_INS
                      00100         endm
                      00101         
                      00102 WRT_MEM_LCD macro   val
                      00103         MOVFW       val
                      00104         CALL        WR_DATA
                      00105         endm
                      00106 
                      00107 ;******************************************************************************;
                      00108 ;                          VECTOR TABLE                                        ;
                      00109 ;******************************************************************************;
                      00110         ORG         0x0000              ; RESET vector must always be at 0x00
0000   2???           00111         GOTO        INIT                ; Just jump to the main code section.
                      00112         ORG         0x0004
0004   2???           00113         GOTO        INT_HANDLER
                      00114 
                      00115 ;******************************************************************************;
                      00116 ;                         ROBOT INITIALIZATION                                 ;
                      00117 ;******************************************************************************;
0005                  00118 INIT
0005   1683           00119         BSF         STATUS, RP0         ; Select bank 1
0006   018B           00120         CLRF        INTCON              ; Disable interrupts for now
                      00121         
0007   3006           00122         MOVLW       0x06
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0008   009F           00123         MOVWF       ADCON1
                      00124         
0009   3018           00125         MOVLW       b'00011000'         ; PORT A pin mapping
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000A   0085           00126         MOVWF       TRISA
000B   30F3           00127         MOVLW       b'11110011'         ; PORT B pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000C   0086           00128         MOVWF       TRISB
000D   3079           00129         MOVLW       b'01111001'         ; PORT C pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000E   0087           00130         MOVWF       TRISC
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000F   0188           00131         CLRF        TRISD               ; PORT D pin mapping
0010   3007           00132         MOVLW       b'00000111'         ; PORT E pin mapping
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0011   0089           00133         MOVWF       TRISE
                      00134         
0012   3041           00135         MOVLW       b'01000001'         ; PWM pulsing period (484Hz)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0013   0092           00136         MOVWF       PR2
                      00137        
0014   1283           00138         BCF         STATUS, RP0         ; select bank 0
                      00139         
                      00140 ;       BSF         INTCON, RBIE        ; Enable interrupts
                      00141 ;       BSF         INTCON, INTE
                      00142 ;       BSF         INTCON, GIE
                      00143         
0015   0195           00144         CLRF        CCPR1L              ; Se Btup PWM pins
0016   019B           00145         CLRF        CCPR2L
0017   309C           00146         MOVLW       B'10011100'
0018   0097           00147         MOVWF       CCP1CON
0019   009D           00148         MOVWF       CCP2CON
                      00149         
001A   3005           00150         MOVLW       B'00000101'         ; Initialize and start timer 2
001B   0092           00151         MOVWF       T2CON
001C   0191           00152         CLRF        TMR2
001D   1512           00153         BSF         T2CON, TMR2ON
                      00154         
001E   3010           00155         MOVLW       0X10                ; TMR1 for Ultrasonic Sensors
001F   0090           00156         MOVWF       T1CON
0020   018F           00157         CLRF        TMR1H
0021   018E           00158         CLRF        TMR1L
                      00159         
0022   0185           00160         clrf        PORTA
0023   0186           00161         clrf        PORTB
0024   0187           00162         clrf        PORTC 
0025   0188           00163         clrf        PORTD
                      00164          
                      00165 ;       CALL        i2c_common_setup
                      00166 ;                   rtc_resetAll
                      00167 ;       CALL        SET_RTC_TIME
0026   2???           00168         CALL        InitLCD
                      00169         
0027   3000           00170         MOVLW       b'0'                ; Initialize variables
0028   00D8           00171         MOVWF       num_spots
0029   00D7           00172         MOVWF       spot_count
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002A   00D1           00173         MOVWF       spot_detected       
                      00174                                                 
002B   2???           00175         CALL        START_MSG
                      00176 ;******************************************************************************;
                      00177 ;                        ROBOT START AND STANDBY                               ;
                      00178 ;******************************************************************************;
002C                  00179 START_STDBY
002C   1C86           00180         BTFSS       PORTB, 1            ; Wait until data is available from the keypad
002D   2???           00181         GOTO        START_STDBY
                      00182 
002E   0E06           00183         SWAPF       PORTB, W            ; Read PortB<7:4> into W<3:0>
002F   390F           00184         ANDLW       0x0F
0030   2???           00185         CALL        CLR_LCD
                      00186 
0031   1886           00187         BTFSC       PORTB,1             ; Wait until key is released
0032   2???           00188         GOTO        $-1
                      00189         
0033   2???           00190         CALL        CLR_LCD
                      00191         ;CALL       GET_START_TIME
0034   1788           00192         BSF         PORTD, 7
0035   1708           00193         BSF         PORTD, 6
                      00194 
0036   2???           00195         GOTO        SCAN
                      00196 
                      00197 ;******************************************************************************;
                      00198 ;                           SENSOR CALIBRATION                                 ;
                      00199 ;******************************************************************************;
0037                  00200 CALIBRATE
0037   2???           00201         GOTO        CALIBRATE
                      00202         
                      00203 ;******************************************************************************;
                      00204 ;                         PIPE SCAN SUPERLOOP                                  ;
                      00205 ;******************************************************************************;
0038                  00206 SCAN
                      00207 ;       CALL        USONIC_SEND_PULSE
                      00208 ;       CALL        USONIC_READ_ECHO
0038   2???           00209         CALL        PWML
0039   2???           00210         CALL        PWMR
                      00211 ;       CALL        SHOW_RTC                ; DEBUG
                      00212         ;CALL       READ_IRS
003A   2???           00213         GOTO        SCAN
                      00214         
                      00215 ;******************************************************************************;
                      00216 ;                          INTERRUPT HANDLER                                   ;
                      00217 ;******************************************************************************;
003B                  00218 INT_HANDLER
003B   00C0           00219         MOVWF       temp_w
003C   0E03           00220         SWAPF       STATUS, W
003D   00C1           00221         MOVWF       temp_status
003E   100B           00222         BCF         INTCON, RBIF
003F   108B           00223         BCF         INTCON, INTF          ; Clear the interrupt flag
                      00224         
0040   2???           00225         CALL        WHL_ENC
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00226         
0041   0E41           00227         SWAPF       temp_status, W
0042   0083           00228         MOVWF       STATUS
0043   0EC0           00229         SWAPF       temp_w, F
0044   0E40           00230         SWAPF       temp_w, W
0045   2???           00231         GOTO        STOP_STDBY
0046   0009           00232         RETFIE
                      00233         
                      00234 ;******************************************************************************;
                      00235 ;                           PWM CONTROL                                        ;
                      00236 ;******************************************************************************;
0047                  00237 PWML    
Message[305]: Using default destination of 1 (file).
0047   0F95           00238         INCFSZ      CCPR1L
                      00239         ;CALL       DEL_20US
                      00240         ;CALL       DEL_20US
0048   2???           00241         GOTO        PWML
0049                  00242 PWML_DN 
Message[305]: Using default destination of 1 (file).
0049   0B95           00243         DECFSZ      CCPR1L
004A   2???           00244         GOTO        PWML_DN
004B   0008           00245         RETURN
                      00246 
004C                  00247 PWMR    
Message[305]: Using default destination of 1 (file).
004C   0F9B           00248         INCFSZ      CCPR2L
                      00249         ;CALL       DEL_20US
004D   2???           00250         GOTO        PWMR
004E                  00251 PWMR_DN 
Message[305]: Using default destination of 1 (file).
004E   0B9B           00252         DECFSZ      CCPR2L
004F   2???           00253         GOTO        PWMR_DN
0050   0008           00254         RETURN
                      00255 
                      00256 ;******************************************************************************;
                      00257 ;                       CYCLE INFRARED SENSORS                                 ;
                      00258 ;******************************************************************************;
0051                  00259 READ_IRS
0051   3007           00260         MOVLW       d'7'
0052   00D2           00261         MOVWF       multiplex_count
0053                  00262 MX_LOOP 
                      00263         ;CALL       LONG_DLY
                      00264         ;BCF        PORTE, 0
                      00265         ;BTFSC      multiplex_count, 0
                      00266         ;BSF        PORTE, 0
0053   1005           00267         BCF         PORTA, 0
0054   1852           00268         BTFSC       multiplex_count, 0
0055   1405           00269         BSF         PORTA, 0
0056   1085           00270         BCF         PORTA, 1
0057   18D2           00271         BTFSC       multiplex_count, 1
0058   1485           00272         BSF         PORTA, 1
0059   1105           00273         BCF         PORTA, 2
005A   1952           00274         BTFSC       multiplex_count, 2
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

005B   1505           00275         BSF         PORTA, 2
                      00276         
005C   2???           00277         CALL        LONG_DLY
005D   2???           00278         CALL        LONG_DLY
005E   2???           00279         CALL        LONG_DLY
005F   2???           00280         CALL        LONG_DLY    
0060   2???           00281         CALL        LONG_DLY
0061   2???           00282         CALL        LONG_DLY
0062   2???           00283         CALL        LONG_DLY
0063   2???           00284         CALL        LONG_DLY
0064   2???           00285         CALL        LONG_DLY
0065   2???           00286         CALL        LONG_DLY
0066   2???           00287         CALL        LONG_DLY
0067   2???           00288         CALL        LONG_DLY
0068   2???           00289         CALL        LONG_DLY
                      00290         
0069   1C07           00291         BTFSS       PORTC, 0
006A   2???           00292         GOTO        $+3
006B   0AD8           00293         INCF        num_spots, f
006C   1451           00294         BSF         spot_detected, 0
                      00295 
Message[305]: Using default destination of 1 (file).
006D   0BD2           00296         DECFSZ      multiplex_count
006E   2???           00297         GOTO        MX_LOOP
006F   0008           00298         RETURN
                      00299 ;******************************************************************************;
                      00300 ;                         WHEEL ENCODER ROUTINE                                ;
                      00301 ;******************************************************************************;
0070                  00302 WHL_ENC
0070   3013           00303         MOVLW       d'19'
Message[305]: Using default destination of 1 (file).
0071   07D4           00304         ADDWF       rob_long_distance
0072   0008           00305         RETURN
                      00306         
                      00307 ;******************************************************************************;
                      00308 ;                       TOGGLE ARM STATE ROUTINE                               ;
                      00309 ;******************************************************************************;
0073                  00310 ARM_TOGGLE
                      00311         ; control servo to control arm
                      00312         ; if degree is set to 180, set to 0
                      00313         ; otherwise set to 0
0073   2???           00314         GOTO        ARM_TOGGLE
                      00315 
                      00316 ;******************************************************************************;
                      00317 ;                         ROBOT REALIGNMENT ROUTINE                            ;
                      00318 ;******************************************************************************;
0074                  00319 REALIGN
0074   3003           00320         MOVLW       0x03
                      00321 ;       SUBWF       
0075   0008           00322         RETURN
                      00323         
                      00324 ;******************************************************************************;
                      00325 ;                     ULTRASONIC SENSOR SUBROUTINES                            ;
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00326 ;******************************************************************************;
0076                  00327 USONIC_SEND_PULSE
0076   1586           00328         BSF         PORTB, 3
0077   2???           00329         CALL        DEL_20US
0078   1186           00330         BCF         PORTB, 3
0079   0008           00331         RETURN
                      00332 
007A                  00333 USONIC_READ_ECHO
007A   1E06           00334         BTFSS       PORTB, 4
007B   2???           00335         GOTO        $-1
007C   1410           00336         BSF         T1CON, 0
007D   1A06           00337 USHOLD  BTFSC       PORTB, 4
007E   2???           00338         GOTO        USHOLD
007F   1010           00339         BCF         T1CON, 0
0080   080F           00340         MOVF        TMR1H, W
0081   00C2           00341         MOVWF       DIV_HI
0082   080E           00342         MOVF        TMR1L, W
0083   00C3           00343         MOVWF       DIV_LO
0084   018F           00344         CLRF        TMR1H
0085   018E           00345         CLRF        TMR1L
0086   303A           00346         MOVLW       d'58'
0087   00C4           00347         MOVWF       DIVISOR
0088   2???           00348         CALL        DIV16X8
0089   0845           00349         MOVF        Q, W
008A   00D5           00350         MOVWF       measured_distance
                      00351         ; CALL      rtc_convert
                      00352         ;CALL       CLR_LCD             ; DEBUG!
                      00353         ;WRT_MEM_LCD 0x77
                      00354         ;WRT_MEM_LCD 0x78
008B   3C05           00355         SUBLW       0x05
008C   00D3           00356         MOVWF       rob_lat_distance
                      00357         ;BTFSC      STATUS
008D   0008           00358         RETURN
                      00359 
                      00360 ;******************************************************************************;
                      00361 ;                           RETURN HOME ROUTINE                                ;
                      00362 ;******************************************************************************;
008E                  00363 RETURN_HOME
                      00364         
008E   0008           00365         RETURN
                      00366 
                      00367 
                      00368 ;******************************************************************************;
                      00369 ;                             STOP STANDBY                                     ;
                      00370 ;******************************************************************************;
008F                  00371 STOP_STDBY
008F   2???           00372         CALL        GET_STOP_TIME
0090   2???           00373         CALL        STOP_STDBY_MSG
0091   1C86           00374         BTFSS       PORTB, 1            ; Wait until data is available from the keypad
0092   2???           00375         GOTO        STOP_STDBY
                      00376 
0093   0E06           00377         SWAPF       PORTB, W            ; Read PortB<7:4> into W<3:0>
0094   390F           00378         ANDLW       0x0F 
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0095   2???           00379         CALL        CLR_LCD
0096   2???           00380         GOTO        STOP_DATA
                      00381 
                      00382 ;******************************************************************************;
                      00383 ;                               DISPLAY DATA                                   ;
                      00384 ;******************************************************************************;
0097                  00385 STOP_DATA       
0097   2???           00386         CALL        WRT_DATA
0098   2???           00387         CALL        LONG_DLY
0099   2???           00388         CALL        LONG_DLY
009A   2???           00389         CALL        LONG_DLY
009B   2???           00390         CALL        LONG_DLY
009C   2???           00391         CALL        LONG_DLY
009D   2???           00392         CALL        LONG_DLY
009E   2???           00393         CALL        LONG_DLY
                      00394         
009F   2???           00395         CALL        CLR_LCD
                      00396         
00A0   3059           00397         MOVLW       spot_base_loc
00A1   0084           00398         MOVWF       FSR
                      00399         
                      00400         
00A2                  00401 DATA_LOOP       
                      00402         WRT_LCD     "S"
00A2   3053               M         MOVLW       "S"
00A3   2???               M         CALL        WR_DATA
                      00403         WRT_LCD     "P"
00A4   3050               M         MOVLW       "P"
00A5   2???               M         CALL        WR_DATA
                      00404         WRT_LCD     "O"
00A6   304F               M         MOVLW       "O"
00A7   2???               M         CALL        WR_DATA
                      00405         WRT_LCD     "T"
00A8   3054               M         MOVLW       "T"
00A9   2???               M         CALL        WR_DATA
                      00406         WRT_LCD     ":"
00AA   303A               M         MOVLW       ":"
00AB   2???               M         CALL        WR_DATA
                      00407         WRT_LCD     " "
00AC   3020               M         MOVLW       " "
00AD   2???               M         CALL        WR_DATA
                      00408 ;       WRT_MEM_LCD INDF
                      00409         WRT_LCD     "c"
00AE   3063               M         MOVLW       "c"
00AF   2???               M         CALL        WR_DATA
                      00410         WRT_LCD     "m"
00B0   306D               M         MOVLW       "m"
00B1   2???               M         CALL        WR_DATA
                      00411         
00B2   2???           00412         CALL        LONG_DLY
00B3   2???           00413         CALL        LONG_DLY
00B4   2???           00414         CALL        LONG_DLY
00B5   2???           00415         CALL        LONG_DLY
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B6   2???           00416         CALL        LONG_DLY
00B7   2???           00417         CALL        LONG_DLY
00B8   2???           00418         CALL        LONG_DLY
00B9   2???           00419         CALL        LONG_DLY
00BA   2???           00420         CALL        LONG_DLY
00BB   2???           00421         CALL        CLR_LCD
00BC   0A84           00422         INCF        FSR, F
                      00423 
00BD   0BD7           00424         DECFSZ      spot_count, F
00BE   2???           00425         GOTO        DATA_LOOP
                      00426         
                      00427         WRT_LCD     "E"
00BF   3045               M         MOVLW       "E"
00C0   2???               M         CALL        WR_DATA
                      00428         WRT_LCD     "N"
00C1   304E               M         MOVLW       "N"
00C2   2???               M         CALL        WR_DATA
                      00429         WRT_LCD     "D"
00C3   3044               M         MOVLW       "D"
00C4   2???               M         CALL        WR_DATA
                      00430 
00C5   2???           00431         GOTO        FINISH
                      00432 
                      00433 ;******************************************************************************;
                      00434 ;                                  HELLO                                       ;
                      00435 ;******************************************************************************;
00C6                  00436 START_MSG
                      00437         WRT_LCD     "H"
00C6   3048               M         MOVLW       "H"
00C7   2???               M         CALL        WR_DATA
                      00438         WRT_LCD     "I"
00C8   3049               M         MOVLW       "I"
00C9   2???               M         CALL        WR_DATA
                      00439         WRT_LCD     "T"
00CA   3054               M         MOVLW       "T"
00CB   2???               M         CALL        WR_DATA
                      00440         WRT_LCD     " "
00CC   3020               M         MOVLW       " "
00CD   2???               M         CALL        WR_DATA
                      00441         WRT_LCD     "*"
00CE   302A               M         MOVLW       "*"
00CF   2???               M         CALL        WR_DATA
                      00442         WRT_LCD     " "
00D0   3020               M         MOVLW       " "
00D1   2???               M         CALL        WR_DATA
                      00443         WRT_LCD     "T"
00D2   3054               M         MOVLW       "T"
00D3   2???               M         CALL        WR_DATA
                      00444         WRT_LCD     "O"
00D4   304F               M         MOVLW       "O"
00D5   2???               M         CALL        WR_DATA
                      00445         WRT_LCD     " "
00D6   3020               M         MOVLW       " "
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00D7   2???               M         CALL        WR_DATA
                      00446         WRT_LCD     "S"
00D8   3053               M         MOVLW       "S"
00D9   2???               M         CALL        WR_DATA
                      00447         WRT_LCD     "T"
00DA   3054               M         MOVLW       "T"
00DB   2???               M         CALL        WR_DATA
                      00448         WRT_LCD     "A"
00DC   3041               M         MOVLW       "A"
00DD   2???               M         CALL        WR_DATA
                      00449         WRT_LCD     "R"
00DE   3052               M         MOVLW       "R"
00DF   2???               M         CALL        WR_DATA
                      00450         WRT_LCD     "T"
00E0   3054               M         MOVLW       "T"
00E1   2???               M         CALL        WR_DATA
00E2   0008           00451         RETURN
                      00452         
                      00453 ;******************************************************************************;
                      00454 ;                                GOODBYE                                       ;
                      00455 ;******************************************************************************;
00E3                  00456 STOP_STDBY_MSG
                      00457         WRT_LCD     "H"
00E3   3048               M         MOVLW       "H"
00E4   2???               M         CALL        WR_DATA
                      00458         WRT_LCD     "I"
00E5   3049               M         MOVLW       "I"
00E6   2???               M         CALL        WR_DATA
                      00459         WRT_LCD     "T"
00E7   3054               M         MOVLW       "T"
00E8   2???               M         CALL        WR_DATA
                      00460         WRT_LCD     " "
00E9   3020               M         MOVLW       " "
00EA   2???               M         CALL        WR_DATA
                      00461         WRT_LCD     "*"
00EB   302A               M         MOVLW       "*"
00EC   2???               M         CALL        WR_DATA
                      00462         WRT_LCD     " "
00ED   3020               M         MOVLW       " "
00EE   2???               M         CALL        WR_DATA
                      00463         WRT_LCD     "F"
00EF   3046               M         MOVLW       "F"
00F0   2???               M         CALL        WR_DATA
                      00464         WRT_LCD     "O"
00F1   304F               M         MOVLW       "O"
00F2   2???               M         CALL        WR_DATA
                      00465         WRT_LCD     "R"
00F3   3052               M         MOVLW       "R"
00F4   2???               M         CALL        WR_DATA
                      00466         WRT_LCD     " "
00F5   3020               M         MOVLW       " "
00F6   2???               M         CALL        WR_DATA
                      00467         WRT_LCD     "D"
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F7   3044               M         MOVLW       "D"
00F8   2???               M         CALL        WR_DATA
                      00468         WRT_LCD     "A"
00F9   3041               M         MOVLW       "A"
00FA   2???               M         CALL        WR_DATA
                      00469         WRT_LCD     "T"
00FB   3054               M         MOVLW       "T"
00FC   2???               M         CALL        WR_DATA
                      00470         WRT_LCD     "A"
00FD   3041               M         MOVLW       "A"
00FE   2???               M         CALL        WR_DATA
00FF   0008           00471         RETURN
                      00472          
                      00473 ;******************************************************************************;
                      00474 ;                                 DATA                                         ;
                      00475 ;******************************************************************************;
0100                  00476 WRT_DATA        
                      00477         WRT_LCD     "N"
0100   304E               M         MOVLW       "N"
0101   2???               M         CALL        WR_DATA
                      00478         WRT_LCD     "U"
0102   3055               M         MOVLW       "U"
0103   2???               M         CALL        WR_DATA
                      00479         WRT_LCD     "M"
0104   304D               M         MOVLW       "M"
0105   2???               M         CALL        WR_DATA
                      00480         WRT_LCD     " "
0106   3020               M         MOVLW       " "
0107   2???               M         CALL        WR_DATA
                      00481         WRT_LCD     "S"
0108   3053               M         MOVLW       "S"
0109   2???               M         CALL        WR_DATA
                      00482         WRT_LCD     "P"
010A   3050               M         MOVLW       "P"
010B   2???               M         CALL        WR_DATA
                      00483         WRT_LCD     "O"
010C   304F               M         MOVLW       "O"
010D   2???               M         CALL        WR_DATA
                      00484         WRT_LCD     "T"
010E   3054               M         MOVLW       "T"
010F   2???               M         CALL        WR_DATA
                      00485         WRT_LCD     "S"
0110   3053               M         MOVLW       "S"
0111   2???               M         CALL        WR_DATA
                      00486         WRT_LCD     ":"
0112   303A               M         MOVLW       ":"
0113   2???               M         CALL        WR_DATA
                      00487         WRT_LCD     " "
0114   3020               M         MOVLW       " "
0115   2???               M         CALL        WR_DATA
                      00488 ;       WRT_MEM_LCD num_spots
0116   0008           00489         RETURN
                      00490 ;******************************************************************************;
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00491 ;                           RETREIVE START TIME                                ;
                      00492 ;******************************************************************************;
0117                  00493 GET_START_TIME
                      00494         ;Get minute             
                      00495         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0117   3001               M         movlw       0x01
0118   1283 1303          M         banksel     0x73
011A   00F3               M         movwf       0x73
011B   2???               M         call        read_rtc
011C   1283 1303          M         banksel     0x75
011E   0875               M         movf        0x75,w
011F   2???               M         call        rtc_convert   
0120   0877           00496         MOVFW       0X77
0121   00CA           00497         MOVWF       start_min10
0122   0878           00498         MOVFW       0X78
0123   00C9           00499         MOVWF       start_min
                      00500 
                      00501         ;Get seconds
                      00502         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0124   3000               M         movlw       0x00
0125   1283 1303          M         banksel     0x73
0127   00F3               M         movwf       0x73
0128   2???               M         call        read_rtc
0129   1283 1303          M         banksel     0x75
012B   0875               M         movf        0x75,w
012C   2???               M         call        rtc_convert   
012D   0877           00503         MOVFW       0X77
012E   00CC           00504         MOVWF       start_sec10
012F   0878           00505         MOVFW       0X78
0130   00CB           00506         MOVWF       start_sec
0131   0008           00507         RETURN
                      00508 ;******************************************************************************;
                      00509 ;                           RETREIVE STOP TIME                                 ;
                      00510 ;******************************************************************************;
0132                  00511 GET_STOP_TIME
                      00512         ;Get minute             
                      00513         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0132   3001               M         movlw       0x01
0133   1283 1303          M         banksel     0x73
0135   00F3               M         movwf       0x73
0136   2???               M         call        read_rtc
0137   1283 1303          M         banksel     0x75
0139   0875               M         movf        0x75,w
013A   2???               M         call        rtc_convert   
013B   0877           00514         MOVFW       0X77
013C   00CE           00515         MOVWF       stop_min10
013D   0878           00516         MOVFW       0X78
013E   00CD           00517         MOVWF       stop_min
                      00518 
                      00519         ;Get seconds
                      00520         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
013F   3000               M         movlw       0x00
0140   1283 1303          M         banksel     0x73
0142   00F3               M         movwf       0x73
0143   2???               M         call        read_rtc
0144   1283 1303          M         banksel     0x75
0146   0875               M         movf        0x75,w
0147   2???               M         call        rtc_convert   
0148   0877           00521         MOVFW       0X77
0149   00D0           00522         MOVWF       stop_sec10
014A   0878           00523         MOVFW       0X78
014B   00CF           00524         MOVWF       stop_sec
014C   0008           00525         RETURN
                      00526 ;******************************************************************************;
                      00527 ;                       DISPLAY RTC TIME TO LCD                                ;
                      00528 ;******************************************************************************;
014D                  00529 SHOW_RTC
                      00530         ;clear LCD screen
014D   3001           00531         movlw       b'00000001'
014E   2???           00532         call        WR_INS
                      00533 
                      00534         ;Get year
                      00535         WRT_LCD     "2"
014F   3032               M         MOVLW       "2"
0150   2???               M         CALL        WR_DATA
                      00536         WRT_LCD     "0"
0151   3030               M         MOVLW       "0"
0152   2???               M         CALL        WR_DATA
                      00537         rtc_read    0x06                ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0153   3006               M         movlw       0x06
0154   1283 1303          M         banksel     0x73
0156   00F3               M         movwf       0x73
0157   2???               M         call        read_rtc
0158   1283 1303          M         banksel     0x75
015A   0875               M         movf        0x75,w
015B   2???               M         call        rtc_convert   
                      00538         WRT_MEM_LCD 0x77
015C   0877               M         MOVFW       0x77
015D   2???               M         CALL        WR_DATA
                      00539         WRT_MEM_LCD 0x78
015E   0878               M         MOVFW       0x78
015F   2???               M         CALL        WR_DATA
                      00540 
                      00541         WRT_LCD     "/"
0160   302F               M         MOVLW       "/"
0161   2???               M         CALL        WR_DATA
                      00542 
                      00543         ;Get month
                      00544         rtc_read    0x05                ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0162   3005               M         movlw       0x05
0163   1283 1303          M         banksel     0x73
0165   00F3               M         movwf       0x73
0166   2???               M         call        read_rtc
0167   1283 1303          M         banksel     0x75
0169   0875               M         movf        0x75,w
016A   2???               M         call        rtc_convert   
                      00545         WRT_MEM_LCD 0x77
016B   0877               M         MOVFW       0x77
016C   2???               M         CALL        WR_DATA
                      00546         WRT_MEM_LCD 0x78
016D   0878               M         MOVFW       0x78
016E   2???               M         CALL        WR_DATA
                      00547 
                      00548         WRT_LCD     "/"
016F   302F               M         MOVLW       "/"
0170   2???               M         CALL        WR_DATA
                      00549 
                      00550         ;Get day
                      00551         rtc_read    0x04                ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0171   3004               M         movlw       0x04
0172   1283 1303          M         banksel     0x73
0174   00F3               M         movwf       0x73
0175   2???               M         call        read_rtc
0176   1283 1303          M         banksel     0x75
0178   0875               M         movf        0x75,w
0179   2???               M         call        rtc_convert   
                      00552         WRT_MEM_LCD 0x77
017A   0877               M         MOVFW       0x77
017B   2???               M         CALL        WR_DATA
                      00553         WRT_MEM_LCD 0x78
017C   0878               M         MOVFW       0x78
017D   2???               M         CALL        WR_DATA
                      00554 
017E   30C0           00555         movlw       B'11000000'         ;Next line displays (hour):(min):(sec) **:**:**
017F   2???           00556         call        WR_INS
                      00557         ;Get hour
                      00558         rtc_read    0x02                ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0180   3002               M         movlw       0x02
0181   1283 1303          M         banksel     0x73
0183   00F3               M         movwf       0x73
0184   2???               M         call        read_rtc
0185   1283 1303          M         banksel     0x75
0187   0875               M         movf        0x75,w
0188   2???               M         call        rtc_convert   
                      00559         WRT_MEM_LCD 0x77
0189   0877               M         MOVFW       0x77
018A   2???               M         CALL        WR_DATA
                      00560         WRT_MEM_LCD 0x78
018B   0878               M         MOVFW       0x78
018C   2???               M         CALL        WR_DATA
                      00561         WRT_LCD     ":"
018D   303A               M         MOVLW       ":"
018E   2???               M         CALL        WR_DATA
                      00562 
                      00563         ;Get minute             
                      00564         rtc_read    0x01                ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
018F   3001               M         movlw       0x01
0190   1283 1303          M         banksel     0x73
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0192   00F3               M         movwf       0x73
0193   2???               M         call        read_rtc
0194   1283 1303          M         banksel     0x75
0196   0875               M         movf        0x75,w
0197   2???               M         call        rtc_convert   
                      00565         WRT_MEM_LCD 0x77
0198   0877               M         MOVFW       0x77
0199   2???               M         CALL        WR_DATA
                      00566         WRT_MEM_LCD 0x78
019A   0878               M         MOVFW       0x78
019B   2???               M         CALL        WR_DATA
                      00567         WRT_LCD     ":"
019C   303A               M         MOVLW       ":"
019D   2???               M         CALL        WR_DATA
                      00568 
                      00569         ;Get seconds
                      00570         rtc_read    0x00                ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
019E   3000               M         movlw       0x00
019F   1283 1303          M         banksel     0x73
01A1   00F3               M         movwf       0x73
01A2   2???               M         call        read_rtc
01A3   1283 1303          M         banksel     0x75
01A5   0875               M         movf        0x75,w
01A6   2???               M         call        rtc_convert   
                      00571         WRT_MEM_LCD 0x77
01A7   0877               M         MOVFW       0x77
01A8   2???               M         CALL        WR_DATA
                      00572         WRT_MEM_LCD 0x78
01A9   0878               M         MOVFW       0x78
01AA   2???               M         CALL        WR_DATA
                      00573 
01AB   0008           00574         RETURN
                      00575 ;******************************************************************************;
                      00576 ;                       INITIALIZE RTC TIME                                    ;
                      00577 ;******************************************************************************;                
01AC                  00578 SET_RTC_TIME
                      00579         rtc_resetAll    ;reset rtc
                          M ;input:         none
                          M ;output:        none
                          M ;desc:          Resets all the time keeping registers on the RTC to zero
01AC   1283 1303          M         banksel     0x74
01AE   01F4               M         clrf        0x74
01AF   1283 1303          M         banksel     0x73
01B1   01F3               M         clrf        0x73
01B2   2???               M         call        write_rtc           ;Write 0 to Seconds
01B3   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01B5   0AF3               M         incf        0x73                        ;Set register address to 1
01B6   2???               M         call        write_rtc
01B7   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
01B9   0AF3               M         incf        0x73                        ;Set register address to 2
01BA   2???               M         call        write_rtc
01BB   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
01BD   0AF3               M         incf        0x73                        ;Set register address to 3
01BE   2???               M         call        write_rtc
01BF   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
01C1   0AF3               M         incf        0x73                        ;Set register address to 4
01C2   2???               M         call        write_rtc
01C3   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
01C5   0AF3               M         incf        0x73                        ;Set register address to 5
01C6   2???               M         call        write_rtc
01C7   1283 1303          M         banksel     0x73
Message[305]: Using default destination of 1 (file).
01C9   0AF3               M         incf        0x73                        ;Set register address to 6
01CA   2???               M         call        write_rtc
                      00580 
                      00581         rtc_set     0x00,       B'10000000'
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
01CB   1283 1303          M         banksel     0x73
01CD   3000               M         movlw       0x00
01CE   00F3               M         movwf       0x73
01CF   1283 1303          M         banksel     0x74
01D1   3080               M         movlw       B'10000000'
01D2   00F4               M         movwf       0x74        
01D3   2???               M         call        write_rtc
                      00582 
                      00583         ;set time 
                      00584         rtc_set     0x06,       B'00010110'             ; Year
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
01D4   1283 1303          M         banksel     0x73
01D6   3006               M         movlw       0x06
01D7   00F3               M         movwf       0x73
01D8   1283 1303          M         banksel     0x74
01DA   3016               M         movlw       B'00010110'
01DB   00F4               M         movwf       0x74        
01DC   2???               M         call        write_rtc
                      00585         rtc_set     0x05,       B'00000100'             ; Month
                          M ;input:         addliteral: value of address
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
01DD   1283 1303          M         banksel     0x73
01DF   3005               M         movlw       0x05
01E0   00F3               M         movwf       0x73
01E1   1283 1303          M         banksel     0x74
01E3   3004               M         movlw       B'00000100'
01E4   00F4               M         movwf       0x74        
01E5   2???               M         call        write_rtc
                      00586         rtc_set     0x04,       B'00000110'             ; Date
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
01E6   1283 1303          M         banksel     0x73
01E8   3004               M         movlw       0x04
01E9   00F3               M         movwf       0x73
01EA   1283 1303          M         banksel     0x74
01EC   3006               M         movlw       B'00000110'
01ED   00F4               M         movwf       0x74        
01EE   2???               M         call        write_rtc
                      00587         rtc_set     0x03,       B'00000010'             ; Day
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
01EF   1283 1303          M         banksel     0x73
01F1   3003               M         movlw       0x03
01F2   00F3               M         movwf       0x73
01F3   1283 1303          M         banksel     0x74
01F5   3002               M         movlw       B'00000010'
01F6   00F4               M         movwf       0x74        
01F7   2???               M         call        write_rtc
                      00588         rtc_set     0x02,       B'00000000'             ; Hours
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
01F8   1283 1303          M         banksel     0x73
01FA   3002               M         movlw       0x02
01FB   00F3               M         movwf       0x73
01FC   1283 1303          M         banksel     0x74
01FE   3000               M         movlw       B'00000000'
01FF   00F4               M         movwf       0x74        
0200   2???               M         call        write_rtc
                      00589         rtc_set     0x01,       B'00000000'             ; Minutes
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
0201   1283 1303          M         banksel     0x73
0203   3001               M         movlw       0x01
0204   00F3               M         movwf       0x73
0205   1283 1303          M         banksel     0x74
0207   3000               M         movlw       B'00000000'
0208   00F4               M         movwf       0x74        
0209   2???               M         call        write_rtc
                      00590         rtc_set     0x00,       B'00000000'             ; Seconds
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
020A   1283 1303          M         banksel     0x73
020C   3000               M         movlw       0x00
020D   00F3               M         movwf       0x73
020E   1283 1303          M         banksel     0x74
0210   3000               M         movlw       B'00000000'
0211   00F4               M         movwf       0x74        
0212   2???               M         call        write_rtc
0213   0008           00591         return
                      00592 
                      00593 ;******************************************************************************;                
                      00594 ;******************************************************************************;
                      00595 ;******************************************************************************;
0214                  00596 DIV16X8 ; DIV_HI and DIV_LO / DIVSOR.  result to Q
                      00597                 ; does not deal with divide by 0 case
0214   01C5           00598         CLRF Q
0215                  00599 DIV_1
0215   0844           00600         MOVF DIVISOR, W
0216   02C3           00601         SUBWF DIV_LO, F
0217   1C03           00602         BTFSS STATUS, C ; if positive skip
0218   2???           00603         GOTO BORROW
0219   2???           00604         GOTO DIV_2
021A                  00605 BORROW
021A   3001           00606         MOVLW 0x01
021B   02C2           00607         SUBWF DIV_HI, F ; DIV_HI = DIV_HI - 1
021C   1C03           00608         BTFSS STATUS, C ; if no borrow occurred
021D   2???           00609         GOTO DIV_DONE   
021E                  00610 DIV_2
021E   0AC5           00611         INCF Q, F
021F   2???           00612         GOTO DIV_1
0220                  00613 DIV_DONE
0220   0008           00614         RETURN
                      00615         
0221                  00616 LONG_DLY
0221   30FF           00617         MOVLW       0xFF
0222   00BF           00618         MOVWF       long_del
0223                  00619 LD_LOOP 
Warning[207]: Found label after column 1. (LCD_DLY)
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0223                  00620         LCD_DLY
0223   0BBF           00621         DECFSZ      long_del, f
0224   2???           00622         GOTO        LD_LOOP
0225   0008           00623         RETURN
                      00624 
0226                  00625 DEL_20US
0226   3021           00626         movlw   0x21
0227   00C6           00627         movwf   d1
0228                  00628 DEL_20US_0
0228   0BC6           00629         decfsz  d1, f
0229   2???           00630         goto    DEL_20US_0
022A   0008           00631         RETURN
                      00632 
022B                  00633 FINISH  
022B   2???           00634         GOTO    FINISH
                      00635         
3F72                  00636         END
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE 23


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADD                               00000036
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ARM_TOGGLE                        00000073
B1                                0000003A
B2                                0000003B
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BORROW                            0000021A
BRGH                              00000002
C                                 00000000
CALIBRATE                         00000037
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE 24


SYMBOL TABLE
  LABEL                             VALUE 

CKP                               00000004
CLR_LCD                           00000000
CONTROL                           00000035
CREN                              00000004
CSRC                              00000007
D                                 00000005
DAT                               00000037
DATA_ADDRESS                      00000005
DATA_LOOP                         000000A2
DC                                00000001
DEL_20US                          00000226
DEL_20US_0                        00000228
DIV16X8                           00000214
DIVISOR                           00000044
DIV_1                             00000215
DIV_2                             0000021E
DIV_DONE                          00000220
DIV_HI                            00000042
DIV_LO                            00000043
DOUT                              00000039
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FINISH                            0000022B
FSR                               00000004
GCEN                              00000007
GET_START_TIME                    00000117
GET_STOP_TIME                     00000132
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INIT                              00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE 25


SYMBOL TABLE
  LABEL                             VALUE 

INTF                              00000001
INT_HANDLER                       0000003B
IRP                               00000007
InitLCD                           00000000
LCD_DLY                           00000223
LCD_INS                           
LD_LOOP                           00000223
LONG_DLY                          00000221
MULT                              
MX_LOOP                           00000053
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

PSPMODE                           00000004
PWML                              00000047
PWML_DN                           00000049
PWMR                              0000004C
PWMR_DN                           0000004E
Q                                 00000045
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_IRS                          00000051
READ_WRITE                        00000002
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

REALIGN                           00000074
RETURN_HOME                       0000008E
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SCAN                              00000038
SEN                               00000000
SET_RTC_TIME                      000001AC
SHOW_RTC                          0000014D
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
START_MSG                         000000C6
START_STDBY                       0000002C
STATUS                            00000003
STOP_DATA                         00000097
STOP_STDBY                        0000008F
STOP_STDBY_MSG                    000000E3
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
USHOLD                            0000007D
USONIC_READ_ECHO                  0000007A
USONIC_SEND_PULSE                 00000076
W                                 00000000
WCOL                              00000007
WHL_ENC                           00000070
WR                                00000001
WREN                              00000002
WRERR                             00000003
WRT_DATA                          00000100
WRT_LCD                           
WRT_MEM_LCD                       
WR_DATA                           00000000
WR_INS                            00000000
XBUF                              00000033
Z                                 00000002
_.org_1_0032                      00000032
_.org_1_006A                      0000006A
_.org_1_007B                      0000007B
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
__DEBUG                           
__MPLAB_DEBUGGER_PICKIT2          1
count                             00000034
crit_dist                         d'5'
d1                                00000046
d2                                00000047
d3                                00000048
dt1                               00000030
dt2                               00000031
dt3                               00000032
flag                              00000038
i2c_common_setup                  00000000
lcd_d1                            0000003D
lcd_d2                            0000003E
lcd_tmp                           0000003C
long_del                          0000003F
measured_distance                 00000055
multiplex_count                   00000052
num_spots                         00000058
read_rtc                          00000000
rob_lat_distance                  00000053
rob_long_distance                 00000054
rob_return                        00000056
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
spot_base_loc                     00000059
spot_count                        00000057
spot_detected                     00000051
start_min                         00000049
start_min10                       0000004A
start_sec                         0000004B
start_sec10                       0000004C
stop_min                          0000004D
stop_min10                        0000004E
MPASM 5.65                          MAIN.ASM   3-4-2016  17:02:28         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

stop_sec                          0000004F
stop_sec10                        00000050
temp_status                       00000041
temp_w                            00000040
write_rtc                         00000000

Errors   :     0
Warnings :     1 reported,     0 suppressed
Messages :    19 reported,     0 suppressed

